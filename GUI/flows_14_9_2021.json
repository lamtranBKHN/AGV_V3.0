[
    {
        "id": "329e27e2.5e5fb8",
        "type": "tab",
        "label": "AGV - 20.12",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2b5ed7dd.464b08",
        "type": "tab",
        "label": "Get Data from database",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e4c679fa.2843d8",
        "type": "tab",
        "label": "Display system overview map",
        "disabled": false,
        "info": ""
    },
    {
        "id": "32b023fb.1f242c",
        "type": "tab",
        "label": "MQTT Communication",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d3057b7.7f9ca88",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3c86159908994f13",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a2843df8.8fd42",
        "type": "group",
        "z": "2b5ed7dd.464b08",
        "name": "Database",
        "style": {
            "stroke": "#ffC000",
            "stroke-opacity": "0.77",
            "label": true,
            "fill": "#ffC000",
            "fill-opacity": "0.32"
        },
        "nodes": [
            "77197d2f.e3c974",
            "52c11e0e.23919",
            "6d7f7c91.e09b14",
            "58e520cf.5dd6",
            "89d7d379.11542",
            "f7c6aa4d.f09bd8",
            "80a177fd.dfc278",
            "2dafc0b6.629d6",
            "6c84bf83.a837c",
            "cc11e9c.c7c1218",
            "8068a3c0.d9fd5",
            "3038d60e.f363ba",
            "98f41439.851228",
            "8e89c44c.fc1aa8",
            "fcbb39f2.9bb258",
            "f6f78294.173ee",
            "b56d57c4.714668",
            "fb9bcdca.6b769",
            "7e5c6d4f.5bb924",
            "880e45aa.697268",
            "915eeace.881358",
            "813efd31.5b7eb",
            "180a9c11.bcfd54",
            "76f52270.372e7c",
            "e72da03.941bb6",
            "e832482c.3d71b8",
            "407030b0.e026f",
            "1e447b6c.607a15",
            "626c4489.d13f1c",
            "77e3797a.2531a8",
            "9646d63e.5c3f78",
            "7a5cd942.d8bd88",
            "597767b8.629678",
            "b12573e3.4ac34",
            "aad68a8c.9142e8",
            "eb9e0b8f.827b28",
            "5f6197b6.e8c888",
            "e66b9db5.56086",
            "a05f16e7.e89258",
            "5c9d7cf9.9210f4",
            "1da0d95e.087237",
            "f27fa0cc.3d36b",
            "dd05e34.850a92"
        ],
        "x": 28,
        "y": 39
    },
    {
        "id": "178da9bd.7122c6",
        "type": "group",
        "z": "e4c679fa.2843d8",
        "name": "Display Map",
        "style": {
            "fill": "#ffcf3f",
            "fill-opacity": "0.52",
            "label": true
        },
        "nodes": [
            "22aac6d9.964c5a",
            "973e8c1c.7e04b",
            "dcccc8a8.147158",
            "9deedbac.9b86d8",
            "1c7cd7ef.b23a98",
            "b341ff1.a2c42",
            "aa5aadbe.487ad",
            "770e95ad.49e05c",
            "a96cf21c.449eb",
            "5e5c1649.ed7618",
            "b7a44681.720e68"
        ],
        "x": 134,
        "y": 39
    },
    {
        "id": "ff9fbe95.2d40e",
        "type": "group",
        "z": "e4c679fa.2843d8",
        "name": "Display map element information",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffdf7f",
            "fill-opacity": "0.43",
            "label": true
        },
        "nodes": [
            "9ce21aea.979bc8",
            "45aed6de.8b8f88",
            "c4c8dd0c.230f",
            "a3151253.f90fe",
            "73cd25a8.1f9c7c",
            "b1ff1bfc.9c8ab8",
            "dd20ef66.28b35",
            "3825592a.fa5876",
            "3a7f4310.a73d8c",
            "dcadf85e.4cfb98",
            "34713e6c.fc9c12",
            "f91660fa.54fc",
            "75e64579.7be56c",
            "80a99c74.fc181",
            "701cde21.7a5f9",
            "3c9bceea.084012",
            "dec4419a.b793",
            "ff5ca82b.d3e868",
            "5fc64713.bd6908"
        ],
        "x": 134,
        "y": 399
    },
    {
        "id": "5424fb79.190bc4",
        "type": "group",
        "z": "329e27e2.5e5fb8",
        "name": "System overview",
        "style": {
            "label": true,
            "fill": "#ffC000",
            "fill-opacity": "0.41"
        },
        "nodes": [
            "b3d4bc8e.f1fc9",
            "78fac503.3c059c",
            "709bed77.fb46f4",
            "7e9776ee.6e1de8",
            "af99f943.7b3188",
            "1141a0f8.7f7ebf",
            "71521ef9.6d8cd",
            "7e71843d.45a2bc",
            "d395301d.af384",
            "f96fbae.a51f548",
            "387c08e5.4f8508",
            "79471e9d.e2a53",
            "84f0e8f5.092258",
            "2f0b9923.d9cfd6",
            "2e8693a9.e62d0c",
            "36f2de54.90e642",
            "10075c11.d63454",
            "4fe54c7b.ccf644",
            "6e3e8688.00f2b8",
            "b8763d33.a3583",
            "dd238a75.49e3a8",
            "cf71e4a8.c63518",
            "d166ccd7.d0443",
            "6bf81264b15d62f7",
            "543742d355c8bb4b",
            "61240b4bf25f198b",
            "d2e67cdec1543aef",
            "fd02487e514e6af4"
        ],
        "x": 714,
        "y": 39,
        "w": 1092,
        "h": 702
    },
    {
        "id": "ad04ae0d.d277a",
        "type": "group",
        "z": "329e27e2.5e5fb8",
        "name": "Nav bar",
        "style": {
            "fill": "#ffcf3f",
            "fill-opacity": "0.33",
            "label": true
        },
        "nodes": [
            "1dce0df6.7d5c02",
            "1643cbfb.de1e34",
            "65af776b.88a238",
            "712bd357.13211c",
            "553168f4.b39d28",
            "bef2ab36.111268",
            "4a748544.23f20c",
            "f0523f00.b2603",
            "9e5fd86c.9d89a8",
            "8cf578a6.290918",
            "7f97e2da.fafedc"
        ],
        "x": 14,
        "y": 539,
        "w": 572,
        "h": 202
    },
    {
        "id": "11f469d2.968bc6",
        "type": "group",
        "z": "329e27e2.5e5fb8",
        "name": "Menu Tab",
        "style": {
            "fill": "#ffcf3f",
            "fill-opacity": "0.49",
            "label": true
        },
        "nodes": [
            "7f578d74.5bbe84",
            "c98efba7.228ab8",
            "584317dd.dc3188",
            "8f8e923c.f6ded",
            "23679ac.f4f8966",
            "5bfb51ad.2bfe7",
            "6d32786a.91c6b8",
            "84775365.f84c6",
            "5e1ecb6f.590af4",
            "3407e7ca.ddf9a8",
            "40f18e1f.b3de4",
            "84cce9ea.47cfe8",
            "3cc37825.481fa8",
            "76038103.0f83a",
            "196e9529.5713cb",
            "807bf33e.6a204",
            "49d3a376.d38dac"
        ],
        "x": 14,
        "y": 39,
        "w": 672,
        "h": 482
    },
    {
        "id": "d3b2edfe.881ac",
        "type": "group",
        "z": "e4c679fa.2843d8",
        "name": "Update button",
        "style": {
            "label": true,
            "fill": "#ffcf3f",
            "fill-opacity": "0.27"
        },
        "nodes": [
            "5e96f968.96a858",
            "2882b34c.253fec",
            "3d549297.4472de",
            "e748b5e5.55f4f8",
            "9c5cb08c.e598e",
            "8d4afbed.303b58",
            "b27f1747.2029f8",
            "973b0150.86a99",
            "39f8263a.3e4d2a",
            "9fc22c4ffd8d47ad",
            "34b279fc4db64e44"
        ],
        "x": 974,
        "y": 39
    },
    {
        "id": "83826ff7.aee2d",
        "type": "group",
        "z": "329e27e2.5e5fb8",
        "name": "AGV Searching",
        "style": {
            "stroke": "#ffC000",
            "stroke-opacity": "0.45",
            "label": true,
            "fill": "#ffC000",
            "fill-opacity": "0.47"
        },
        "nodes": [
            "c28307b6.893bc8",
            "3a51eb93.727814",
            "decfba0f.a66598",
            "d31db292.9a0e8",
            "9cf84816.65cd48",
            "9b87fa42.40aee8",
            "58b0ca87.4b39e4",
            "5b034508.ba25fc",
            "35b7edd7.f1aec2",
            "cc38acf9.84a3",
            "c411c07b.79e98",
            "9b196926.c4e998",
            "59aaa80d.eab338",
            "5a608332.4be61c",
            "695e44d5.bf7dec",
            "dfcf83da.02ebf",
            "5912a1b8.95488",
            "cf229b97.68f968",
            "141ee0ce.e0c07f",
            "bf62594.bb0b1a8",
            "8644e6f8.a2ed28",
            "64644373.3a6f4c",
            "e265ff4.d2674",
            "9d4db842.37fd78",
            "87b97489.949208",
            "6823396f.9e7ed8",
            "fa620a5.a7d51f8",
            "f3a2d0c3.2da8d",
            "a776736e.0dad7",
            "fab4ff1b.44803",
            "8416f28c.c93d4",
            "6da8fc6d.c89514",
            "8213bc9e.1e7b2",
            "c2fe5a7b.cc1f28",
            "d2ec6d10.33f06",
            "ed4ca2fc.f6112",
            "2d4432a2.98880e",
            "afe71771.2f42c8",
            "e3235eb6.a7af7",
            "d4408925.624888",
            "1fdefc784bcac320",
            "d7d875e6eeafbe73",
            "79b8bbca71455483",
            "7e136a8b501d9df1",
            "d5102bd4feee5504",
            "e797dd1af9944282",
            "b2e6754829877c88",
            "b4a2daa8e07c7ac1",
            "9617bd53c4b2223f",
            "c9a91458a553fcdd",
            "4a030f20fea59781",
            "2df276ca22f32227",
            "28c3469d7fec9c7f",
            "489efd7be48550a0",
            "966d36c79316e6ab",
            "c1eb4305ca4e8ae2",
            "032798b037181c98"
        ],
        "x": -6,
        "y": 759,
        "w": 1632,
        "h": 742
    },
    {
        "id": "f6f78294.173ee",
        "type": "group",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "",
        "style": {
            "fill": "#ff3f3f",
            "fill-opacity": "0.27",
            "label": true
        },
        "nodes": [
            "73e2e8cb.ca8458",
            "7615e517.87588c",
            "abc51c43.2b467"
        ],
        "x": 54,
        "y": 699
    },
    {
        "id": "58791834.427e78",
        "type": "ui_group",
        "name": "Manager",
        "tab": "cdc2e52a.7920c8",
        "order": 2,
        "disp": false,
        "width": "28",
        "collapse": false
    },
    {
        "id": "fc260c0b.664ca",
        "type": "ui_group",
        "name": "NavBar",
        "tab": "cdc2e52a.7920c8",
        "order": 1,
        "disp": false,
        "width": "3",
        "collapse": false
    },
    {
        "id": "e0f60492.6850d8",
        "type": "ui_group",
        "name": "SO_SIM_Dashboard",
        "tab": "cdc2e52a.7920c8",
        "order": 3,
        "disp": false,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a8c7d9a3.586368",
        "type": "ui_group",
        "name": "SO_Chart",
        "tab": "cdc2e52a.7920c8",
        "order": 5,
        "disp": false,
        "width": "13",
        "collapse": false
    },
    {
        "id": "2e0d4d2d.123722",
        "type": "ui_group",
        "name": "SO_Log",
        "tab": "cdc2e52a.7920c8",
        "order": 4,
        "disp": false,
        "width": "13",
        "collapse": false
    },
    {
        "id": "b9099129.e3a02",
        "type": "ui_group",
        "name": "AS_AGV",
        "tab": "cdc2e52a.7920c8",
        "order": 8,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7fd55f12.2eabf",
        "type": "ui_group",
        "name": "AS_AGV_SETTING",
        "tab": "cdc2e52a.7920c8",
        "order": 6,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "cdc2e52a.7920c8",
        "type": "ui_tab",
        "name": "AGV20_12",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a77bc788.df6f78",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "70752b10.710534",
        "type": "ui_group",
        "name": "AS_AGV_LOG",
        "tab": "cdc2e52a.7920c8",
        "order": 7,
        "disp": false,
        "width": "16",
        "collapse": false
    },
    {
        "id": "5aa96ce1.38d674",
        "type": "ui_group",
        "name": "PS_Dashboard",
        "tab": "cdc2e52a.7920c8",
        "order": 10,
        "disp": false,
        "width": "15",
        "collapse": false
    },
    {
        "id": "6ac30a25.9ffc34",
        "type": "ui_group",
        "name": "AS_AGV_REALTIME_INFO",
        "tab": "cdc2e52a.7920c8",
        "order": 9,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "5a9e7538.2c2fbc",
        "type": "ui_group",
        "name": "Boundingbox test",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "925439b0.2863c8",
        "type": "ui_group",
        "name": "svg-panning-test",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "2d5a4608.62374a",
        "type": "ui_group",
        "name": "PM_MODE",
        "tab": "cdc2e52a.7920c8",
        "order": 11,
        "disp": false,
        "width": "28",
        "collapse": false
    },
    {
        "id": "e9f953be.e845b",
        "type": "Stackhero-MySQL-Server",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "tls": true,
        "database": "agv"
    },
    {
        "id": "2ad73bd9.a6f884",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "58470cf.e8678f4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a8c7d9a3.586368",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "f71d339d.2c702",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a8c7d9a3.586368",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "ded66458.bfe688",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a8c7d9a3.586368",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "72bb343bf14ca049",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "agv",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "1dce0df6.7d5c02",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "CSS Style",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .md-button {\n        background-color: #097479;\n        background-image: -webkit-linear-gradient(283deg, rgba(255, 255, 255, 0.1) 50%, transparent 55%),-webkit-linear-gradient(top, rgba(255, 255, 255, 0.15), transparent);\n        border-radius: 8px;\n        box-shadow: 0 0 0 1px #163772 inset,0 0 0 2px rgba(255, 255, 255, 0.15) inset,0 2px 0 0 #333797,0 4px 0 1px rgba(0, 0, 0, 0.4),0 4px 4px 1px rgba(0, 0, 0, 0.5);\n        color: white !important;\n        height: 70%;\n        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);\n        text-decoration: none !important;\n        -webkit-transition: all .2s linear;\n        width: 100%;\n    }\n\n    .md-button:active {\n        background-color: #0c8e94;\n        top: 2px;\n        box-shadow: 0 0 0 1px #163772 inset,0 0 0 2px rgba(255, 255, 255, 0.15) inset,0 0 0 0 #333797,0 0 0 1px rgba(0, 0, 0, 0.4),0 0px 8px 1px rgba(0, 0, 0, 0.5);\n    }\n\n    .md-button:hover {\n        background-color: #0c8e94;\n        poisiton: relative;\n        top: -1px;\n        box-shadow: 0 0 0 1px #163772 inset,0 0 0 2px rgba(255, 255, 255, 0.15) inset,0 2px 0 0 #333797,0 5px 0 1px rgba(0, 0, 0, 0.4),0 5px 8px 1px rgba(0, 0, 0, 0.5);\n    }\n\n    .md-button:active {\n        background-color: #0c8e94;\n        top: 2px;\n        box-shadow: 0 0 0 1px #163772 inset,0 0 0 2px rgba(255, 255, 255, 0.15) inset,0 0 0 0 #333797,0 0 0 1px rgba(0, 0, 0, 0.4),0 0px 8px 1px rgba(0, 0, 0, 0.5);\n    }\n    .img {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        height: 50% !important;\n        width: 34% !important;\n    }\n        \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 500,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1643cbfb.de1e34",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "Start",
        "order": 1,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"startSystem\" ng-click=\"send({payload: 'start'})\">\n    Start <span class=\"material-icons\">play_arrow</span>\n</md-button>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "7f97e2da.fafedc"
            ]
        ]
    },
    {
        "id": "65af776b.88a238",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "Stop",
        "order": 2,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"stopSystem\" ng-click=\"send({payload: 'stop'})\">\n    Stop <span class=\"material-icons\">power_settings_new</span>\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "9e5fd86c.9d89a8"
            ]
        ]
    },
    {
        "id": "7f578d74.5bbe84",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "SYSTEM OVERVIEW",
        "order": 3,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"nav_so\" ng-click=\"send({payload: 'SYSTEM_OVERVIEW'})\" style=\"border-radius: 0px; font-size: 10px; box-shadow: none;\">\n    SYSTEM OVERVIEW\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "c98efba7.228ab8",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "AGV SEARCHING",
        "order": 4,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"nav_as\" ng-click=\"send({payload: 'AGV_SEARCHING'})\" style=\"border-radius: 0px; font-size: 10px; box-shadow: none;\">\n    AGV SEARCHING\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "584317dd.dc3188",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "POD SEARCHING",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"nav_ps\" ng-click=\"send({payload: 'POD_SEARCHING'})\" style=\"border-radius: 0px; font-size: 10px; box-shadow: none;\">\n    POD SEARCHING\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "8f8e923c.f6ded",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "POD MOVING",
        "order": 6,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"nav_pm\" ng-click=\"send({payload: 'POD_MOVING'})\" style=\"border-radius: 0px; font-size: 10px; box-shadow: none;\">\n    POD MOVING\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "23679ac.f4f8966",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "PODs REARRANGING",
        "order": 7,
        "width": 3,
        "height": 1,
        "format": "<md-button id=\"nav_pr\" ng-click=\"send({payload: 'PODs_REARRANGING'})\" style=\"border-radius: 0px; font-size: 10px; box-shadow: none;\">\n    PODs REARRANGING\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "5bfb51ad.2bfe7",
        "type": "ui_svg_graphics",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "order": 1,
        "width": 0,
        "height": 0,
        "svgString": "<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n width=\"80.000000pt\" height=\"50.000000pt\" \n preserveAspectRatio=\"xMidYMid meet\">\n<g transform=\"translate(20.00000,70.000000) scale(0.03500000,-0.03500000)\"\nfill=\"#ffffff\" stroke=\"none\">\n<path d=\"M1089 1851 l-29 -29 0 -316 0 -316 -392 0 c-422 0 -423 0 -462 -53\n-20 -27 -21 -42 -24 -333 l-3 -304 101 0 100 0 0 99 0 98 82 54 c107 70 108\n72 108 130 l0 49 305 0 305 0 0 -215 0 -215 35 0 c32 0 35 2 35 30 l0 30 343\n2 342 3 0 30 0 30 -277 3 -278 2 0 131 c0 128 0 130 -26 154 -19 18 -38 25\n-65 25 l-39 0 0 444 0 444 -31 26 c-43 36 -91 35 -130 -3z\"/>\n<path d=\"M1553 1560 c-12 -5 -30 -21 -40 -36 -16 -25 -18 -60 -21 -364 -2\n-184 0 -354 3 -378 3 -23 17 -55 30 -70 23 -27 24 -27 175 -30 103 -2 162 0\n182 9 59 24 58 19 58 432 0 240 -4 385 -10 398 -22 40 -61 49 -212 48 -79 0\n-153 -4 -165 -9z\"/>\n<path d=\"M119 423 c-59 -36 -76 -119 -39 -181 39 -64 20 -63 760 -60 l670 3\n27 27 c51 51 41 187 -16 218 -13 6 -251 10 -698 10 -609 -1 -681 -2 -704 -17z\"/>\n<path d=\"M1251 112 c-7 -14 -7 -24 2 -36 10 -14 29 -16 127 -14 l115 3 0 30 0\n30 -117 3 c-106 2 -118 1 -127 -16z\"/>\n</g>\n</svg>\n",
        "clickableShapes": [],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": false,
        "sendMsgWhenLoaded": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": "150",
        "name": "AGV Icon",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "40f18e1f.b3de4"
            ]
        ]
    },
    {
        "id": "6d32786a.91c6b8",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "Spacer1",
        "order": 2,
        "width": 3,
        "height": 1,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "84775365.f84c6",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "Copy Right",
        "order": 9,
        "width": 3,
        "height": 2,
        "format": "<p style=\"font-size: 15px; text-align:center;\">@LamTran</p>\n<p style=\"font-size: 10px; text-align:center;\">All rights reserved</p>\n<p style=\"font-size: 10px; text-align:center;\">2020</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 110,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5e1ecb6f.590af4",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "group": "fc260c0b.664ca",
        "name": "Spacer2",
        "order": 8,
        "width": 3,
        "height": 4,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 100,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "712bd357.13211c",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "Account",
        "order": 5,
        "width": 2,
        "height": 1,
        "format": "<span class=\"material-icons\" style=\"font-size: 30px; text-align:center; cursor: pointer;\" ng-click=\"send({payload: 'account'})\">\naccount_circle\n</span>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 100,
        "y": 700,
        "wires": [
            [
                "4a748544.23f20c"
            ]
        ]
    },
    {
        "id": "553168f4.b39d28",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "Spacer1",
        "order": 3,
        "width": 16,
        "height": 1,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 500,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "bef2ab36.111268",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "group": "58791834.427e78",
        "name": "Date time",
        "order": 4,
        "width": 4,
        "height": 1,
        "format": "\n<div id=\"time\" style=\"font-size:15px; margin-top:8px; margin-left: 10px;\"></div>\n\n\n<script>\n    function updateClock() {\n    var now = new Date(), // current date\n        months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; \n        time = fillZero(now.getHours()) + ':' + fillZero(now.getMinutes()) + ':' + fillZero(now.getSeconds());\n\n        // a cleaner way than string concatenation\n        date = [fillZero(now.getDate()), \n                months[now.getMonth() + 1],\n                now.getFullYear()].join(', ');\n\n    // set the content of the element with the ID time to the formatted string\n    document.getElementById('time').innerHTML = [date, time].join(' / ');\n\n    // call this function again in 1000ms\n    setTimeout(updateClock, 1000);\n}\nupdateClock(); // initial call\nfunction fillZero(inputString) { \n    if(Number(inputString) < 10) return '0' + inputString;\n    return inputString; \n} \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 100,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4a748544.23f20c",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 700,
        "wires": []
    },
    {
        "id": "b3d4bc8e.f1fc9",
        "type": "ui_svg_graphics",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "group": "e0f60492.6850d8",
        "order": 1,
        "width": 15,
        "height": 13,
        "svgString": "<svg x=\"0\" y=\"0\" height=\"680\" width=\"790\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    \n</svg>",
        "clickableShapes": [
            {
                "targetId": "[id^=map]",
                "action": "click",
                "payload": "[id^=map]",
                "payloadType": "str",
                "topic": "[id^=map]"
            },
            {
                "targetId": "[id^=map_pod]",
                "action": "dblclick",
                "payload": "[id^=map_pod]",
                "payloadType": "str",
                "topic": "[id^=map_pod]"
            },
            {
                "targetId": "[id^=map_floor]",
                "action": "dblclick",
                "payload": "[id^=map_floor]",
                "payloadType": "str",
                "topic": "[id^=map_floor]"
            }
        ],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [
            {
                "selector": "#log",
                "bindSource": "payload.log",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#process",
                "bindSource": "payload.process",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_v",
                "bindSource": "payload.AGV1_v",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_batt",
                "bindSource": "payload.AGV1_batt",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_pod",
                "bindSource": "payload.AGV1_pod",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_x",
                "bindSource": "payload.AGV1_x",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_y",
                "bindSource": "payload.AGV1_y",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV1_ori",
                "bindSource": "payload.AGV1_ori",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_v",
                "bindSource": "payload.AGV2_v",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_batt",
                "bindSource": "payload.AGV2_batt",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_pod",
                "bindSource": "payload.AGV2_pod",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_x",
                "bindSource": "payload.AGV2_x",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_y",
                "bindSource": "payload.AGV2_y",
                "bindType": "text",
                "attribute": ""
            },
            {
                "selector": "#AGV2_ori",
                "bindSource": "payload.AGV2_ori",
                "bindType": "text",
                "attribute": ""
            }
        ],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": false,
        "sendMsgWhenLoaded": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "D:\\flow\\vma\\",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": "150",
        "name": "SIM Dashboard",
        "x": 980,
        "y": 120,
        "wires": [
            [
                "1141a0f8.7f7ebf",
                "d395301d.af384",
                "6bf81264b15d62f7"
            ]
        ]
    },
    {
        "id": "78fac503.3c059c",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "System load",
        "group": "a8c7d9a3.586368",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "System load",
        "label": "%",
        "format": "{{msg.systemLoad}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "80",
        "x": 1450,
        "y": 240,
        "wires": []
    },
    {
        "id": "709bed77.fb46f4",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Storage",
        "group": "a8c7d9a3.586368",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Storage",
        "label": "%",
        "format": "{{msg.storage}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "x": 1440,
        "y": 300,
        "wires": []
    },
    {
        "id": "7e9776ee.6e1de8",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Picking per hour",
        "group": "a8c7d9a3.586368",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Picking per hour",
        "label": "perHour",
        "format": "{{msg.pick}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "5000",
        "seg2": "8000",
        "x": 1460,
        "y": 360,
        "wires": []
    },
    {
        "id": "af99f943.7b3188",
        "type": "ui_chart",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "AGV Battery",
        "group": "a8c7d9a3.586368",
        "order": 8,
        "width": 13,
        "height": 4,
        "label": "AGV Battery",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1450,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3407e7ca.ddf9a8",
        "type": "ui_ui_control",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "40f18e1f.b3de4",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 80,
        "wires": []
    },
    {
        "id": "77197d2f.e3c974",
        "type": "inject",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "52c11e0e.23919",
                "58e520cf.5dd6",
                "2dafc0b6.629d6",
                "cc11e9c.c7c1218",
                "3038d60e.f363ba",
                "98f41439.851228",
                "7e5c6d4f.5bb924",
                "813efd31.5b7eb",
                "e832482c.3d71b8",
                "f27fa0cc.3d36b"
            ]
        ]
    },
    {
        "id": "52c11e0e.23919",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get map data",
        "func": "let query       = 'SELECT * FROM map';\nmsg.topic       = query;\nmsg.queryType   = 'MAP'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "6d7f7c91.e09b14",
        "type": "mysql",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "mydb": "72bb343bf14ca049",
        "name": "",
        "x": 610,
        "y": 400,
        "wires": [
            [
                "f7c6aa4d.f09bd8"
            ]
        ]
    },
    {
        "id": "58e520cf.5dd6",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get AGV data",
        "func": "let query       = \"SELECT * FROM agv\";\nmsg.topic       = query;\nmsg.queryType   = 'AGV';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 280,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "89d7d379.11542",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set agvInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet agvInfo = {};\nfor(let i in result) {\n    agvInfo[result[i].id] = result[i];\n}\nglobal.set('database.agvInfo', agvInfo);\n\nmsg = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "fb9bcdca.6b769"
            ]
        ]
    },
    {
        "id": "f7c6aa4d.f09bd8",
        "type": "switch",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Query type",
        "property": "queryType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MAP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AGV",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "POD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHARGER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STATION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BARRIER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MAP_SIZE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "WAITING_ZONE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PRODUCTS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 770,
        "y": 400,
        "wires": [
            [
                "80a177fd.dfc278"
            ],
            [
                "89d7d379.11542"
            ],
            [
                "6c84bf83.a837c"
            ],
            [
                "8068a3c0.d9fd5"
            ],
            [
                "880e45aa.697268"
            ],
            [
                "8e89c44c.fc1aa8"
            ],
            [
                "915eeace.881358"
            ],
            [
                "407030b0.e026f"
            ],
            [
                "dd05e34.850a92"
            ]
        ]
    },
    {
        "id": "80a177fd.dfc278",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set map info",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet mapInfo = {};\nfor(let i in result) {\n    mapInfo[result[i].id] = result[i];\n}\nglobal.set('database.mapInfo', mapInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 240,
        "wires": []
    },
    {
        "id": "2dafc0b6.629d6",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get POD data",
        "func": "let query       = \"SELECT * FROM pod\";\nmsg.topic       = query;\nmsg.queryType   = 'POD';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "6c84bf83.a837c",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set podInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet podInfo = {};\nfor(let i in result) {\n    podInfo[result[i].id] = result[i];\n}\nglobal.set('database.podInfo', podInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "cc11e9c.c7c1218",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get Charger data",
        "func": "let query       = \"SELECT * FROM charger\";\nmsg.topic       = query;\nmsg.queryType   = 'CHARGER';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "8068a3c0.d9fd5",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set chargerInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet chargerInfo = {};\nfor(let i in result) {\n    chargerInfo[result[i].id] = result[i];\n}\nglobal.set('database.chargerInfo', chargerInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 360,
        "wires": []
    },
    {
        "id": "3038d60e.f363ba",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get Station data",
        "func": "let query       = \"SELECT * FROM station\";\nmsg.topic       = query;\nmsg.queryType   = 'STATION';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "98f41439.851228",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get obstacle data",
        "func": "let query       = \"SELECT * FROM barrier\";\nmsg.topic       = query;\nmsg.queryType   = 'BARRIER';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 440,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "8e89c44c.fc1aa8",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set barrierInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet barrierInfo = {};\nfor(let i in result) {\n    barrierInfo[result[i].id] = result[i];\n}\nglobal.set('database.barrierInfo', barrierInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 440,
        "wires": []
    },
    {
        "id": "73e2e8cb.ca8458",
        "type": "catch",
        "z": "2b5ed7dd.464b08",
        "g": "f6f78294.173ee",
        "name": "Database e",
        "scope": [
            "6d7f7c91.e09b14"
        ],
        "uncaught": false,
        "x": 150,
        "y": 740,
        "wires": [
            [
                "e66b9db5.56086"
            ]
        ]
    },
    {
        "id": "7615e517.87588c",
        "type": "delay",
        "z": "2b5ed7dd.464b08",
        "g": "f6f78294.173ee",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 620,
        "y": 740,
        "wires": [
            [
                "abc51c43.2b467"
            ]
        ]
    },
    {
        "id": "fcbb39f2.9bb258",
        "type": "link in",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Database in",
        "links": [
            "abc51c43.2b467",
            "f0523f00.b2603"
        ],
        "x": 150,
        "y": 440,
        "wires": [
            [
                "52c11e0e.23919",
                "58e520cf.5dd6",
                "2dafc0b6.629d6",
                "cc11e9c.c7c1218",
                "3038d60e.f363ba",
                "98f41439.851228",
                "7e5c6d4f.5bb924",
                "e832482c.3d71b8",
                "f27fa0cc.3d36b"
            ]
        ],
        "l": true
    },
    {
        "id": "abc51c43.2b467",
        "type": "link out",
        "z": "2b5ed7dd.464b08",
        "g": "f6f78294.173ee",
        "name": "Reconnect to database",
        "links": [
            "fcbb39f2.9bb258"
        ],
        "x": 810,
        "y": 740,
        "wires": [],
        "l": true
    },
    {
        "id": "b56d57c4.714668",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Query done",
        "rules": [
            {
                "t": "set",
                "p": "systemInfo.queryComplete",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 280,
        "wires": [
            [
                "e72da03.941bb6",
                "626c4489.d13f1c"
            ]
        ]
    },
    {
        "id": "fb9bcdca.6b769",
        "type": "delay",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1160,
        "y": 280,
        "wires": [
            [
                "b56d57c4.714668"
            ]
        ]
    },
    {
        "id": "22aac6d9.964c5a",
        "type": "link in",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "Display Map",
        "links": [
            "f0523f00.b2603"
        ],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "973e8c1c.7e04b"
            ]
        ],
        "l": true
    },
    {
        "id": "7e5c6d4f.5bb924",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get map size data",
        "func": "let query       = \"SELECT MAX(x), MAX(y) FROM map\";\nmsg.topic       = query;\nmsg.queryType   = 'MAP_SIZE';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 480,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "880e45aa.697268",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set stationInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet stationInfo = {};\nfor(let i in result) {\n    stationInfo[result[i].id] = result[i];\n}\nglobal.set('database.stationInfo', stationInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 400,
        "wires": []
    },
    {
        "id": "915eeace.881358",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set map size",
        "func": "let result  = msg.payload[0];\n\nlet mapSize = {};\nmapSize.x   = result[\"MAX(x)\"] + 1;\nmapSize.y   = result[\"MAX(y)\"] + 1;\n\nglobal.set('database.mapSize', mapSize);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "813efd31.5b7eb",
        "type": "template",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "global map template",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"Line\": {\n        \"command\": \"add_element\",\n        \"elementType\": \"line\",\n        \"elementId\": \"\",\n        \"elementAttributes\": {\n            \"x1\": \"\",\n            \"y1\": \"\",\n            \"x2\": \"\",\n            \"y2\": \"\"\n        },\n        \"elementStyleAttributes\": {\n            \"fill\": \"\",\n            \"stroke\": \"\",\n            \"stroke-width\": \"\"\n        }\n    },\n    \"Remove\": {\n        \"command\": \"remove_element\",\n        \"elementId\": \"\"\n    },\n    \"Round\": {\n        \"command\": \"add_element\",\n        \"elementType\": \"circle\",\n        \"elementId\": \"\",\n        \"elementAttributes\": {\n            \"cx\": \"\",\n            \"cy\": \"\",\n            \"r\": \"\"\n        },\n        \"elementStyleAttributes\": {\n            \"fill\": \"black\",\n            \"stroke\": \"black\",\n            \"stroke-width\": \"1px\"\n        }\n    },\n    \"Square\": {\n        \"command\": \"add_element\",\n        \"elementType\": \"rect\",\n        \"elementId\": \"\",\n        \"elementAttributes\": {\n            \"x\": \"\",\n            \"y\": \"\",\n            \"width\": \"\",\n            \"height\": \"\"\n        },\n        \"elementStyleAttributes\": {\n            \"fill\": \"\",\n            \"stroke\": \"\",\n            \"stroke-width\": \"\"\n        }\n    },\n    \"ClearMap\": {\n        \"command\": \"remove_element\",\n        \"selector\": \"[id^=map]\"\n    },\n    \"ForeignObject\": {\n       \"command\": \"add_element\", \n       \"elementType\": \"foreignObject\",\n       \"elementId\": \"\", \n       \"elementAttributes\": {\n          \"x\": \"\",\n          \"y\": \"\",\n          \"height\": \"\",\n          \"width\": \"\"\n       },\n       \"textContent\": \"\"\n    },\n    \"SetAttribute\": {\n        \"command\": \"update_style\",\n        \"selector\": \"\",\n        \"attributeName\": \"fill\",\n        \"attributeValue\": \"\"\n    }\n}",
        "output": "str",
        "x": 440,
        "y": 660,
        "wires": [
            [
                "180a9c11.bcfd54"
            ]
        ]
    },
    {
        "id": "180a9c11.bcfd54",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "global map template",
        "func": "let json = JSON.parse(msg.payload);\nglobal.set('mapTemplate', json);\nmsg = {};\nmsg.payload = json\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 660,
        "wires": [
            [
                "76f52270.372e7c"
            ]
        ]
    },
    {
        "id": "973e8c1c.7e04b",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "Draw map",
        "func": "const mapDashboardHeight    = 680;\nconst mapDashboardWidth     = 800;\nconst BLOCKED_CLOOR         = '#ffffcc'\nconst GRID_COLOR            = '#b3b3b3'\n\nlet commonFunction  = global.get('commonFunction');\nlet svgTemplate     = global.get('map_template');\nlet gridSize        = 0;\nlet data            = global.get('database');\nlet mapSize         = data.mapSize;\nlet floorGrid       = data.mapInfo;\n\n// SVG draw command\nlet drawCommand     = [];\ndrawCommand.push(global.get('mapTemplate.ClearMap'));\n\n\n// Determine fit width or height\n// Fit width\nif (mapDashboardWidth/mapSize.x < mapDashboardHeight/mapSize.y) {\n    gridSize = Math.floor(mapDashboardWidth/mapSize.x);\n}\n// Fit height\nelse {\n    gridSize = Math.floor(mapDashboardHeight/mapSize.y);\n}\n\n// Draw grid floor\nfor(let gridUnit in floorGrid) {\n    let id              = `map_floor_${gridUnit}`;\n    let x               = floorGrid[gridUnit].x * gridSize;\n    let y               = floorGrid[gridUnit].y * gridSize;\n    let height          = gridSize;\n    let width           = gridSize;\n    let fill            = 'none';\n    if(floorGrid[gridUnit].is_active === 1) {\n        fill            = GRID_COLOR;\n    }\n    if(floorGrid[gridUnit].is_blocked === 1) {\n        fill            = BLOCKED_CLOOR;\n    }\n    let stroke          = 'gray';\n    let stroke_width    = '1px';\n    let newGridFlow = commonFunction.drawSquare(id, x, y, height, width, fill, stroke, stroke_width);\n    drawCommand.push(newGridFlow);\n}\n\n// Display POD\nlet podList = data.podInfo;\nfor(let eachPod in podList) {\n    let podId       = `map_pod_${eachPod}`;\n    let podNodeId   = podList[eachPod].node_id;\n    \n    if(!podNodeId) continue;\n    \n    let podX        = floorGrid[podNodeId].x * gridSize;\n    let podY        = floorGrid[podNodeId].y * gridSize;\n    let podColor    = '#0066ff';\n    let newPod      = commonFunction.addPod(podId, podX, podY, gridSize, gridSize, podColor, gridSize);\n    drawCommand.push(newPod);\n}\n\n// Display station\nlet stationList = data.stationInfo;\nfor(let eachStation in stationList) {\n    let stationId       = `map_station_${eachStation}`;\n    let stationNodeId   = stationList[eachStation].node_id;\n    \n    if(!stationNodeId) continue;\n    \n    let stationX        = floorGrid[stationNodeId].x * gridSize;\n    let stationY        = floorGrid[stationNodeId].y * gridSize;\n    let stationColor    = '#595959';\n    let newStation      = commonFunction.addStation(stationId, stationX, stationY, gridSize, gridSize, stationColor, gridSize);\n    drawCommand.push(newStation);\n}\n\n// Display waitingZone\nlet waitingZoneList = data.waitingZoneInfo;\nfor(let eachWaitingZone in waitingZoneList) {\n    let waitingZoneId       = `map_waitingZone_${eachWaitingZone}`;\n    let waitingZoneNodeId   = waitingZoneList[eachWaitingZone].node_id;\n    \n    if(!waitingZoneNodeId) continue;\n    \n    let waitingZoneX        = floorGrid[waitingZoneNodeId].x * gridSize;\n    let waitingZoneY        = floorGrid[waitingZoneNodeId].y * gridSize;\n    let waitingZoneColor    = '#737373';\n    let newWaitingZone      = commonFunction.addWaitingZone(waitingZoneId, waitingZoneX, waitingZoneY, gridSize, gridSize, waitingZoneColor, gridSize);\n    drawCommand.push(newWaitingZone);\n}\n\n// Display barriers\nlet barrierList = data.barrierInfo;\nfor(let eachBarrier in barrierList) {\n    let barrierId       = `map_barrier_${eachBarrier}`;\n    let barrierNodeId   = barrierList[eachBarrier].node_id;\n    if(barrierNodeId === undefined) continue;\n    \n    let barrierX        = floorGrid[barrierNodeId].x * gridSize;\n    let barrierY        = floorGrid[barrierNodeId].y * gridSize;\n    let barrierColor    = '#737373';\n    let newBarrier      = commonFunction.addBarrier(barrierId, barrierX, barrierY, gridSize, gridSize, barrierColor, gridSize);\n    drawCommand.push(newBarrier);\n}\n\n// Display AGVs\nlet agvList = data.agvInfo;\nfor(let eachAgv in agvList) {\n    let agvId       = `map_agv_${eachAgv}`;\n    let agvNodeId   = agvList[eachAgv].node_id;\n    if(agvNodeId === undefined) continue;\n    \n    let agvX        = floorGrid[agvNodeId].x * gridSize;\n    let agvY        = floorGrid[agvNodeId].y * gridSize;\n    let agvOrient   = agvList[eachAgv].orientation;\n    let agvColor    = '#737373';\n    let newAgv      = commonFunction.addAgv(agvId, agvX, agvY, gridSize, gridSize,agvOrient, agvColor, gridSize);\n    drawCommand.push(newAgv);\n}\n\n// Display charger\nlet chargerList = data.chargerInfo;\nfor(let eachCharger in chargerList) {\n    let chargerId       = `map_charger_${eachCharger}`;\n    let chargerNodeId   = chargerList[eachCharger].node_id;\n    if(chargerNodeId === undefined) continue;\n    \n    let chargerX        = floorGrid[chargerNodeId].x * gridSize;\n    let chargerY        = floorGrid[chargerNodeId].y * gridSize;\n    let chargerColor    = '#408000';\n    let newCharger      = commonFunction.addCharger(chargerId, chargerX, chargerY, gridSize, gridSize, chargerColor, gridSize);\n    drawCommand.push(newCharger);\n}\n\n\n\n\n\n// addCharger(id, xPos, yPos, width, height, color, grid)\nmsg.payload = drawCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 120,
        "wires": [
            [
                "9deedbac.9b86d8",
                "1c7cd7ef.b23a98"
            ]
        ]
    },
    {
        "id": "dcccc8a8.147158",
        "type": "inject",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 80,
        "wires": [
            [
                "973e8c1c.7e04b"
            ]
        ]
    },
    {
        "id": "9deedbac.9b86d8",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "76f52270.372e7c",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "common function",
        "func": "let json            = JSON.parse(JSON.stringify(global.get('mapTemplate')));\nlet commonFunction  = {};\n\ncommonFunction.drawSquare = function drawSquare(id, x, y, height, width, fill, stroke, stroke_width){\n    let square = JSON.parse(JSON.stringify(json.Square));\n    square.elementId = id;\n    square.elementAttributes.x = x;\n    square.elementAttributes.y = y;\n    square.elementAttributes.width = width;\n    square.elementAttributes.height = height;\n    square.elementStyleAttributes.fill = fill;\n    square.elementStyleAttributes.stroke = stroke;\n    square.elementStyleAttributes[\"stroke-width\"] = String(stroke_width) + \"px\";\n    return square;\n}\n\ncommonFunction.drawLine = function drawLine(id, x1, y1, x2 ,y2, stroke, stroke_width){\n    let line = JSON.parse(JSON.stringify(json.Line));\n    line.elementId = String(id);\n    line.elementAttributes.x1 = x1;\n    line.elementAttributes.y1 = y1;\n    line.elementAttributes.x2 = x2;\n    line.elementAttributes.y2 = y2;\n    line.elementStyleAttributes.stroke = stroke;\n    line.elementStyleAttributes[\"stroke-width\"] = String(stroke_width) + \"px\";\n    return line;\n}\n\ncommonFunction.addForeignObject = function addForeignObject(id, x, y, width, height, newObject){\n    // let foreignObject = `<foreignObject x=\"${x}\" y=\"${y}\" height=\"${height}\" width=\"${width}\">${newObject}</foreignObject>`\n    let foreignObjectTemplate                       = JSON.parse(JSON.stringify(json.ForeignObject));\n    foreignObjectTemplate.elementId                 = String(id);\n    foreignObjectTemplate.elementAttributes.x       = x;\n    foreignObjectTemplate.elementAttributes.y       = y;\n    foreignObjectTemplate.elementAttributes.height  = height;\n    foreignObjectTemplate.elementAttributes.width   = width;\n    foreignObjectTemplate.textContent               = newObject;\n    return foreignObjectTemplate;\n}\n\ncommonFunction.changeColor = function changeColor(id, color) {\n    let change = JSON.parse(JSON.stringify(json.SetAttribute));\n    change.selector = String(id);\n    change.attributeValue = color;\n    // node.warn(change)\n    return change;\n}\n\ncommonFunction.addPod = function addPod(id, xPos, yPos, width, height, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.045;\n    scaleY = -0.045;\n    \n    // let podTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${xPos},${yPos}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M320 1275 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M749 1305 c-1 -69 -1 -134 -1 -145 0 -11 0 -24 1 -30 2 -16 368 -13 373 3 4 9 3 169 -2 290 0 4 -26 7 -57 5 l-58 -3 1 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -14 -24 41 l1 52 -57 3 -58 3 -1 -126z\"/> <path d=\"M304 1046 c-3 -7 -4 -42 -2 -77 l3 -64 630 0 630 0 0 65 c1 36 -1 71 -3 78 -6 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-180 3 -188 4 -188 23 0 26 47 33 230 31 l140 -1 3 -28z m542 3 l0 -30 -185 0 -185 0 0 23 c0 13 2 26 4 28 2 2 86 5 185 7 l181 2 0 -30z\"/> <path d=\"M320 685 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M750 830 c-1 -5 -1 -71 -1 -145 0 -74 0 -139 1 -145 0 -16 370 -13 370 3 0 7 1 72 3 145 2 72 0 137 -3 143 -4 6 -30 9 -61 7 l-53 -3 0 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -13 -24 41 l1 52 -57 3 c-36 2 -58 -1 -58 -8z\"/> <path d=\"M1177 833 c-4 -3 -7 -73 -7 -155 l0 -148 190 0 191 0 -3 153 -3 152 -57 3 -58 3 0 -56 c0 -51 -10 -69 -25 -44 -5 7 -14 4 -26 -7 -18 -16 -20 -16 -38 0 -12 11 -21 14 -26 7 -15 -25 -25 -7 -25 44 l0 55 -53 0 c-30 0 -57 -3 -60 -7z\"/> <path d=\"M304 456 c-3 -7 -4 -42 -2 -77 l3 -64 628 -3 c345 -1 627 1 628 5 4 28 5 130 1 141 -7 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-201 3 -190 0 -184 49 1 7 59 9 184 7 l182 -3 3 -28z m542 2 l0 -29 -185 0 -185 0 0 24 c0 32 9 34 208 34 l162 0 0 -29z\"/> </g> </svg>`\n    let podTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${-5},${grid}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M320 1275 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M749 1305 c-1 -69 -1 -134 -1 -145 0 -11 0 -24 1 -30 2 -16 368 -13 373 3 4 9 3 169 -2 290 0 4 -26 7 -57 5 l-58 -3 1 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -14 -24 41 l1 52 -57 3 -58 3 -1 -126z\"/> <path d=\"M304 1046 c-3 -7 -4 -42 -2 -77 l3 -64 630 0 630 0 0 65 c1 36 -1 71 -3 78 -6 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-180 3 -188 4 -188 23 0 26 47 33 230 31 l140 -1 3 -28z m542 3 l0 -30 -185 0 -185 0 0 23 c0 13 2 26 4 28 2 2 86 5 185 7 l181 2 0 -30z\"/> <path d=\"M320 685 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M750 830 c-1 -5 -1 -71 -1 -145 0 -74 0 -139 1 -145 0 -16 370 -13 370 3 0 7 1 72 3 145 2 72 0 137 -3 143 -4 6 -30 9 -61 7 l-53 -3 0 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -13 -24 41 l1 52 -57 3 c-36 2 -58 -1 -58 -8z\"/> <path d=\"M1177 833 c-4 -3 -7 -73 -7 -155 l0 -148 190 0 191 0 -3 153 -3 152 -57 3 -58 3 0 -56 c0 -51 -10 -69 -25 -44 -5 7 -14 4 -26 -7 -18 -16 -20 -16 -38 0 -12 11 -21 14 -26 7 -15 -25 -25 -7 -25 44 l0 55 -53 0 c-30 0 -57 -3 -60 -7z\"/> <path d=\"M304 456 c-3 -7 -4 -42 -2 -77 l3 -64 628 -3 c345 -1 627 1 628 5 4 28 5 130 1 141 -7 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-201 3 -190 0 -184 49 1 7 59 9 184 7 l182 -3 3 -28z m542 2 l0 -29 -185 0 -185 0 0 24 c0 32 9 34 208 34 l162 0 0 -29z\"/> </g> </svg>`\n    let newPod = commonFunction.addForeignObject(id, xPos, yPos, width, height, podTemplate);\n    return newPod;\n}\n\ncommonFunction.addStation = function addStation(id, xPos, yPos, width, height, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.045;\n    scaleY = -0.045;\n    \n    let stationTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${-20},${grid + 10}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M730 1608 c-5 -13 -8 -146 -7 -296 2 -230 4 -274 17 -282 23 -15 703 -13 718 2 17 17 17 569 0 586 -8 8 -49 12 -120 12 l-108 0 0 -110 c0 -60 -3 -110 -7 -110 -4 0 -20 12 -35 27 l-28 27 -32 -32 -32 -32 -33 32 -33 32 -28 -27 c-15 -15 -31 -27 -35 -27 -4 0 -7 50 -7 110 l0 110 -110 0 c-105 0 -111 -1 -120 -22z\"/> <path d=\"M1767 1424 c-4 -4 -7 -25 -7 -46 l0 -38 -80 0 -80 0 0 -55 0 -55 170 0 c111 0 170 4 170 10 0 9 -35 49 -150 173 -9 10 -19 14 -23 11z\"/> <path d=\"M579 965 c-1 0 -2 -15 -4 -32 l-3 -33 63 0 63 0 -3 33 c-2 32 -2 32 -59 32 -31 0 -56 0 -57 0z\"/> <path d=\"M730 933 l0 -33 100 0 100 0 0 30 c0 17 -3 30 -7 31 -5 0 -50 1 -101 2 l-92 2 0 -32z\"/> <path d=\"M964 961 c-2 -2 -4 -17 -4 -33 l0 -28 103 0 103 0 -1 32 -2 33 -97 0 c-54 0 -100 -2 -102 -4z\"/> <path d=\"M1200 933 l0 -33 101 0 100 0 -3 33 -3 32 -97 0 -98 0 0 -32z\"/> <path d=\"M1439 965 c0 0 -2 -15 -3 -32 l-4 -33 102 0 102 0 -1 33 0 32 -97 0 c-54 1 -98 1 -99 0z\"/> <path d=\"M1676 963 c-3 -4 -6 -19 -6 -35 l0 -28 100 0 100 0 0 33 0 34 -94 1 c-51 0 -96 -2 -100 -5z\"/> <path d=\"M1909 966 c0 -1 -1 -16 -2 -34 l-2 -32 58 0 57 0 0 33 0 34 -55 0 c-30 0 -55 -1 -56 -1z\"/> <path d=\"M762 864 c-32 -22 -30 -69 4 -91 24 -15 29 -15 53 -2 36 20 41 71 9 93 -28 20 -38 20 -66 0z\"/> <path d=\"M962 864 c-43 -30 -16 -104 39 -104 43 0 65 73 31 103 -23 21 -41 21 -70 1z\"/> <path d=\"M1160 860 c-26 -26 -25 -55 1 -81 26 -26 57 -21 82 12 16 23 17 30 7 50 -24 44 -58 51 -90 19z\"/> <path d=\"M1360 860 c-11 -11 -20 -29 -20 -40 0 -11 9 -29 20 -40 11 -11 29 -20 40 -20 11 0 29 9 40 20 11 11 20 29 20 40 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/> <path d=\"M1569 867 c-28 -21 -31 -52 -8 -80 11 -15 29 -27 40 -27 25 0 59 35 59 60 0 25 -34 60 -57 60 -10 0 -25 -6 -34 -13z\"/> <path d=\"M1772 864 c-32 -22 -30 -69 4 -91 24 -15 29 -15 53 -2 36 20 41 71 9 93 -28 20 -38 20 -66 0z\"/> <path d=\"M576 708 l1 -32 58 -1 58 0 2 33 1 32 -60 0 -61 0 1 -32z\"/> <path d=\"M730 708 l0 -33 98 0 97 0 3 33 3 32 -100 0 -101 0 0 -32z\"/> <path d=\"M962 708 l3 -33 99 0 99 0 2 33 1 32 -103 0 -104 0 3 -32z\"/> <path d=\"M1200 707 l0 -34 98 3 97 3 3 30 3 31 -100 0 -101 0 0 -33z\"/> <path d=\"M1436 708 l1 -33 98 1 99 2 1 31 1 31 -100 0 -101 0 1 -32z\"/> <path d=\"M1670 706 l0 -34 100 1 100 0 0 34 0 33 -100 0 -100 0 0 -34z\"/> <path d=\"M1905 709 c2 -31 3 -32 59 -34 l56 -2 0 34 0 33 -59 0 -59 0 3 -31z\"/> </g> </svg>`;\n    // let stationTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${-5},${grid}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M320 1275 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M749 1305 c-1 -69 -1 -134 -1 -145 0 -11 0 -24 1 -30 2 -16 368 -13 373 3 4 9 3 169 -2 290 0 4 -26 7 -57 5 l-58 -3 1 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -14 -24 41 l1 52 -57 3 -58 3 -1 -126z\"/> <path d=\"M304 1046 c-3 -7 -4 -42 -2 -77 l3 -64 630 0 630 0 0 65 c1 36 -1 71 -3 78 -6 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-180 3 -188 4 -188 23 0 26 47 33 230 31 l140 -1 3 -28z m542 3 l0 -30 -185 0 -185 0 0 23 c0 13 2 26 4 28 2 2 86 5 185 7 l181 2 0 -30z\"/> <path d=\"M320 685 l0 -155 188 2 187 3 0 150 0 150 -57 3 -58 3 0 -56 c0 -55 -6 -65 -28 -43 -9 9 -16 8 -30 -5 -17 -16 -21 -16 -32 -2 -9 11 -17 12 -31 4 -18 -9 -19 -6 -19 46 l0 55 -60 0 -60 0 0 -155z\"/> <path d=\"M750 830 c-1 -5 -1 -71 -1 -145 0 -74 0 -139 1 -145 0 -16 370 -13 370 3 0 7 1 72 3 145 2 72 0 137 -3 143 -4 6 -30 9 -61 7 l-53 -3 0 -52 c1 -54 -3 -62 -24 -41 -9 9 -16 8 -30 -5 -17 -15 -19 -15 -35 0 -13 13 -19 15 -29 5 -21 -21 -25 -13 -24 41 l1 52 -57 3 c-36 2 -58 -1 -58 -8z\"/> <path d=\"M1177 833 c-4 -3 -7 -73 -7 -155 l0 -148 190 0 191 0 -3 153 -3 152 -57 3 -58 3 0 -56 c0 -51 -10 -69 -25 -44 -5 7 -14 4 -26 -7 -18 -16 -20 -16 -38 0 -12 11 -21 14 -26 7 -15 -25 -25 -7 -25 44 l0 55 -53 0 c-30 0 -57 -3 -60 -7z\"/> <path d=\"M304 456 c-3 -7 -4 -42 -2 -77 l3 -64 628 -3 c345 -1 627 1 628 5 4 28 5 130 1 141 -7 19 -1250 18 -1258 -2z m544 -69 l3 -27 -188 2 c-201 3 -190 0 -184 49 1 7 59 9 184 7 l182 -3 3 -28z m542 2 l0 -29 -185 0 -185 0 0 24 c0 32 9 34 208 34 l162 0 0 -29z\"/> </g> </svg>`\n    let newStation = commonFunction.addForeignObject(id, xPos, yPos, width, height, stationTemplate);\n    return newStation;\n}\n\ncommonFunction.addWaitingZone = function addWaitingZone(id, xPos, yPos, width, height, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.03;\n    scaleY = -0.03;\n    \n    let waitingZoneTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${3},${grid - 2}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M350 1763 c0 -5 0 -271 0 -593 0 -322 0 -591 0 -597 0 -10 54 -13 238 -13 130 0 375 -3 545 -7 246 -5 307 -9 307 -20 0 -10 -29 -13 -133 -13 -117 0 -136 -2 -150 -18 -22 -24 -21 -65 1 -85 17 -15 58 -17 388 -17 426 1 415 -1 557 94 l87 59 -2 181 -3 181 -94 51 c-53 30 -118 57 -150 63 -31 6 -62 15 -69 19 -10 7 -13 81 -13 344 0 184 -3 345 -6 356 l-5 22 -749 0 c-412 0 -749 -3 -749 -7z m620 -183 l0 -100 60 0 60 0 0 100 c0 60 4 100 10 100 6 0 10 -40 10 -100 l0 -100 60 0 60 0 0 100 0 100 270 0 270 0 0 -285 c0 -157 -3 -285 -6 -285 -3 0 -70 41 -148 90 -88 55 -154 90 -170 90 -15 0 -38 -11 -51 -25 -44 -43 -34 -65 65 -157 50 -45 90 -85 90 -89 0 -17 -121 -29 -304 -29 -191 0 -205 -1 -230 -21 -15 -12 -26 -30 -26 -44 0 -14 11 -32 26 -44 25 -20 40 -21 215 -21 163 0 188 -2 183 -15 -5 -13 -41 -15 -234 -15 -251 0 -260 -2 -260 -59 0 -57 13 -60 275 -63 180 -2 239 -6 243 -15 3 -10 -43 -13 -205 -13 -168 0 -213 -3 -229 -15 -16 -12 -68 -14 -296 -15 l-278 0 0 515 0 515 270 0 270 0 0 -100z\"/> <path d=\"M544 948 l-67 -83 36 -3 36 -3 3 -77 3 -77 58 -3 57 -3 0 81 0 80 35 0 c19 0 35 2 35 5 0 4 -29 42 -64 86 l-65 80 -67 -83z\"/> </g> </svg>`;\n    let newWatingZone = commonFunction.addForeignObject(id, xPos, yPos, width, height, waitingZoneTemplate);\n    return newWatingZone;\n}\n\ncommonFunction.addBarrier = function addBarrier(id, xPos, yPos, width, height, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.03;\n    scaleY = -0.03;\n    \n    let barrierTemplate = `<svg version=\"1.0\" width=\"100%\" height=\"100%\"> <g transform=\"translate(${5},${grid - 7}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M305 1884 c-92 -48 -123 -147 -74 -234 40 -71 147 -102 219 -65 35 18 76 70 85 108 l7 27 458 0 458 0 7 -30 c8 -37 48 -86 86 -105 15 -8 49 -15 75 -15 94 0 164 70 164 164 0 58 -19 97 -67 133 l-36 28 -676 3 c-599 2 -679 0 -706 -14z\"/> <path d=\"M590 1000 l0 -621 88 3 87 3 0 615 0 615 -87 3 -88 3 0 -621z\"/> <path d=\"M915 1608 c-3 -7 -4 -285 -3 -618 l3 -605 85 0 85 0 0 615 0 615 -83 3 c-60 2 -84 -1 -87 -10z\"/> <path d=\"M1235 1608 c-3 -7 -4 -285 -3 -618 l3 -605 88 -3 87 -3 0 621 0 620 -85 0 c-59 0 -87 -4 -90 -12z\"/> <path d=\"M370 190 l0 -90 630 0 631 0 -3 88 -3 87 -627 3 -628 2 0 -90z\"/> </g> </svg>`;\n    let newBarrier = commonFunction.addForeignObject(id, xPos, yPos, width, height, barrierTemplate);\n    return newBarrier;\n}\n\ncommonFunction.addAgv = function addAgv(id, xPos, yPos, width, height, orientation, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.04;\n    scaleY = -0.04;\n    \n    let agv0Tempalate = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-10},${grid + 8}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M472 1741 c-9 -5 -12 -25 -10 -62 l3 -54 145 0 145 0 3 48 c5 74 -1 77 -147 77 -69 0 -132 -4 -139 -9z\"/> <path d=\"M1176 1728 c-3 -13 -6 -78 -6 -145 0 -116 1 -123 20 -123 19 0 20 7 20 123 0 122 -6 167 -20 167 -4 0 -10 -10 -14 -22z\"/> <path d=\"M1631 1736 c-7 -8 -11 -36 -9 -63 l3 -48 133 -5 c74 -3 140 -1 148 3 21 12 19 113 -2 121 -9 3 -71 6 -139 6 -94 0 -125 -3 -134 -14z\"/> <path d=\"M817 1664 c-11 -11 -8 -292 3 -299 6 -3 10 -30 10 -60 0 -30 -4 -57 -10 -60 -6 -4 -10 -57 -10 -125 0 -68 4 -121 10 -125 6 -3 10 -33 10 -65 0 -32 -4 -62 -10 -65 -6 -4 -10 -55 -10 -121 0 -68 4 -114 10 -115 6 -1 19 -3 30 -4 11 -1 33 -3 49 -4 23 -1 30 -6 33 -23 3 -22 7 -23 93 -23 86 0 90 1 93 23 3 20 8 22 73 22 67 0 69 -1 69 -25 l0 -26 93 3 c87 3 92 4 95 26 3 19 9 22 47 22 76 0 75 -2 75 125 0 65 -4 116 -10 120 -5 3 -10 33 -10 65 0 32 5 62 10 65 6 4 10 57 10 125 0 68 -4 121 -10 125 -13 8 -13 108 0 121 7 7 10 66 8 155 l-3 144 -115 0 -115 0 -3 -27 c-3 -25 -7 -28 -43 -28 l-39 0 0 -71 c0 -44 4 -68 10 -64 6 4 10 -18 10 -59 0 -60 2 -66 20 -66 29 0 76 -26 84 -45 3 -9 15 -59 26 -112 l20 -95 -21 -96 c-15 -71 -27 -104 -45 -122 -24 -24 -28 -25 -164 -25 -136 0 -140 1 -164 25 -17 18 -30 52 -45 122 l-21 97 20 97 c25 120 47 153 103 154 26 0 27 1 27 59 0 33 5 63 10 66 6 3 10 35 10 71 l0 64 -39 0 c-36 0 -40 3 -43 28 l-3 27 -111 3 c-60 1 -113 -1 -117 -4z m143 -158 c0 -16 -7 -27 -20 -31 -25 -8 -50 10 -50 36 0 15 7 19 35 19 30 0 35 -3 35 -24z m530 11 c0 -7 -6 -22 -14 -33 -12 -15 -18 -17 -33 -8 -10 6 -19 21 -21 33 -3 18 1 21 32 21 23 0 36 -5 36 -13z m-400 -727 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m330 0 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m-330 -30 c0 -6 -29 -10 -66 -10 -41 0 -63 4 -59 10 3 6 33 10 66 10 33 0 59 -4 59 -10z m325 0 c4 -6 -18 -10 -59 -10 -37 0 -66 4 -66 10 0 6 26 10 59 10 33 0 63 -4 66 -10z m-325 -40 c0 -6 -26 -10 -59 -10 -33 0 -63 5 -66 10 -4 6 18 10 59 10 37 0 66 -4 66 -10z m325 0 c-3 -5 -33 -10 -66 -10 -33 0 -59 4 -59 10 0 6 29 10 66 10 41 0 63 -4 59 -10z\"/> <path d=\"M464 1546 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 39 c2 22 1 50 -2 63 -6 23 -8 23 -147 23 -109 0 -141 -3 -145 -14z\"/> <path d=\"M1624 1547 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1140 1392 c0 -27 2 -51 4 -53 3 -2 25 -3 50 -1 l46 4 0 49 0 49 -50 0 -50 0 0 -48z\"/> <path d=\"M464 1357 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1624 1357 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1063 1310 c-22 -9 -29 -26 -54 -143 -11 -50 -10 -72 5 -153 10 -52 25 -101 33 -109 20 -21 265 -22 285 -1 8 8 23 53 33 101 17 84 17 92 1 181 -25 132 -21 129 -163 131 -65 1 -128 -2 -140 -7z m166 -135 c31 -15 54 -65 44 -93 -3 -9 -15 -27 -26 -39 -40 -45 -118 -23 -140 39 -10 27 13 77 42 93 33 18 46 18 80 0z\"/> <path d=\"M1222 1105 c0 -16 2 -22 5 -12 2 9 2 23 0 30 -3 6 -5 -1 -5 -18z\"/> <path d=\"M464 1167 c-3 -8 -4 -36 -2 -63 l3 -49 142 -3 142 -3 6 24 c4 13 5 41 3 63 l-3 39 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1627 1174 c-10 -10 -9 -96 1 -112 7 -9 43 -12 148 -10 l139 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M479 988 c-16 -6 -19 -17 -19 -62 0 -40 4 -55 16 -60 30 -12 259 -7 272 6 16 16 16 107 0 113 -23 8 -249 10 -269 3z\"/> <path d=\"M1632 988 c-7 -7 -12 -33 -12 -58 0 -25 5 -51 12 -58 13 -13 242 -18 272 -6 20 8 23 103 4 122 -17 17 -259 17 -276 0z\"/> <path d=\"M473 803 c-17 -6 -17 -105 -1 -121 15 -15 241 -17 269 -2 15 8 19 21 19 58 0 27 -5 53 -12 60 -12 12 -248 17 -275 5z\"/> <path d=\"M1631 796 c-7 -8 -11 -35 -9 -63 l3 -48 145 0 145 0 0 60 0 60 -136 3 c-109 2 -138 0 -148 -12z\"/> <path d=\"M464 606 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 48 c5 75 0 77 -155 77 -104 0 -135 -3 -139 -14z\"/> <path d=\"M1624 607 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> </g> </svg>`\n    let agv90Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-8},${grid + 8}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M495 1877 c-3 -7 -4 -74 -3 -148 l3 -134 51 -3 c35 -2 54 2 63 11 8 10 11 56 9 148 l-3 134 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M682 1878 c-15 -15 -17 -241 -2 -269 8 -15 21 -19 58 -19 27 0 53 5 60 12 13 13 18 242 6 272 -8 20 -103 23 -122 4z\"/> <path d=\"M866 1874 c-3 -9 -6 -71 -6 -139 0 -142 3 -148 77 -143 l48 3 5 125 c7 165 5 170 -64 170 -40 0 -55 -4 -60 -16z\"/> <path d=\"M1057 1884 c-4 -4 -7 -69 -7 -145 0 -137 0 -139 23 -145 13 -3 41 -4 63 -2 l39 3 0 145 0 145 -55 3 c-31 2 -59 0 -63 -4z\"/> <path d=\"M1245 1877 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1435 1877 c-3 -7 -4 -74 -3 -148 l3 -134 39 -3 c22 -2 50 -1 63 3 l24 6 -3 142 -3 142 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1624 1877 c-2 -7 -3 -74 -2 -148 l3 -134 48 -3 c74 -5 77 1 77 143 0 68 -3 130 -6 139 -8 21 -112 23 -120 3z\"/> <path d=\"M629 1530 c-1 -5 -3 -19 -4 -30 -1 -11 -3 -33 -4 -49 -1 -23 -6 -30 -23 -33 -22 -3 -23 -7 -23 -93 0 -86 1 -90 23 -93 20 -3 22 -8 22 -73 0 -67 -1 -69 -25 -69 l-26 0 3 -92 c3 -88 4 -93 26 -96 19 -3 22 -9 22 -47 0 -76 -2 -75 125 -75 65 0 116 4 120 10 3 6 33 10 65 10 32 0 62 -4 65 -10 4 -6 57 -10 125 -10 68 0 121 4 125 10 8 13 108 13 121 0 7 -7 66 -10 155 -8 l144 3 0 115 0 115 -27 3 c-25 3 -28 7 -28 43 l0 39 -71 0 c-44 0 -68 -4 -64 -10 4 -6 -18 -10 -59 -10 -60 0 -66 -2 -66 -20 0 -29 -26 -76 -45 -84 -9 -3 -59 -15 -112 -26 l-95 -20 -96 21 c-71 15 -104 27 -122 45 -24 24 -25 28 -25 164 0 136 1 140 25 164 18 17 52 30 122 45 l97 21 97 -20 c120 -25 153 -47 154 -102 0 -27 1 -28 59 -28 33 0 63 -4 66 -10 3 -5 35 -10 71 -10 l64 0 0 39 c0 36 3 40 28 43 l27 3 0 115 0 115 -144 3 c-89 2 -148 -1 -155 -8 -13 -13 -113 -13 -121 0 -4 6 -57 10 -125 10 -68 0 -121 -4 -125 -10 -3 -5 -33 -10 -65 -10 -32 0 -62 5 -65 10 -4 6 -55 10 -121 10 -68 0 -114 -4 -115 -10z m901 -105 c0 -30 -3 -35 -24 -35 -16 0 -27 7 -31 20 -8 25 10 50 36 50 15 0 19 -7 19 -35z m-800 -100 c0 -37 -4 -65 -10 -65 -11 0 -14 113 -3 123 12 13 13 7 13 -58z m40 -6 c0 -33 -4 -59 -10 -59 -6 0 -10 29 -10 66 0 41 4 63 10 59 6 -3 10 -33 10 -66z m30 6 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m-70 -331 c0 -41 -4 -63 -10 -59 -5 3 -10 33 -10 66 0 33 4 59 10 59 6 0 10 -29 10 -66z m40 7 c0 -33 -4 -63 -10 -66 -6 -4 -10 18 -10 59 0 37 4 66 10 66 6 0 10 -26 10 -59z m30 -6 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m730 -100 c0 -37 -9 -42 -41 -25 -32 18 -16 60 23 60 14 0 18 -8 18 -35z\"/> <path d=\"M987 1331 c-44 -10 -83 -24 -88 -32 -5 -8 -9 -71 -9 -141 0 -95 3 -130 14 -140 8 -8 53 -23 101 -33 84 -17 92 -17 181 -1 134 26 129 19 129 175 0 85 -4 134 -12 142 -15 15 -158 48 -203 48 -19 -1 -70 -9 -113 -18z m147 -95 c69 -29 70 -123 0 -152 -18 -8 -41 -11 -51 -7 -91 32 -82 145 15 172 1 1 17 -5 36 -13z\"/> <path d=\"M1093 1123 c9 -2 23 -2 30 0 6 3 -1 5 -18 5 -16 0 -22 -2 -12 -5z\"/> <path d=\"M1339 1206 c-2 -3 -3 -25 -1 -50 l4 -46 49 0 49 0 0 50 0 50 -48 0 c-27 0 -51 -2 -53 -4z\"/> <path d=\"M1460 1160 c0 -21 2 -21 139 -18 132 3 164 8 147 26 -4 4 -70 8 -147 10 -137 3 -139 3 -139 -18z\"/> <path d=\"M495 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M684 717 c-2 -7 -3 -74 -2 -148 l3 -134 60 0 60 0 3 134 c2 90 -1 138 -9 147 -15 18 -108 19 -115 1z\"/> <path d=\"M872 718 c-13 -13 -18 -242 -6 -272 8 -20 103 -23 122 -4 17 17 17 259 0 276 -7 7 -33 12 -58 12 -25 0 -51 -5 -58 -12z\"/> <path d=\"M1062 722 c-9 -6 -12 -43 -10 -148 l3 -139 60 0 60 0 0 145 0 145 -50 3 c-27 1 -56 -2 -63 -6z\"/> <path d=\"M1245 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1435 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1626 722 c-8 -13 -9 -269 -1 -281 3 -6 30 -11 60 -11 39 0 54 4 59 16 12 30 7 259 -6 272 -14 14 -104 17 -112 4z\"/> </g> </svg>`\n    let agv180Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-9},${grid + 13}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M434 1857 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1597 1864 c-13 -13 -7 -101 7 -113 9 -8 57 -11 147 -9 l134 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M907 1783 c-4 -3 -7 -15 -7 -25 0 -15 -8 -18 -44 -18 -77 0 -76 2 -76 -125 0 -65 4 -116 10 -120 6 -3 10 -33 10 -65 0 -32 -4 -62 -10 -65 -6 -4 -10 -57 -10 -125 0 -68 4 -121 10 -125 13 -8 13 -108 0 -121 -7 -7 -10 -66 -8 -155 l3 -144 115 0 115 0 3 28 c3 24 7 27 43 27 l39 0 0 71 c0 44 -4 68 -10 64 -6 -4 -10 18 -10 59 0 60 -2 66 -20 66 -29 0 -76 26 -84 45 -3 9 -15 59 -26 112 l-20 95 21 96 c15 71 27 104 45 122 24 24 28 25 164 25 136 0 140 -1 164 -25 17 -18 30 -52 45 -122 l21 -97 -20 -97 c-25 -120 -47 -153 -102 -154 -27 0 -28 -1 -28 -59 0 -33 -4 -63 -10 -66 -5 -3 -10 -35 -10 -71 l0 -64 39 0 c36 0 40 -3 43 -27 l3 -28 115 0 115 0 3 144 c2 89 -1 148 -8 155 -13 13 -13 113 0 121 6 4 10 57 10 125 0 68 -4 121 -10 125 -5 3 -10 33 -10 65 0 32 5 62 10 65 6 4 10 55 10 121 0 68 -4 114 -10 115 -5 1 -19 3 -30 4 -11 1 -33 3 -49 4 -23 1 -30 6 -33 24 -3 21 -7 22 -93 22 -86 0 -90 -1 -93 -22 -3 -21 -8 -23 -73 -23 -67 0 -69 1 -69 25 0 25 -1 25 -88 25 -49 0 -92 -3 -95 -7z m153 -143 c0 -6 -29 -10 -66 -10 -41 0 -63 4 -59 10 3 6 33 10 66 10 33 0 59 -4 59 -10z m325 0 c4 -6 -18 -10 -59 -10 -37 0 -66 4 -66 10 0 6 26 10 59 10 33 0 63 -4 66 -10z m-325 -40 c0 -6 -26 -10 -59 -10 -33 0 -63 5 -66 10 -4 6 18 10 59 10 37 0 66 -4 66 -10z m325 0 c-3 -5 -33 -10 -66 -10 -33 0 -59 4 -59 10 0 6 29 10 66 10 41 0 63 -4 59 -10z m-325 -30 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m330 0 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m-472 -692 c7 -7 12 -20 12 -30 0 -14 -8 -18 -35 -18 -37 0 -42 9 -25 41 12 22 30 25 48 7z m530 0 c7 -7 12 -20 12 -30 0 -14 -8 -18 -35 -18 -30 0 -35 3 -35 24 0 33 35 47 58 24z\"/> <path d=\"M1608 1679 c-21 -12 -25 -98 -6 -117 13 -13 242 -18 272 -6 20 8 23 103 4 122 -15 15 -245 16 -270 1z\"/> <path d=\"M434 1667 c-3 -8 -4 -36 -2 -63 l3 -49 134 -3 c92 -2 138 1 148 9 9 9 13 28 11 63 l-3 51 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M443 1493 c-17 -6 -17 -105 -1 -121 8 -8 53 -12 138 -12 85 0 130 4 138 12 16 16 16 100 0 116 -12 12 -248 17 -275 5z\"/> <path d=\"M1601 1486 c-7 -8 -11 -36 -9 -63 l3 -48 125 -5 c165 -7 170 -5 170 64 0 40 -4 55 -16 60 -9 3 -71 6 -139 6 -94 0 -125 -3 -134 -14z\"/> <path d=\"M1018 1456 c-8 -8 -23 -53 -33 -101 -17 -84 -17 -92 -1 -181 26 -134 19 -129 176 -129 156 0 149 -5 175 121 17 83 17 90 0 181 -9 52 -24 100 -32 108 -20 21 -265 22 -285 1z m199 -138 c30 -34 34 -55 19 -92 -29 -69 -123 -69 -152 0 -24 57 15 114 76 114 25 0 43 -7 57 -22z\"/> <path d=\"M1122 1255 c0 -16 2 -22 5 -12 2 9 2 23 0 30 -3 6 -5 -1 -5 -18z\"/> <path d=\"M434 1296 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 39 c2 22 1 50 -2 63 -6 23 -8 23 -147 23 -109 0 -141 -3 -145 -14z\"/> <path d=\"M1595 1287 c-4 -13 -5 -41 -3 -63 l3 -39 145 0 145 0 0 60 0 60 -142 3 -142 3 -6 -24z\"/> <path d=\"M434 1107 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1594 1107 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1153 1022 l-43 -3 0 -50 0 -49 50 0 50 0 0 49 c0 28 -3 51 -7 53 -5 2 -27 2 -50 0z\"/> <path d=\"M434 917 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1597 924 c-10 -10 -9 -96 1 -112 7 -9 43 -12 148 -10 l139 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M1142 761 c2 -77 6 -143 11 -147 17 -17 22 15 25 147 3 137 3 139 -18 139 -21 0 -21 -2 -18 -139z\"/> <path d=\"M444 737 c-21 -12 -19 -113 2 -121 9 -3 71 -6 139 -6 142 0 148 3 143 77 l-3 48 -133 5 c-74 3 -140 1 -148 -3z\"/> <path d=\"M1597 734 c-12 -12 -8 -99 5 -112 14 -14 255 -17 276 -3 9 5 12 25 10 62 l-3 54 -141 3 c-77 1 -143 -1 -147 -4z\"/> </g> </svg>`\n    let agv270Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-10},${grid + 12}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M616 1904 c-3 -9 -6 -71 -6 -139 0 -142 3 -148 77 -143 l48 3 5 133 c3 74 1 140 -3 148 -12 21 -113 19 -121 -2z\"/> <path d=\"M805 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M995 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1185 1907 c-3 -7 -4 -74 -3 -148 l3 -134 39 -3 c22 -2 50 -1 63 3 l24 6 -3 142 -3 142 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1372 1908 c-8 -8 -12 -53 -12 -138 0 -85 4 -130 12 -138 16 -16 100 -16 116 0 13 13 18 242 6 272 -8 20 -103 23 -122 4z\"/> <path d=\"M1557 1914 c-4 -4 -7 -67 -7 -139 0 -153 3 -158 77 -153 l48 3 0 145 0 145 -55 3 c-31 2 -59 0 -63 -4z\"/> <path d=\"M1745 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M694 1557 c-2 -7 -3 -60 -2 -118 l3 -104 28 -3 c24 -3 27 -7 27 -43 l0 -39 71 0 c44 0 68 4 64 10 -4 6 18 10 59 10 60 0 66 2 66 20 0 29 26 76 45 84 9 3 59 15 112 26 l95 20 96 -21 c71 -15 104 -27 122 -45 24 -24 25 -28 25 -164 0 -136 -1 -140 -25 -164 -18 -17 -52 -30 -122 -45 l-97 -21 -97 20 c-120 25 -153 47 -154 103 0 26 -1 27 -59 27 -33 0 -63 5 -66 10 -3 6 -35 10 -71 10 l-64 0 0 -39 c0 -36 -3 -40 -27 -43 l-28 -3 0 -115 0 -115 144 -3 c89 -2 148 1 155 8 13 13 113 13 121 0 4 -6 57 -10 125 -10 68 0 121 4 125 10 3 6 33 10 65 10 32 0 62 -4 65 -10 4 -6 55 -10 121 -10 68 0 114 4 115 10 1 6 3 19 4 30 1 11 3 33 4 49 1 23 6 30 24 33 21 3 22 7 22 93 0 86 -1 90 -22 93 -21 3 -23 8 -23 73 0 67 1 69 25 69 l26 0 -3 93 c-3 87 -4 92 -25 95 -20 3 -23 9 -23 47 0 76 2 75 -125 75 -65 0 -116 -4 -120 -10 -3 -5 -33 -10 -65 -10 -32 0 -62 5 -65 10 -4 6 -57 10 -125 10 -68 0 -121 -4 -125 -10 -3 -5 -30 -10 -60 -10 -30 0 -57 5 -60 10 -10 16 -294 13 -301 -3z m182 -81 c15 -12 17 -18 8 -33 -6 -10 -21 -19 -33 -21 -18 -3 -21 1 -21 32 0 39 13 46 46 22z m704 -121 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m30 0 c0 -37 -4 -65 -10 -65 -11 0 -14 113 -3 123 12 13 13 7 13 -58z m40 -6 c0 -33 -4 -59 -10 -59 -6 0 -10 29 -10 66 0 41 4 63 10 59 6 -3 10 -33 10 -66z m-70 -324 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m30 -1 c0 -41 -4 -63 -10 -59 -5 3 -10 33 -10 66 0 33 4 59 10 59 6 0 10 -29 10 -66z m40 7 c0 -33 -4 -63 -10 -66 -6 -4 -10 18 -10 59 0 37 4 66 10 66 6 0 10 -26 10 -59z m-765 -91 c8 -25 -10 -50 -36 -50 -15 0 -19 7 -19 35 0 30 3 35 24 35 16 0 27 -7 31 -20z\"/> <path d=\"M1147 1361 c-43 -10 -83 -23 -90 -30 -8 -8 -12 -54 -12 -142 0 -154 -5 -148 121 -174 83 -17 90 -17 181 0 52 9 100 24 108 32 12 11 15 43 15 141 0 70 -4 133 -9 140 -10 16 -151 52 -201 51 -19 -1 -70 -9 -113 -18z m171 -114 c44 -41 22 -118 -41 -140 -10 -4 -33 -1 -51 7 -68 28 -69 122 -2 152 36 15 62 10 94 -19z\"/> <path d=\"M1243 1223 c9 -2 23 -2 30 0 6 3 -1 5 -18 5 -16 0 -22 -2 -12 -5z\"/> <path d=\"M920 1190 l0 -50 48 0 c27 0 51 2 53 4 2 3 3 25 1 50 l-4 46 -49 0 -49 0 0 -50z\"/> <path d=\"M628 1203 c-10 -2 -18 -8 -18 -13 0 -14 44 -20 168 -20 115 0 122 1 122 20 0 19 -6 20 -127 19 -71 -1 -136 -3 -145 -6z\"/> <path d=\"M622 748 c-14 -14 -17 -254 -3 -276 5 -9 25 -12 62 -10 l54 3 0 145 0 145 -50 3 c-30 2 -55 -2 -63 -10z\"/> <path d=\"M812 752 c-9 -6 -12 -43 -10 -148 l3 -139 60 0 60 0 0 145 0 145 -50 3 c-27 1 -56 -2 -63 -6z\"/> <path d=\"M995 747 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1184 747 c-2 -7 -3 -74 -2 -148 l3 -134 60 0 60 0 3 139 c2 105 -1 141 -10 148 -21 13 -108 10 -114 -5z\"/> <path d=\"M1376 752 c-8 -13 -10 -268 -2 -281 11 -18 113 -14 120 5 12 30 7 259 -6 272 -13 13 -104 17 -112 4z\"/> <path d=\"M1562 748 c-13 -13 -18 -242 -6 -272 8 -20 103 -23 122 -4 15 15 17 241 2 269 -8 15 -21 19 -58 19 -27 0 -53 -5 -60 -12z\"/> <path d=\"M1751 747 c-8 -10 -11 -56 -9 -148 l3 -134 60 0 60 0 0 145 0 145 -51 3 c-35 2 -54 -2 -63 -11z\"/> </g> </svg>`\n    let agvTemplate = ``;\n    switch(orientation) {\n      case 0:\n        agvTemplate = agv0Tempalate;\n        break;\n      case 90:\n        agvTemplate = agv90Template;\n        break;\n      case 180:\n        agvTemplate = agv180Template;\n        break;\n      case 270:\n        agvTemplate = agv270Template;\n        break;\n      default:\n        agvTemplate = agv0Tempalate;\n    }\n    let newAgv = commonFunction.addForeignObject(id, xPos, yPos, width, height, agvTemplate);\n    return newAgv;\n}\n\ncommonFunction.updateAgv = function addAgv(id,node, orientation, color, grid, currentCommand) {\n    let agvData = global.get('database.agvInfo');\n    let mapData = global.get('database.mapInfo');\n    \n    let xPos = mapData[node].x * grid;\n    agvData[id].node_id = node;\n    \n    let yPos = mapData[node].y * grid;\n\n    agvData[id].orientation = orientation; \n    global.set('database.agvInfo', agvData);\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.04;\n    scaleY = -0.04;\n    \n    let agv0Tempalate = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-10},${grid + 8}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M472 1741 c-9 -5 -12 -25 -10 -62 l3 -54 145 0 145 0 3 48 c5 74 -1 77 -147 77 -69 0 -132 -4 -139 -9z\"/> <path d=\"M1176 1728 c-3 -13 -6 -78 -6 -145 0 -116 1 -123 20 -123 19 0 20 7 20 123 0 122 -6 167 -20 167 -4 0 -10 -10 -14 -22z\"/> <path d=\"M1631 1736 c-7 -8 -11 -36 -9 -63 l3 -48 133 -5 c74 -3 140 -1 148 3 21 12 19 113 -2 121 -9 3 -71 6 -139 6 -94 0 -125 -3 -134 -14z\"/> <path d=\"M817 1664 c-11 -11 -8 -292 3 -299 6 -3 10 -30 10 -60 0 -30 -4 -57 -10 -60 -6 -4 -10 -57 -10 -125 0 -68 4 -121 10 -125 6 -3 10 -33 10 -65 0 -32 -4 -62 -10 -65 -6 -4 -10 -55 -10 -121 0 -68 4 -114 10 -115 6 -1 19 -3 30 -4 11 -1 33 -3 49 -4 23 -1 30 -6 33 -23 3 -22 7 -23 93 -23 86 0 90 1 93 23 3 20 8 22 73 22 67 0 69 -1 69 -25 l0 -26 93 3 c87 3 92 4 95 26 3 19 9 22 47 22 76 0 75 -2 75 125 0 65 -4 116 -10 120 -5 3 -10 33 -10 65 0 32 5 62 10 65 6 4 10 57 10 125 0 68 -4 121 -10 125 -13 8 -13 108 0 121 7 7 10 66 8 155 l-3 144 -115 0 -115 0 -3 -27 c-3 -25 -7 -28 -43 -28 l-39 0 0 -71 c0 -44 4 -68 10 -64 6 4 10 -18 10 -59 0 -60 2 -66 20 -66 29 0 76 -26 84 -45 3 -9 15 -59 26 -112 l20 -95 -21 -96 c-15 -71 -27 -104 -45 -122 -24 -24 -28 -25 -164 -25 -136 0 -140 1 -164 25 -17 18 -30 52 -45 122 l-21 97 20 97 c25 120 47 153 103 154 26 0 27 1 27 59 0 33 5 63 10 66 6 3 10 35 10 71 l0 64 -39 0 c-36 0 -40 3 -43 28 l-3 27 -111 3 c-60 1 -113 -1 -117 -4z m143 -158 c0 -16 -7 -27 -20 -31 -25 -8 -50 10 -50 36 0 15 7 19 35 19 30 0 35 -3 35 -24z m530 11 c0 -7 -6 -22 -14 -33 -12 -15 -18 -17 -33 -8 -10 6 -19 21 -21 33 -3 18 1 21 32 21 23 0 36 -5 36 -13z m-400 -727 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m330 0 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m-330 -30 c0 -6 -29 -10 -66 -10 -41 0 -63 4 -59 10 3 6 33 10 66 10 33 0 59 -4 59 -10z m325 0 c4 -6 -18 -10 -59 -10 -37 0 -66 4 -66 10 0 6 26 10 59 10 33 0 63 -4 66 -10z m-325 -40 c0 -6 -26 -10 -59 -10 -33 0 -63 5 -66 10 -4 6 18 10 59 10 37 0 66 -4 66 -10z m325 0 c-3 -5 -33 -10 -66 -10 -33 0 -59 4 -59 10 0 6 29 10 66 10 41 0 63 -4 59 -10z\"/> <path d=\"M464 1546 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 39 c2 22 1 50 -2 63 -6 23 -8 23 -147 23 -109 0 -141 -3 -145 -14z\"/> <path d=\"M1624 1547 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1140 1392 c0 -27 2 -51 4 -53 3 -2 25 -3 50 -1 l46 4 0 49 0 49 -50 0 -50 0 0 -48z\"/> <path d=\"M464 1357 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1624 1357 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1063 1310 c-22 -9 -29 -26 -54 -143 -11 -50 -10 -72 5 -153 10 -52 25 -101 33 -109 20 -21 265 -22 285 -1 8 8 23 53 33 101 17 84 17 92 1 181 -25 132 -21 129 -163 131 -65 1 -128 -2 -140 -7z m166 -135 c31 -15 54 -65 44 -93 -3 -9 -15 -27 -26 -39 -40 -45 -118 -23 -140 39 -10 27 13 77 42 93 33 18 46 18 80 0z\"/> <path d=\"M1222 1105 c0 -16 2 -22 5 -12 2 9 2 23 0 30 -3 6 -5 -1 -5 -18z\"/> <path d=\"M464 1167 c-3 -8 -4 -36 -2 -63 l3 -49 142 -3 142 -3 6 24 c4 13 5 41 3 63 l-3 39 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1627 1174 c-10 -10 -9 -96 1 -112 7 -9 43 -12 148 -10 l139 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M479 988 c-16 -6 -19 -17 -19 -62 0 -40 4 -55 16 -60 30 -12 259 -7 272 6 16 16 16 107 0 113 -23 8 -249 10 -269 3z\"/> <path d=\"M1632 988 c-7 -7 -12 -33 -12 -58 0 -25 5 -51 12 -58 13 -13 242 -18 272 -6 20 8 23 103 4 122 -17 17 -259 17 -276 0z\"/> <path d=\"M473 803 c-17 -6 -17 -105 -1 -121 15 -15 241 -17 269 -2 15 8 19 21 19 58 0 27 -5 53 -12 60 -12 12 -248 17 -275 5z\"/> <path d=\"M1631 796 c-7 -8 -11 -35 -9 -63 l3 -48 145 0 145 0 0 60 0 60 -136 3 c-109 2 -138 0 -148 -12z\"/> <path d=\"M464 606 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 48 c5 75 0 77 -155 77 -104 0 -135 -3 -139 -14z\"/> <path d=\"M1624 607 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> </g> </svg>`\n    let agv90Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-8},${grid + 8}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M495 1877 c-3 -7 -4 -74 -3 -148 l3 -134 51 -3 c35 -2 54 2 63 11 8 10 11 56 9 148 l-3 134 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M682 1878 c-15 -15 -17 -241 -2 -269 8 -15 21 -19 58 -19 27 0 53 5 60 12 13 13 18 242 6 272 -8 20 -103 23 -122 4z\"/> <path d=\"M866 1874 c-3 -9 -6 -71 -6 -139 0 -142 3 -148 77 -143 l48 3 5 125 c7 165 5 170 -64 170 -40 0 -55 -4 -60 -16z\"/> <path d=\"M1057 1884 c-4 -4 -7 -69 -7 -145 0 -137 0 -139 23 -145 13 -3 41 -4 63 -2 l39 3 0 145 0 145 -55 3 c-31 2 -59 0 -63 -4z\"/> <path d=\"M1245 1877 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1435 1877 c-3 -7 -4 -74 -3 -148 l3 -134 39 -3 c22 -2 50 -1 63 3 l24 6 -3 142 -3 142 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1624 1877 c-2 -7 -3 -74 -2 -148 l3 -134 48 -3 c74 -5 77 1 77 143 0 68 -3 130 -6 139 -8 21 -112 23 -120 3z\"/> <path d=\"M629 1530 c-1 -5 -3 -19 -4 -30 -1 -11 -3 -33 -4 -49 -1 -23 -6 -30 -23 -33 -22 -3 -23 -7 -23 -93 0 -86 1 -90 23 -93 20 -3 22 -8 22 -73 0 -67 -1 -69 -25 -69 l-26 0 3 -92 c3 -88 4 -93 26 -96 19 -3 22 -9 22 -47 0 -76 -2 -75 125 -75 65 0 116 4 120 10 3 6 33 10 65 10 32 0 62 -4 65 -10 4 -6 57 -10 125 -10 68 0 121 4 125 10 8 13 108 13 121 0 7 -7 66 -10 155 -8 l144 3 0 115 0 115 -27 3 c-25 3 -28 7 -28 43 l0 39 -71 0 c-44 0 -68 -4 -64 -10 4 -6 -18 -10 -59 -10 -60 0 -66 -2 -66 -20 0 -29 -26 -76 -45 -84 -9 -3 -59 -15 -112 -26 l-95 -20 -96 21 c-71 15 -104 27 -122 45 -24 24 -25 28 -25 164 0 136 1 140 25 164 18 17 52 30 122 45 l97 21 97 -20 c120 -25 153 -47 154 -102 0 -27 1 -28 59 -28 33 0 63 -4 66 -10 3 -5 35 -10 71 -10 l64 0 0 39 c0 36 3 40 28 43 l27 3 0 115 0 115 -144 3 c-89 2 -148 -1 -155 -8 -13 -13 -113 -13 -121 0 -4 6 -57 10 -125 10 -68 0 -121 -4 -125 -10 -3 -5 -33 -10 -65 -10 -32 0 -62 5 -65 10 -4 6 -55 10 -121 10 -68 0 -114 -4 -115 -10z m901 -105 c0 -30 -3 -35 -24 -35 -16 0 -27 7 -31 20 -8 25 10 50 36 50 15 0 19 -7 19 -35z m-800 -100 c0 -37 -4 -65 -10 -65 -11 0 -14 113 -3 123 12 13 13 7 13 -58z m40 -6 c0 -33 -4 -59 -10 -59 -6 0 -10 29 -10 66 0 41 4 63 10 59 6 -3 10 -33 10 -66z m30 6 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m-70 -331 c0 -41 -4 -63 -10 -59 -5 3 -10 33 -10 66 0 33 4 59 10 59 6 0 10 -29 10 -66z m40 7 c0 -33 -4 -63 -10 -66 -6 -4 -10 18 -10 59 0 37 4 66 10 66 6 0 10 -26 10 -59z m30 -6 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m730 -100 c0 -37 -9 -42 -41 -25 -32 18 -16 60 23 60 14 0 18 -8 18 -35z\"/> <path d=\"M987 1331 c-44 -10 -83 -24 -88 -32 -5 -8 -9 -71 -9 -141 0 -95 3 -130 14 -140 8 -8 53 -23 101 -33 84 -17 92 -17 181 -1 134 26 129 19 129 175 0 85 -4 134 -12 142 -15 15 -158 48 -203 48 -19 -1 -70 -9 -113 -18z m147 -95 c69 -29 70 -123 0 -152 -18 -8 -41 -11 -51 -7 -91 32 -82 145 15 172 1 1 17 -5 36 -13z\"/> <path d=\"M1093 1123 c9 -2 23 -2 30 0 6 3 -1 5 -18 5 -16 0 -22 -2 -12 -5z\"/> <path d=\"M1339 1206 c-2 -3 -3 -25 -1 -50 l4 -46 49 0 49 0 0 50 0 50 -48 0 c-27 0 -51 -2 -53 -4z\"/> <path d=\"M1460 1160 c0 -21 2 -21 139 -18 132 3 164 8 147 26 -4 4 -70 8 -147 10 -137 3 -139 3 -139 -18z\"/> <path d=\"M495 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M684 717 c-2 -7 -3 -74 -2 -148 l3 -134 60 0 60 0 3 134 c2 90 -1 138 -9 147 -15 18 -108 19 -115 1z\"/> <path d=\"M872 718 c-13 -13 -18 -242 -6 -272 8 -20 103 -23 122 -4 17 17 17 259 0 276 -7 7 -33 12 -58 12 -25 0 -51 -5 -58 -12z\"/> <path d=\"M1062 722 c-9 -6 -12 -43 -10 -148 l3 -139 60 0 60 0 0 145 0 145 -50 3 c-27 1 -56 -2 -63 -6z\"/> <path d=\"M1245 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1435 717 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1626 722 c-8 -13 -9 -269 -1 -281 3 -6 30 -11 60 -11 39 0 54 4 59 16 12 30 7 259 -6 272 -14 14 -104 17 -112 4z\"/> </g> </svg>`\n    let agv180Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-9},${grid + 13}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M434 1857 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1597 1864 c-13 -13 -7 -101 7 -113 9 -8 57 -11 147 -9 l134 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M907 1783 c-4 -3 -7 -15 -7 -25 0 -15 -8 -18 -44 -18 -77 0 -76 2 -76 -125 0 -65 4 -116 10 -120 6 -3 10 -33 10 -65 0 -32 -4 -62 -10 -65 -6 -4 -10 -57 -10 -125 0 -68 4 -121 10 -125 13 -8 13 -108 0 -121 -7 -7 -10 -66 -8 -155 l3 -144 115 0 115 0 3 28 c3 24 7 27 43 27 l39 0 0 71 c0 44 -4 68 -10 64 -6 -4 -10 18 -10 59 0 60 -2 66 -20 66 -29 0 -76 26 -84 45 -3 9 -15 59 -26 112 l-20 95 21 96 c15 71 27 104 45 122 24 24 28 25 164 25 136 0 140 -1 164 -25 17 -18 30 -52 45 -122 l21 -97 -20 -97 c-25 -120 -47 -153 -102 -154 -27 0 -28 -1 -28 -59 0 -33 -4 -63 -10 -66 -5 -3 -10 -35 -10 -71 l0 -64 39 0 c36 0 40 -3 43 -27 l3 -28 115 0 115 0 3 144 c2 89 -1 148 -8 155 -13 13 -13 113 0 121 6 4 10 57 10 125 0 68 -4 121 -10 125 -5 3 -10 33 -10 65 0 32 5 62 10 65 6 4 10 55 10 121 0 68 -4 114 -10 115 -5 1 -19 3 -30 4 -11 1 -33 3 -49 4 -23 1 -30 6 -33 24 -3 21 -7 22 -93 22 -86 0 -90 -1 -93 -22 -3 -21 -8 -23 -73 -23 -67 0 -69 1 -69 25 0 25 -1 25 -88 25 -49 0 -92 -3 -95 -7z m153 -143 c0 -6 -29 -10 -66 -10 -41 0 -63 4 -59 10 3 6 33 10 66 10 33 0 59 -4 59 -10z m325 0 c4 -6 -18 -10 -59 -10 -37 0 -66 4 -66 10 0 6 26 10 59 10 33 0 63 -4 66 -10z m-325 -40 c0 -6 -26 -10 -59 -10 -33 0 -63 5 -66 10 -4 6 18 10 59 10 37 0 66 -4 66 -10z m325 0 c-3 -5 -33 -10 -66 -10 -33 0 -59 4 -59 10 0 6 29 10 66 10 41 0 63 -4 59 -10z m-325 -30 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m330 0 c0 -6 -28 -10 -65 -10 -37 0 -65 4 -65 10 0 6 28 10 65 10 37 0 65 -4 65 -10z m-472 -692 c7 -7 12 -20 12 -30 0 -14 -8 -18 -35 -18 -37 0 -42 9 -25 41 12 22 30 25 48 7z m530 0 c7 -7 12 -20 12 -30 0 -14 -8 -18 -35 -18 -30 0 -35 3 -35 24 0 33 35 47 58 24z\"/> <path d=\"M1608 1679 c-21 -12 -25 -98 -6 -117 13 -13 242 -18 272 -6 20 8 23 103 4 122 -15 15 -245 16 -270 1z\"/> <path d=\"M434 1667 c-3 -8 -4 -36 -2 -63 l3 -49 134 -3 c92 -2 138 1 148 9 9 9 13 28 11 63 l-3 51 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M443 1493 c-17 -6 -17 -105 -1 -121 8 -8 53 -12 138 -12 85 0 130 4 138 12 16 16 16 100 0 116 -12 12 -248 17 -275 5z\"/> <path d=\"M1601 1486 c-7 -8 -11 -36 -9 -63 l3 -48 125 -5 c165 -7 170 -5 170 64 0 40 -4 55 -16 60 -9 3 -71 6 -139 6 -94 0 -125 -3 -134 -14z\"/> <path d=\"M1018 1456 c-8 -8 -23 -53 -33 -101 -17 -84 -17 -92 -1 -181 26 -134 19 -129 176 -129 156 0 149 -5 175 121 17 83 17 90 0 181 -9 52 -24 100 -32 108 -20 21 -265 22 -285 1z m199 -138 c30 -34 34 -55 19 -92 -29 -69 -123 -69 -152 0 -24 57 15 114 76 114 25 0 43 -7 57 -22z\"/> <path d=\"M1122 1255 c0 -16 2 -22 5 -12 2 9 2 23 0 30 -3 6 -5 -1 -5 -18z\"/> <path d=\"M434 1296 c-3 -7 -4 -35 -2 -62 l3 -49 145 0 145 0 3 39 c2 22 1 50 -2 63 -6 23 -8 23 -147 23 -109 0 -141 -3 -145 -14z\"/> <path d=\"M1595 1287 c-4 -13 -5 -41 -3 -63 l3 -39 145 0 145 0 0 60 0 60 -142 3 -142 3 -6 -24z\"/> <path d=\"M434 1107 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1594 1107 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1153 1022 l-43 -3 0 -50 0 -49 50 0 50 0 0 49 c0 28 -3 51 -7 53 -5 2 -27 2 -50 0z\"/> <path d=\"M434 917 c-3 -8 -4 -36 -2 -63 l3 -49 145 0 145 0 0 60 0 60 -143 3 c-115 2 -143 0 -148 -11z\"/> <path d=\"M1597 924 c-10 -10 -9 -96 1 -112 7 -9 43 -12 148 -10 l139 3 0 60 0 60 -141 3 c-77 1 -143 -1 -147 -4z\"/> <path d=\"M1142 761 c2 -77 6 -143 11 -147 17 -17 22 15 25 147 3 137 3 139 -18 139 -21 0 -21 -2 -18 -139z\"/> <path d=\"M444 737 c-21 -12 -19 -113 2 -121 9 -3 71 -6 139 -6 142 0 148 3 143 77 l-3 48 -133 5 c-74 3 -140 1 -148 -3z\"/> <path d=\"M1597 734 c-12 -12 -8 -99 5 -112 14 -14 255 -17 276 -3 9 5 12 25 10 62 l-3 54 -141 3 c-77 1 -143 -1 -147 -4z\"/> </g> </svg>`\n    let agv270Template = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${-10},${grid + 12}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M616 1904 c-3 -9 -6 -71 -6 -139 0 -142 3 -148 77 -143 l48 3 5 133 c3 74 1 140 -3 148 -12 21 -113 19 -121 -2z\"/> <path d=\"M805 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M995 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1185 1907 c-3 -7 -4 -74 -3 -148 l3 -134 39 -3 c22 -2 50 -1 63 3 l24 6 -3 142 -3 142 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1372 1908 c-8 -8 -12 -53 -12 -138 0 -85 4 -130 12 -138 16 -16 100 -16 116 0 13 13 18 242 6 272 -8 20 -103 23 -122 4z\"/> <path d=\"M1557 1914 c-4 -4 -7 -67 -7 -139 0 -153 3 -158 77 -153 l48 3 0 145 0 145 -55 3 c-31 2 -59 0 -63 -4z\"/> <path d=\"M1745 1907 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M694 1557 c-2 -7 -3 -60 -2 -118 l3 -104 28 -3 c24 -3 27 -7 27 -43 l0 -39 71 0 c44 0 68 4 64 10 -4 6 18 10 59 10 60 0 66 2 66 20 0 29 26 76 45 84 9 3 59 15 112 26 l95 20 96 -21 c71 -15 104 -27 122 -45 24 -24 25 -28 25 -164 0 -136 -1 -140 -25 -164 -18 -17 -52 -30 -122 -45 l-97 -21 -97 20 c-120 25 -153 47 -154 103 0 26 -1 27 -59 27 -33 0 -63 5 -66 10 -3 6 -35 10 -71 10 l-64 0 0 -39 c0 -36 -3 -40 -27 -43 l-28 -3 0 -115 0 -115 144 -3 c89 -2 148 1 155 8 13 13 113 13 121 0 4 -6 57 -10 125 -10 68 0 121 4 125 10 3 6 33 10 65 10 32 0 62 -4 65 -10 4 -6 55 -10 121 -10 68 0 114 4 115 10 1 6 3 19 4 30 1 11 3 33 4 49 1 23 6 30 24 33 21 3 22 7 22 93 0 86 -1 90 -22 93 -21 3 -23 8 -23 73 0 67 1 69 25 69 l26 0 -3 93 c-3 87 -4 92 -25 95 -20 3 -23 9 -23 47 0 76 2 75 -125 75 -65 0 -116 -4 -120 -10 -3 -5 -33 -10 -65 -10 -32 0 -62 5 -65 10 -4 6 -57 10 -125 10 -68 0 -121 -4 -125 -10 -3 -5 -30 -10 -60 -10 -30 0 -57 5 -60 10 -10 16 -294 13 -301 -3z m182 -81 c15 -12 17 -18 8 -33 -6 -10 -21 -19 -33 -21 -18 -3 -21 1 -21 32 0 39 13 46 46 22z m704 -121 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m30 0 c0 -37 -4 -65 -10 -65 -11 0 -14 113 -3 123 12 13 13 7 13 -58z m40 -6 c0 -33 -4 -59 -10 -59 -6 0 -10 29 -10 66 0 41 4 63 10 59 6 -3 10 -33 10 -66z m-70 -324 c0 -37 -4 -65 -10 -65 -6 0 -10 28 -10 65 0 37 4 65 10 65 6 0 10 -28 10 -65z m30 -1 c0 -41 -4 -63 -10 -59 -5 3 -10 33 -10 66 0 33 4 59 10 59 6 0 10 -29 10 -66z m40 7 c0 -33 -4 -63 -10 -66 -6 -4 -10 18 -10 59 0 37 4 66 10 66 6 0 10 -26 10 -59z m-765 -91 c8 -25 -10 -50 -36 -50 -15 0 -19 7 -19 35 0 30 3 35 24 35 16 0 27 -7 31 -20z\"/> <path d=\"M1147 1361 c-43 -10 -83 -23 -90 -30 -8 -8 -12 -54 -12 -142 0 -154 -5 -148 121 -174 83 -17 90 -17 181 0 52 9 100 24 108 32 12 11 15 43 15 141 0 70 -4 133 -9 140 -10 16 -151 52 -201 51 -19 -1 -70 -9 -113 -18z m171 -114 c44 -41 22 -118 -41 -140 -10 -4 -33 -1 -51 7 -68 28 -69 122 -2 152 36 15 62 10 94 -19z\"/> <path d=\"M1243 1223 c9 -2 23 -2 30 0 6 3 -1 5 -18 5 -16 0 -22 -2 -12 -5z\"/> <path d=\"M920 1190 l0 -50 48 0 c27 0 51 2 53 4 2 3 3 25 1 50 l-4 46 -49 0 -49 0 0 -50z\"/> <path d=\"M628 1203 c-10 -2 -18 -8 -18 -13 0 -14 44 -20 168 -20 115 0 122 1 122 20 0 19 -6 20 -127 19 -71 -1 -136 -3 -145 -6z\"/> <path d=\"M622 748 c-14 -14 -17 -254 -3 -276 5 -9 25 -12 62 -10 l54 3 0 145 0 145 -50 3 c-30 2 -55 -2 -63 -10z\"/> <path d=\"M812 752 c-9 -6 -12 -43 -10 -148 l3 -139 60 0 60 0 0 145 0 145 -50 3 c-27 1 -56 -2 -63 -6z\"/> <path d=\"M995 747 c-3 -7 -4 -74 -3 -148 l3 -134 60 0 60 0 0 145 0 145 -58 3 c-41 2 -59 -1 -62 -11z\"/> <path d=\"M1184 747 c-2 -7 -3 -74 -2 -148 l3 -134 60 0 60 0 3 139 c2 105 -1 141 -10 148 -21 13 -108 10 -114 -5z\"/> <path d=\"M1376 752 c-8 -13 -10 -268 -2 -281 11 -18 113 -14 120 5 12 30 7 259 -6 272 -13 13 -104 17 -112 4z\"/> <path d=\"M1562 748 c-13 -13 -18 -242 -6 -272 8 -20 103 -23 122 -4 15 15 17 241 2 269 -8 15 -21 19 -58 19 -27 0 -53 -5 -60 -12z\"/> <path d=\"M1751 747 c-8 -10 -11 -56 -9 -148 l3 -134 60 0 60 0 0 145 0 145 -51 3 c-35 2 -54 -2 -63 -11z\"/> </g> </svg>`\n    let agvTemplate = ``;\n    switch(orientation) {\n      case 0:\n        agvTemplate = agv0Tempalate;\n        break;\n      case 90:\n        agvTemplate = agv90Template;\n        break;\n      case 180:\n        agvTemplate = agv180Template;\n        break;\n      case 270:\n        agvTemplate = agv270Template;\n        break;\n      default:\n        agvTemplate = agv0Tempalate;\n    }\n    let updateAgv = [];\n    let clearAgv = {\n        \"command\": \"remove_element\",\n        \"elementId\": `map_agv_${id}`\n    }\n    currentCommand.push(clearAgv);\n    currentCommand.push(commonFunction.addForeignObject(`map_agv_${id}`, xPos, yPos, grid, grid, agvTemplate));\n    return currentCommand;\n}\n\ncommonFunction.addCharger = function addCharger(id, xPos, yPos, width, height, color, grid) {\n    let scaleX = width / grid;\n    let scaleY = height / grid;\n    // Dummy data\n    // TODO: Find the equation to calculator scale coefficiants\n    scaleX = 0.012;\n    scaleY = -0.012;\n    \n    let chargerTemplate = `<svg version=\"1.0\" width=100%\" height=\"100%\"> <g transform=\"translate(${10},${grid - 6}) scale(${scaleX},${scaleY})\" fill=\"${color}\" stroke=\"none\"> <path d=\"M993 4879 c-71 -27 -155 -106 -190 -177 l-28 -57 -3 -2213 -2 -2212 1265 0 1265 0 0 1439 0 1440 38 -6 c97 -14 198 -89 244 -182 l23 -46 5 -1000 c5 -992 5 -1000 26 -1057 56 -146 188 -266 334 -304 85 -22 214 -15 292 15 119 46 231 157 280 279 l23 57 5 978 5 978 58 24 c118 47 196 124 238 232 20 51 23 81 27 251 l4 192 -81 0 -81 0 0 184 c0 170 -1 185 -21 210 -27 35 -86 36 -117 3 -21 -22 -22 -32 -22 -210 l0 -187 -85 0 -85 0 0 169 c0 174 -8 224 -40 241 -30 16 -76 12 -101 -9 -23 -19 -24 -23 -27 -210 l-3 -191 -75 0 -75 0 3 -202 c3 -196 4 -205 30 -261 36 -77 116 -160 191 -197 33 -16 69 -30 79 -30 18 0 18 -29 16 -967 l-3 -968 -24 -48 c-31 -62 -97 -128 -158 -157 -69 -34 -187 -34 -260 -1 -62 27 -135 102 -166 169 l-22 47 -5 1000 c-5 929 -6 1003 -23 1045 -69 173 -218 292 -395 316 l-52 7 0 666 c0 583 -2 674 -16 721 -31 103 -114 193 -211 230 -53 20 -76 20 -1041 19 -965 0 -988 0 -1039 -20z m1957 -1615 c0 -1252 -1 -1289 -20 -1387 -65 -326 -337 -612 -665 -699 -110 -29 -325 -31 -440 -4 -162 38 -311 122 -435 246 -121 121 -193 243 -244 415 -20 69 -20 88 -23 1393 l-3 1322 915 0 915 0 0 -1286z\"/> <path d=\"M2233 3918 c-61 -65 -796 -992 -800 -1010 -3 -10 2 -29 11 -43 l16 -25 231 0 c181 0 230 -3 226 -12 -2 -7 -48 -165 -102 -351 -93 -323 -96 -339 -81 -362 11 -17 26 -25 46 -25 27 0 66 45 440 512 363 452 411 515 408 542 -5 51 -28 56 -265 56 -117 0 -213 4 -213 8 0 5 43 157 95 338 52 181 95 339 95 351 0 23 -34 53 -60 53 -9 0 -30 -15 -47 -32z\"/> </g> </svg>`\n    let newCharger = commonFunction.addForeignObject(id, xPos, yPos, width, height, chargerTemplate);\n    return newCharger;\n}\n\nglobal.set('commonFunction', commonFunction)\nreturn;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 660,
        "wires": []
    },
    {
        "id": "1c7cd7ef.b23a98",
        "type": "link out",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "To SVG Map dashboard",
        "links": [
            "71521ef9.6d8cd"
        ],
        "x": 810,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "1141a0f8.7f7ebf",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "SVG out",
        "links": [
            "9ce21aea.979bc8"
        ],
        "x": 1160,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "71521ef9.6d8cd",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "SVG In",
        "links": [
            "1c7cd7ef.b23a98",
            "8cf578a6.290918",
            "8218ca33.8a3e48",
            "5909fd.0f8a5604"
        ],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "b3d4bc8e.f1fc9",
                "7e71843d.45a2bc"
            ]
        ],
        "l": true
    },
    {
        "id": "7e71843d.45a2bc",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "e72da03.941bb6",
        "type": "link out",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Query done",
        "links": [
            "2e8693a9.e62d0c"
        ],
        "x": 1470,
        "y": 280,
        "wires": [],
        "l": true
    },
    {
        "id": "f0523f00.b2603",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "name": "Start",
        "links": [
            "22aac6d9.964c5a",
            "2882b34c.253fec",
            "2e8693a9.e62d0c",
            "2ee9608f.75312",
            "5912a1b8.95488",
            "6da8fc6d.c89514",
            "973b0150.86a99",
            "9fc22c4ffd8d47ad",
            "d31db292.9a0e8",
            "e265ff4.d2674",
            "fcbb39f2.9bb258"
        ],
        "x": 490,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "e832482c.3d71b8",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get waiting zone data",
        "func": "let query       = \"SELECT * FROM waiting_zone\";\nmsg.topic       = query;\nmsg.queryType   = 'WAITING_ZONE';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 520,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "407030b0.e026f",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set waitingZoneInfo",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet waitingZoneInfo = {};\nfor(let i in result) {\n    waitingZoneInfo[result[i].id] = result[i];\n}\nglobal.set('database.waitingZoneInfo', waitingZoneInfo);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 520,
        "wires": []
    },
    {
        "id": "9e5fd86c.9d89a8",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "name": "Set system off",
        "func": "// @ts-nocheck\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nif(!systemRunningStatus) return;\nglobal.set('systemInfo.runningStatus', false)\nmsg.payload = global.get('mapTemplate.ClearMap');\n// create msg update button\nlet updateButtonCommand = [];\n\nlet updateStop = {};\nupdateStop.id      = \"startSystem\";\nupdateStop.color   = \"#097479\";\nupdateStop.disable = false;\nupdateStop.cursor  = \"auto\";\nupdateButtonCommand.push(updateStop);\n\nupdateStop = {};\nupdateStop.id      = \"stopSystem\";\nupdateStop.color   = \"gray\";\nupdateStop.disable = true;\nupdateStop.cursor  = \"auto\";\nupdateButtonCommand.push(updateStop);\n\nmsg.buttonList = updateButtonCommand;\nglobal.set('ui.agvSearching.selectedAgv.agvId' , \"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 620,
        "wires": [
            [
                "8cf578a6.290918"
            ]
        ]
    },
    {
        "id": "8cf578a6.290918",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "name": "Stop",
        "links": [
            "2882b34c.253fec",
            "2e8693a9.e62d0c",
            "2ee9608f.75312",
            "5912a1b8.95488",
            "6da8fc6d.c89514",
            "71521ef9.6d8cd",
            "870aed2.7443f1",
            "973b0150.86a99",
            "9fc22c4ffd8d47ad",
            "cf71e4a8.c63518",
            "d31db292.9a0e8",
            "e265ff4.d2674",
            "458355de2d2b7b01"
        ],
        "x": 490,
        "y": 620,
        "wires": [],
        "l": true
    },
    {
        "id": "7f97e2da.fafedc",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "ad04ae0d.d277a",
        "name": "Set system on",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nif(systemRunningStatus) return;\nglobal.set('systemInfo.runningStatus', true);\n\n// Create msg update button\nmsg         = {};\nupdateButtonCommand = [];\n\nlet updateStart = {};\nupdateStart.id      = \"startSystem\";\nupdateStart.color   = \"gray\";\nupdateStart.disable = true;\nupdateStart.cursor = \"auto\";\nupdateButtonCommand.push(updateStart);\n\nupdateStart = {};\nupdateStart.id      = \"stopSystem\";\nupdateStart.color   = \"#097479\";\nupdateStart.disable = false;\nupdateStart.cursor = \"auto\";\nupdateButtonCommand.push(updateStart);\n\nmsg.buttonList = updateButtonCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 580,
        "wires": [
            [
                "f0523f00.b2603"
            ]
        ]
    },
    {
        "id": "b341ff1.a2c42",
        "type": "ui_ui_control",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "events": "all",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "aa5aadbe.487ad"
            ]
        ]
    },
    {
        "id": "aa5aadbe.487ad",
        "type": "trigger",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "300",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "770e95ad.49e05c"
            ]
        ]
    },
    {
        "id": "770e95ad.49e05c",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "Check system on",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nif(!systemRunningStatus) return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            [
                "973e8c1c.7e04b"
            ]
        ]
    },
    {
        "id": "d395301d.af384",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "a96cf21c.449eb",
        "type": "inject",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "props": [
            {
                "p": "agvId",
                "v": "1",
                "vt": "str"
            },
            {
                "p": "node",
                "v": "12",
                "vt": "num"
            },
            {
                "p": "orientation",
                "v": "90",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "5e5c1649.ed7618"
            ]
        ]
    },
    {
        "id": "5e5c1649.ed7618",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "func": "let updateAgvCommand = [];\nlet commonFunction = global.get('commonFunction')\nupdateAgvCommand = commonFunction.updateAgv(msg.agvId, msg.node, msg.orientation, 'red', 75, updateAgvCommand);\nmsg.payload = updateAgvCommand\nreturn msg;\n\n// (id,node, orientation, color, grid, currentCommand)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "1c7cd7ef.b23a98",
                "b7a44681.720e68"
            ]
        ]
    },
    {
        "id": "b7a44681.720e68",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "178da9bd.7122c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "9ce21aea.979bc8",
        "type": "link in",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Handle User Clicked",
        "links": [
            "1141a0f8.7f7ebf"
        ],
        "x": 250,
        "y": 580,
        "wires": [
            [
                "45aed6de.8b8f88"
            ]
        ],
        "l": true
    },
    {
        "id": "45aed6de.8b8f88",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Clicked Object",
        "func": "let userClickedEvent = msg;\nlet objectClickedOn = userClickedEvent.elementId.split('_')[1];\nlet objectId = Number(userClickedEvent.elementId.split('_')[2]);\nmsg = {};\nmsg.objectId = objectId;\nmsg.objectClickedOn = objectClickedOn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 580,
        "wires": [
            [
                "c4c8dd0c.230f",
                "a3151253.f90fe"
            ]
        ]
    },
    {
        "id": "f96fbae.a51f548",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "group": "2e0d4d2d.123722",
        "name": "System Overview",
        "order": 1,
        "width": 13,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1290,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "387c08e5.4f8508",
        "type": "template",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n<body>\n    <h4 style=\"text-align: center;\">\n        Click dashboard for detail information\n    </h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "f96fbae.a51f548"
            ]
        ]
    },
    {
        "id": "79471e9d.e2a53",
        "type": "inject",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 660,
        "wires": [
            [
                "387c08e5.4f8508"
            ]
        ]
    },
    {
        "id": "c4c8dd0c.230f",
        "type": "switch",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "",
        "property": "objectClickedOn",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "floor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "agv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pod",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "station",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "waitingZone",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "charger",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 650,
        "y": 580,
        "wires": [
            [
                "73cd25a8.1f9c7c"
            ],
            [
                "b1ff1bfc.9c8ab8"
            ],
            [
                "dd20ef66.28b35"
            ],
            [
                "dcadf85e.4cfb98"
            ],
            [
                "34713e6c.fc9c12"
            ],
            [
                "3825592a.fa5876"
            ],
            [
                "3a7f4310.a73d8c"
            ]
        ]
    },
    {
        "id": "3a7f4310.a73d8c",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 660,
        "wires": []
    },
    {
        "id": "84f0e8f5.092258",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "System Overview",
        "links": [
            "5fc64713.bd6908"
        ],
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "f96fbae.a51f548",
                "dd238a75.49e3a8"
            ]
        ],
        "l": true
    },
    {
        "id": "2f0b9923.d9cfd6",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Update system load",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nmsg = {};\nif(!systemRunningStatus) {\n    msg.systemLoad = 0;\n    return msg;\n}\n\nlet agvsInfo            = global.get('database.agvInfo');\nlet numberAgv           = Object.keys(agvsInfo).length;\nlet numberActiveAgv     = 0;\n\nfor(let agv in agvsInfo) {\n    if(agvsInfo[agv].status === 1 && agvsInfo[agv].isAvailable === 1) numberActiveAgv++;    \n}\nmsg.systemLoad = 100 - ((numberActiveAgv / numberAgv) * 100).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "78fac503.3c059c"
            ]
        ]
    },
    {
        "id": "1e447b6c.607a15",
        "type": "link in",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Update Database",
        "links": [
            "668ab295.aed77c",
            "3197aee9.7e1772"
        ],
        "x": 140,
        "y": 360,
        "wires": [
            [
                "2dafc0b6.629d6",
                "58e520cf.5dd6"
            ]
        ],
        "l": true
    },
    {
        "id": "8ab03d78.74def",
        "type": "trigger",
        "z": "2b5ed7dd.464b08",
        "name": "Update SystemOverview delay",
        "op1": "START",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 860,
        "wires": [
            [
                "cb9b199f.152df8"
            ]
        ]
    },
    {
        "id": "8e5b4235.d041a",
        "type": "inject",
        "z": "2b5ed7dd.464b08",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "8ab03d78.74def"
            ]
        ]
    },
    {
        "id": "cb9b199f.152df8",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "name": "Check system status",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nif(!systemRunningStatus) return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 860,
        "wires": [
            [
                "3197aee9.7e1772"
            ]
        ]
    },
    {
        "id": "3197aee9.7e1772",
        "type": "link out",
        "z": "2b5ed7dd.464b08",
        "name": "Refresh System Overview",
        "links": [
            "1e447b6c.607a15"
        ],
        "x": 870,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "2e8693a9.e62d0c",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Update system overview charts",
        "links": [
            "f0523f00.b2603",
            "e72da03.941bb6",
            "8cf578a6.290918"
        ],
        "x": 890,
        "y": 320,
        "wires": [
            [
                "2f0b9923.d9cfd6",
                "36f2de54.90e642",
                "10075c11.d63454",
                "6e3e8688.00f2b8"
            ]
        ],
        "l": true
    },
    {
        "id": "36f2de54.90e642",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Update storage",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nmsg = {};\nif(!systemRunningStatus) {\n    msg.storage = 0;\n    return msg;\n}\n\nlet podsInfo            = global.get('database.podInfo');\nlet numberPod           = Object.keys(podsInfo).length;\nlet loadPercentage      = 0;\n\nfor(let pod in podsInfo) {\n    loadPercentage += podsInfo[pod].load;   \n}\n\nmsg.storage = (loadPercentage / numberPod).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 300,
        "wires": [
            [
                "709bed77.fb46f4"
            ]
        ]
    },
    {
        "id": "10075c11.d63454",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 360,
        "wires": []
    },
    {
        "id": "626c4489.d13f1c",
        "type": "debug",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 320,
        "wires": []
    },
    {
        "id": "4fe54c7b.ccf644",
        "type": "inject",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "d166ccd7.d0443"
            ]
        ]
    },
    {
        "id": "6e3e8688.00f2b8",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Update system load",
        "func": "let agvsInfo            = global.get('database.agvInfo');\nif(!agvsInfo) return;\n\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nif(!systemRunningStatus) {\n    for(let agv in agvsInfo) {\n        msg = {};\n        msg.topic = `AGV ${agv}`;\n        msg.label = `AGV ${agv}`;\n        msg.payload = 0;\n        node.send(msg)\n    }\n    return;\n}\n\nfor(let agv in agvsInfo) {\n    msg = {};\n    msg.topic = `AGV ${agv}`;\n    msg.label = `AGV ${agv}`;\n    msg.payload = agvsInfo[agv].batt ;\n    node.send(msg)\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1240,
        "y": 480,
        "wires": [
            [
                "af99f943.7b3188"
            ]
        ]
    },
    {
        "id": "b8763d33.a3583",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Stowing per hour",
        "group": "a8c7d9a3.586368",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Stowing per hour",
        "label": "perHour",
        "format": "{{msg.stow}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "5000",
        "seg2": "8000",
        "x": 1470,
        "y": 420,
        "wires": []
    },
    {
        "id": "5fc64713.bd6908",
        "type": "link out",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "To system overview",
        "links": [
            "84f0e8f5.092258"
        ],
        "x": 1310,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "dd238a75.49e3a8",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 620,
        "wires": []
    },
    {
        "id": "f91660fa.54fc",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Floor grid template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>Floor</title>\n<body>\n<img class=\"img\" src=\"/agv/floor_icon_1.png\" alt=\"floor\">\n<h2 style=\"text-align:center; color:lightblue !important;\">Floor Grid</h2>\n<h4 style=\"text-align:center;\">Floor Grid ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">Floor Grid RFID: {{rfid}}</h4>\n<h4 style=\"text-align:center;\">Floor Grid x: {{xPos}}</h4>\n<h4 style=\"text-align:center;\">Floor Grid y: {{yPos}}</h4>\n<h4 style=\"text-align:center;\">Floor Grid blocked: {{isBlocked}}</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1090,
        "y": 480,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "73cd25a8.1f9c7c",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get floor grid data",
        "func": "let floorData   = global.get(`database.mapInfo['${msg.objectId}']`);\nmsg             = {};\nmsg.objectId    = floorData.id;\nmsg.xPos        = floorData.x;\nmsg.yPos        = floorData.y;\nmsg.isBlocked   = floorData.is_blocked;\nmsg.isActive    = floorData.is_active;\nmsg.rfid        = floorData.rfid_value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "f91660fa.54fc",
                "75e64579.7be56c"
            ]
        ]
    },
    {
        "id": "a3151253.f90fe",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 620,
        "wires": []
    },
    {
        "id": "75e64579.7be56c",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 440,
        "wires": []
    },
    {
        "id": "cf71e4a8.c63518",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Update systemoverview",
        "links": [
            "8cf578a6.290918"
        ],
        "x": 880,
        "y": 700,
        "wires": [
            [
                "387c08e5.4f8508"
            ]
        ],
        "l": true
    },
    {
        "id": "80a99c74.fc181",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "AGV template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>Floor</title>\n<body>\n<img class=\"img\" src=\"/agv/agv_icon_1.png\" alt=\"floor\" >\n<h2 style=\"text-align:center; color:lightblue !important;\">AGV</h2>\n\n<h4 style=\"text-align:center;\">AGV ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">AGV IP address: {{ip}}:{{port}}</h4>\n<h4 style=\"text-align:center;\">AGV Orientation {{orientation}}</h4>\n<h4 style=\"text-align:center;\">AGV Current POD ID: {{currentPod}}</h4>\n<h4 style=\"text-align:center;\">AGV Battery: {{battery}}</h4>\n<h4 style=\"text-align:center;\">AGV Running Status: {{runningStatus}}</h4>\n<h4 style=\"text-align:center;\">AGV Node ID: {{nodeId}}</h4>\n<h4 style=\"text-align:center;\">AGV Available: {{isAvailable}}</h4>\n<h4 style=\"text-align:center;\">AGV Speed: {{speed}}</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1080,
        "y": 520,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "b1ff1bfc.9c8ab8",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get AGV data",
        "func": "let agvData         = global.get(`database.agvInfo['${msg.objectId}']`);\nmsg                 = {};\nmsg.objectId        = agvData.id;\nmsg.ip              = agvData.ip;\nmsg.port            = agvData.port;\nmsg.orientation     = agvData.orientation;\nmsg.currentPod      = agvData.current_POD;\nmsg.battery         = agvData.batt;\nmsg.runningStatus   = agvData.status;\nmsg.nodeId          = agvData.node_id;\nmsg.isAvailable     = agvData.isAvailable;\nmsg.speed           = agvData.speed;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 520,
        "wires": [
            [
                "80a99c74.fc181"
            ]
        ]
    },
    {
        "id": "f11e1b80.9feaf8",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 400,
        "wires": [
            [
                "d0776f21.5c26b"
            ]
        ]
    },
    {
        "id": "d0776f21.5c26b",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "2ee2ca1f.e879a6",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_1_ server",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "1a8abdc9.2444a2"
            ]
        ]
    },
    {
        "id": "1a8abdc9.2444a2",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 520,
        "wires": []
    },
    {
        "id": "69264abb.332864",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_2_ server",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 500,
        "wires": [
            [
                "1a8abdc9.2444a2"
            ]
        ]
    },
    {
        "id": "22f228a3.9ada08",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_3_ server",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 560,
        "wires": [
            [
                "1a8abdc9.2444a2"
            ]
        ]
    },
    {
        "id": "caf67d02.797f7",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_4_ server",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "1a8abdc9.2444a2"
            ]
        ]
    },
    {
        "id": "88f256c2.63fc48",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_5_ server",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 250,
        "y": 680,
        "wires": [
            [
                "1a8abdc9.2444a2"
            ]
        ]
    },
    {
        "id": "f95cf576.b8a228",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "235a5aa6.c62996"
            ]
        ]
    },
    {
        "id": "235a5aa6.c62996",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_2_worker",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 480,
        "y": 280,
        "wires": []
    },
    {
        "id": "369801da.06edfe",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "b61b7747.fc3228"
            ]
        ]
    },
    {
        "id": "b61b7747.fc3228",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agvWorker1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "34e18169.908dae",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "7fbec1fb.092e8"
            ]
        ]
    },
    {
        "id": "7fbec1fb.092e8",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agv_3_worker",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 480,
        "y": 340,
        "wires": []
    },
    {
        "id": "180e74a7.8a148b",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6_48",
        "payloadType": "str",
        "x": 270,
        "y": 2840,
        "wires": [
            [
                "b13a8fad.62d7c"
            ]
        ]
    },
    {
        "id": "b13a8fad.62d7c",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "dashboardPodCarryingRequest",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 770,
        "y": 2900,
        "wires": []
    },
    {
        "id": "6d3d8988.a50ed8",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "12_2",
        "payloadType": "str",
        "x": 270,
        "y": 2880,
        "wires": [
            [
                "b13a8fad.62d7c"
            ]
        ]
    },
    {
        "id": "68bd396a.0be568",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "16_2",
        "payloadType": "str",
        "x": 270,
        "y": 2920,
        "wires": [
            [
                "b13a8fad.62d7c"
            ]
        ]
    },
    {
        "id": "e272dc79.44f7",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agvHandler",
        "qos": "0",
        "datatype": "buffer",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 190,
        "y": 1500,
        "wires": [
            [
                "a98bd792.6b1618"
            ]
        ]
    },
    {
        "id": "a98bd792.6b1618",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1400,
        "wires": []
    },
    {
        "id": "84b97897.180a88",
        "type": "function",
        "z": "32b023fb.1f242c",
        "name": "Parse data",
        "func": "const TO_POD_COLOR = \"#ffe6b3\";\nconst TO_DEC_COLOR = \"#669999\";\n\nlet commonFunction = global.get('commonFunction');\nlet updateStringMsg = msg.payload;\nlet updateCommand = [];\n\nlet routeFromAgvToPod = updateStringMsg.split('@')[0];\nrouteFromAgvToPod = routeFromAgvToPod.split(':');\n// node.warn(routeFromAgvToPod);\nfor(let i = 0; i < routeFromAgvToPod.length; i++) {\n    updateCommand.push(commonFunction.changeColor(`#map_floor_${routeFromAgvToPod[i]}`, TO_POD_COLOR));\n}\n\nlet routeFromPodToEnd = updateStringMsg.split('@')[1];\nrouteFromPodToEnd = routeFromPodToEnd.split(':');\n// node.warn(routeFromPodToEnd);\nfor(let i = 0; i < routeFromPodToEnd.length; i++) {\n    updateCommand.push(commonFunction.changeColor(`#map_floor_${routeFromPodToEnd[i]}`, TO_DEC_COLOR));\n}\nmsg = {};\nmsg.payload = updateCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "6b457e3e.e4986",
                "8218ca33.8a3e48"
            ]
        ]
    },
    {
        "id": "f0dbd257.c2af8",
        "type": "mqtt in",
        "z": "32b023fb.1f242c",
        "name": "",
        "topic": "dashboardControllerPodMoving",
        "qos": "0",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "84b97897.180a88"
            ]
        ]
    },
    {
        "id": "6b457e3e.e4986",
        "type": "debug",
        "z": "32b023fb.1f242c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "8218ca33.8a3e48",
        "type": "link out",
        "z": "32b023fb.1f242c",
        "name": "Update route",
        "links": [
            "71521ef9.6d8cd"
        ],
        "x": 630,
        "y": 100,
        "wires": [],
        "l": true
    },
    {
        "id": "d1e73c71.a412a",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "11_18",
        "payloadType": "str",
        "x": 270,
        "y": 2960,
        "wires": [
            [
                "b13a8fad.62d7c",
                "53bc30f.9f769d"
            ]
        ]
    },
    {
        "id": "d36b0d01.563a",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "9_58",
        "payloadType": "str",
        "x": 270,
        "y": 3000,
        "wires": [
            [
                "b13a8fad.62d7c",
                "53bc30f.9f769d"
            ]
        ]
    },
    {
        "id": "dd20ef66.28b35",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get POD data",
        "func": "let podData         = global.get(`database.podInfo['${msg.objectId}']`);\nlet productsData    = global.get(`database.productsData`);\n\nmsg                 = {};\nmsg.objectId        = podData.id;\nmsg.productId       = podData.product_id;\n\nmsg.goods           = productsData[podData.product_id].name;\nmsg.goodInfo        = productsData[podData.product_id].info;\nmsg.nodeId          = podData.node_id;\nmsg.load            = podData.load;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "701cde21.7a5f9"
            ]
        ]
    },
    {
        "id": "701cde21.7a5f9",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "POD template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>Floor</title>\n<body>\n<img class=\"img\" src=\"/agv/pod_icon_1.png\" alt=\"floor\" >\n<h2 style=\"text-align:center; color:lightblue !important;\">POD</h2>\n\n<h4 style=\"text-align:center;\">POD ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">POD product ID: {{productId}}</h4>\n<h4 style=\"text-align:center;\">POD product name: {{goods}}</h4>\n<h4 style=\"text-align:center;\">POD product Informations: {{goodInfo}}</h4>\n<h4 style=\"text-align:center;\">POD Node ID: {{nodeId}}</h4>\n<h4 style=\"text-align:center;\">POD Loading space: {{load}}%</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1080,
        "y": 560,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "3825592a.fa5876",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get charger data",
        "func": "let chargerData         = global.get(`database.chargerInfo['${msg.objectId}']`);\nmsg                 = {};\nmsg.objectId        = chargerData.id;\nmsg.chargingStatus  = chargerData.charging_status;\nmsg.orientation     = chargerData.orientation;\nmsg.nodeId          = chargerData.node_id;\nmsg.agvId           = chargerData.agv_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "3c9bceea.084012"
            ]
        ]
    },
    {
        "id": "3c9bceea.084012",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Charger template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>Floor</title>\n<body>\n<img class=\"img\" src=\"/agv/charger_icon_2.png\" alt=\"floor\" width=\"20% !important\" height=\"50% !important\">\n<h2 style=\"text-align:center; color:lightblue !important;\">Charger</h2>\n\n<h4 style=\"text-align:center;\">Charger ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">Charging Status {{chargingStatus}}</h4>\n<h4 style=\"text-align:center;\">Charger's Direction: {{orientation}}</h4>\n<h4 style=\"text-align:center;\">Charger Node ID: {{nodeId}}</h4>\n<h4 style=\"text-align:center;\">AGV ID on Charger: {{agvId}}</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "dcadf85e.4cfb98",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get Station data",
        "func": "let stationData     = global.get(`database.stationInfo['${msg.objectId}']`);\nmsg                 = {};\nmsg.objectId        = stationData.id;\nmsg.nodeId          = stationData.node_id;\nmsg.available       = stationData.available;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "dec4419a.b793"
            ]
        ]
    },
    {
        "id": "dec4419a.b793",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Station template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>station</title>\n<body>\n<img class=\"img\" src=\"/agv/station_icon_1.png\" alt=\"floor\" >\n<h2 style=\"text-align:center; color:lightblue !important;\">Station</h2>\n\n<h4 style=\"text-align:center;\">Station ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">Station Node ID: {{nodeId}}</h4>\n<h4 style=\"text-align:center;\">Station status: {{available}}</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1080,
        "y": 600,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "34713e6c.fc9c12",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Get Waiting Zone data",
        "func": "let waitingZoneData = global.get(`database.waitingZoneInfo['${msg.objectId}']`);\nmsg                 = {};\nmsg.objectId        = waitingZoneData.id;\nmsg.nodeId          = waitingZoneData.node_id;\nmsg.inQuere         = waitingZoneData.in_quere;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 640,
        "wires": [
            [
                "ff5ca82b.d3e868"
            ]
        ]
    },
    {
        "id": "ff5ca82b.d3e868",
        "type": "template",
        "z": "e4c679fa.2843d8",
        "g": "ff9fbe95.2d40e",
        "name": "Waiting Zone template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<title>Waiting Zone</title>\n<body>\n<img class=\"img\" src=\"/agv/picking_zone_icon_1.png\" alt=\"floor\">\n<h2 style=\"text-align:center; color:lightblue !important;\">Waiting Zone</h2>\n\n<h4 style=\"text-align:center;\">Waiting Zone ID: {{objectId}}</h4>\n<h4 style=\"text-align:center;\">Waiting Zone Node ID: {{nodeId}}</h4>\n<h4 style=\"text-align:center;\">Waiting Zone status: {{inQuere}}</h4>\n</body>\n</html>\n",
        "output": "str",
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "5fc64713.bd6908"
            ]
        ]
    },
    {
        "id": "77e3797a.2531a8",
        "type": "inject",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "9646d63e.5c3f78",
                "a05f16e7.e89258"
            ]
        ]
    },
    {
        "id": "9646d63e.5c3f78",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Inition environment variables",
        "rules": [
            {
                "t": "set",
                "p": "systemInfo",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "systemInfo.runningStatus",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "database",
                "pt": "global",
                "to": "{}",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "boolean.true",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "boolean.false",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "ui",
                "pt": "global",
                "to": "{\"tab\":\"SO\",\"agvSearching\":{},\"manualMove\":{}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "log",
                "pt": "global",
                "to": "{\"asLog\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "7a5cd942.d8bd88",
                "b12573e3.4ac34",
                "eb9e0b8f.827b28",
                "5c9d7cf9.9210f4"
            ]
        ]
    },
    {
        "id": "9250e83e.40f0a8",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "group": "2d5a4608.62374a",
        "name": "POD Moving",
        "order": 1,
        "width": 28,
        "height": 13,
        "format": "<div class=\"container\">\n  <div class=\"control-group\">\n    <h1 style=\"background-color: #333333; text-align: center;\">Stowing</h1>\n    <h5 style=\"text-align: center; background-color: #a6a6a6;\"> Store goods, cargo.</h5>\n    <h5 style=\"text-align: center; background-color: #a6a6a6;\"> An AGV will come and bring new cargo, good to the warehouse.</h5>\n    <md-button ng-click=\"send({payload: 'stowing'})\" style=\"height: 20px; box-shadow: none; margin-top: 33px;\">\n        Start stowing\n    </md-button>\n  </div>\n  \n  <div class=\"control-group\">\n    <h1 style=\"background-color: #333333; text-align: center;\" >Picking</h1>\n    <h5 style=\"text-align: center;\">  Taking and collecting articles in a specified quantity before shipment to satisfy customers' orders. It is a basic warehousing process and has an important influence on supply chain's productivity.</h5>\n    <h5 style=\"text-align: center;\"> An AGV will bring prepared order(s) to station</h5>\n    <md-button ng-click=\"send({payload: 'picking'})\" style=\"height: 20px; box-shadow: none; margin-top: 0px;\">\n        Start picking\n    </md-button>\n  </div>\n  \n  <div class=\"control-group\">\n    <h1 style=\"background-color: #333333; text-align: center;\" >Manual Manager</h1>\n    <md-button ng-click=\"send({payload: 'moveAgv'})\" style=\"height: 20px; box-shadow: none; margin-top: 37px;\">\n        Move an AGV\n    </md-button>\n    <md-button ng-click=\"send({payload: 'reArrange'})\" style=\"height: 20px; box-shadow: none;\">\n        Re-arrange warehouse\n    </md-button>\n    <md-button ng-click=\"send({payload: 'emergencyStop'})\" style=\"height: 20px; box-shadow: none;\">\n        Emmergency stop system\n    </md-button>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 350,
        "y": 2380,
        "wires": [
            [
                "f5d4e15d.a1cc5"
            ]
        ]
    },
    {
        "id": "341ba009.fdf21",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "name": "POD moving in",
        "links": [],
        "x": 100,
        "y": 2380,
        "wires": [
            [
                "9250e83e.40f0a8"
            ]
        ],
        "l": true
    },
    {
        "id": "75121289.2e8dfc",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agvWorker1",
        "qos": "0",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 190,
        "y": 1560,
        "wires": [
            [
                "ea862b7a.d23178",
                "ab7fd37.7db453"
            ]
        ]
    },
    {
        "id": "b4a4c17d.36cea",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6ecd42d7.09269c",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "11_68",
        "payloadType": "str",
        "x": 270,
        "y": 3040,
        "wires": [
            [
                "b13a8fad.62d7c",
                "53bc30f.9f769d"
            ]
        ]
    },
    {
        "id": "d166ccd7.d0443",
        "type": "trigger",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1020,
        "y": 240,
        "wires": [
            [
                "6e3e8688.00f2b8",
                "36f2de54.90e642",
                "2f0b9923.d9cfd6"
            ]
        ]
    },
    {
        "id": "bb6c9ba4.ec7cb8",
        "type": "mqtt in",
        "z": "32b023fb.1f242c",
        "name": "",
        "topic": "dashboardNotifycation",
        "qos": "0",
        "datatype": "utf8",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "2746d08d.0bd4c"
            ]
        ]
    },
    {
        "id": "2746d08d.0bd4c",
        "type": "ui_toast",
        "z": "32b023fb.1f242c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Oops!",
        "name": "",
        "x": 450,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8603ddea.59d52",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "17_28",
        "payloadType": "str",
        "x": 270,
        "y": 3080,
        "wires": [
            [
                "b13a8fad.62d7c",
                "53bc30f.9f769d"
            ]
        ]
    },
    {
        "id": "f153f919.da5b98",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1920,
        "wires": [
            [
                "6a35f6b8.6baaa8"
            ]
        ]
    },
    {
        "id": "6a35f6b8.6baaa8",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "AGV01Start",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 490,
        "y": 1920,
        "wires": []
    },
    {
        "id": "ddb30f56.64bfb",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1960,
        "wires": [
            [
                "18534dde.d0af72"
            ]
        ]
    },
    {
        "id": "18534dde.d0af72",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "AGV01Stop",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 490,
        "y": 1960,
        "wires": []
    },
    {
        "id": "90782eab.9fa57",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2000,
        "wires": [
            [
                "f123bcf2.2013a"
            ]
        ]
    },
    {
        "id": "f123bcf2.2013a",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "AGV01On",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 490,
        "y": 2000,
        "wires": []
    },
    {
        "id": "6cdff21b.9bc1ac",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2040,
        "wires": [
            [
                "8cecf622.94ff58"
            ]
        ]
    },
    {
        "id": "b04fe1d9.f27fa",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 2100,
        "wires": [
            [
                "e74e48cc.2dc8d8"
            ]
        ]
    },
    {
        "id": "76c5df22.c50d5",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agvWorker1",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 650,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8cecf622.94ff58",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "AGV01Off",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 490,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ea862b7a.d23178",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "func": "flow.set('test', msg.payload);\nlet rawData = msg.payload;\nlet parsedData = {};\n\nlet processingPos = 0;\n\nlet header = Buffer.alloc(8);\nheader = rawData.toString('hex', processingPos, processingPos + 8);\nprocessingPos = 8;\n\nparsedData.header = header;\nparsedData.command = [];\n\nwhile(1) {\n    if(processingPos > rawData.length - 8) {\n        msg.parsedData = parsedData;\n        return msg;\n    }\n    let commandData = {};\n    commandData.action  = rawData.toString('hex', processingPos, processingPos + 1);\n    processingPos       = processingPos + 1;\n    \n    commandData.rfid    = rawData.toString('hex', processingPos, processingPos + 4);\n    processingPos       = processingPos + 4;\n    \n    commandData.velc    = rawData.toString('hex', processingPos, processingPos + 1);\n    processingPos       = processingPos + 1;\n    \n    commandData.dis     = rawData.toString('hex', processingPos, processingPos + 1);\n    processingPos       = processingPos + 1;\n    \n    parsedData.command.push(commandData);\n    \n}\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1560,
        "wires": [
            [
                "b4a4c17d.36cea"
            ]
        ]
    },
    {
        "id": "ab7fd37.7db453",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e74e48cc.2dc8d8",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "func": "msg.payload = flow.get('test');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2100,
        "wires": [
            [
                "76c5df22.c50d5"
            ]
        ]
    },
    {
        "id": "1b722067.ad392",
        "type": "link in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "links": [
            "53bc30f.9f769d"
        ],
        "x": 175,
        "y": 2220,
        "wires": [
            [
                "7e9e3105.64ef3"
            ]
        ]
    },
    {
        "id": "56f8d778.836ce8",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "func": "msg.topic = \"UPDATE `agv`.`agv` SET `isAvailable`='01' WHERE  `id`=1;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 2220,
        "wires": [
            [
                "41a31c19.11f894"
            ]
        ]
    },
    {
        "id": "41a31c19.11f894",
        "type": "mysql",
        "z": "d3057b7.7f9ca88",
        "mydb": "72bb343bf14ca049",
        "name": "",
        "x": 590,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "7e9e3105.64ef3",
        "type": "delay",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 280,
        "y": 2220,
        "wires": [
            [
                "56f8d778.836ce8"
            ]
        ]
    },
    {
        "id": "53bc30f.9f769d",
        "type": "link out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "links": [
            "1b722067.ad392"
        ],
        "x": 475,
        "y": 2960,
        "wires": []
    },
    {
        "id": "2fd88743.cc2248",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "17_27",
        "payloadType": "str",
        "x": 550,
        "y": 3040,
        "wires": [
            [
                "b13a8fad.62d7c",
                "53bc30f.9f769d"
            ]
        ]
    },
    {
        "id": "5dae1e16.2c5d6",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "12_18",
        "payloadType": "str",
        "x": 290,
        "y": 3180,
        "wires": [
            [
                "53bc30f.9f769d",
                "b13a8fad.62d7c"
            ]
        ]
    },
    {
        "id": "aa2962f9.2851",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2340,
        "wires": [
            [
                "d62b32bd.a6109"
            ]
        ]
    },
    {
        "id": "d62b32bd.a6109",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "Forward 1 step",
        "func": "// let buf = Buffer.from([0xBA, 0x01, 0x0F, 0xBD, 0x5B, 0x78, 0x60, 0x01, 0xC3, 0x90, 0x3C, 0x36, 0x01, 0x01, 0x99]);\nlet buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2340,
        "wires": [
            [
                "252b74b3.2d0a0c",
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "252b74b3.2d0a0c",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e6de414a.04a3b",
        "type": "mqtt out",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "agvWorker1",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 670,
        "y": 2400,
        "wires": []
    },
    {
        "id": "23e62af2.6703c6",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "90",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 2720,
        "wires": [
            [
                "e6de414a.04a3b",
                "77cecfa8.640ff"
            ]
        ]
    },
    {
        "id": "ec3d30e1.07c2f",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2720,
        "wires": [
            [
                "23e62af2.6703c6"
            ]
        ]
    },
    {
        "id": "f24cc5bb.a5ba58",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "-90",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 2580,
        "wires": [
            [
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "5d2c603.2d11aa",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2580,
        "wires": [
            [
                "f24cc5bb.a5ba58"
            ]
        ]
    },
    {
        "id": "23592eb3.055082",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "180",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2620,
        "wires": [
            [
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "b36a5d07.081e9",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2620,
        "wires": [
            [
                "23592eb3.055082"
            ]
        ]
    },
    {
        "id": "1d6e1a36.e5e636",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "-90",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 2720,
        "wires": [
            [
                "e6de414a.04a3b",
                "9b6b46f4.b8cd18"
            ]
        ]
    },
    {
        "id": "77cecfa8.640ff",
        "type": "delay",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 650,
        "y": 2720,
        "wires": [
            [
                "1d6e1a36.e5e636"
            ]
        ]
    },
    {
        "id": "9b6b46f4.b8cd18",
        "type": "delay",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 660,
        "y": 2780,
        "wires": [
            [
                "23e62af2.6703c6"
            ]
        ]
    },
    {
        "id": "a80e314f.fbdd4",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "90",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2520,
        "wires": [
            [
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "66608ad8.356e14",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2520,
        "wires": [
            [
                "a80e314f.fbdd4"
            ]
        ]
    },
    {
        "id": "7a5cd942.d8bd88",
        "type": "template",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "SO control",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"group\": {\n    \"hide\": [\n      \"AGV20_12_AS_AGV\",\n      \"AGV20_12_AS_AGV_ROTATION\",\n      \"AGV20_12_AS_AGV_SETTING\",\n      \"AGV20_12_AS_AGV_LOG\",\n      \"AGV20_12_AS_AGV_REALTIME_INFO\",\n      \"AGV20_12_PS_Dashboard\",\n      \"AGV20_12_PM_MODE\"\n    ],\n    \"show\": [\n      \"AGV20_12_SO_SIM_Dashboard\",\n      \"AGV20_12_SO_Log\",\n      \"AGV20_12_SO_Chart\"\n    ],\n    \"focus\": false\n  }\n}",
        "output": "json",
        "x": 770,
        "y": 160,
        "wires": [
            [
                "597767b8.629678"
            ]
        ]
    },
    {
        "id": "597767b8.629678",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "SO Control",
        "rules": [
            {
                "t": "set",
                "p": "ui.soControl",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b12573e3.4ac34",
        "type": "template",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "AS Control",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"group\": {\n    \"hide\": [\n        \"AGV20_12_SO_SIM_Dashboard\",\n        \"AGV20_12_SO_Log\",\n        \"AGV20_12_SO_Chart\",\n        \"AGV20_12_PS_Dashboard\",\n        \"AGV20_12_PM_MODE\"\n    ],\n    \"show\": [\n        \"AGV20_12_AS_AGV\",\n        \"AGV20_12_AS_AGV_ROTATION\",\n        \"AGV20_12_AS_AGV_SETTING\",\n        \"AGV20_12_AS_AGV_LOG\",\n        \"AGV20_12_AS_AGV_REALTIME_INFO\"  \n    ],\n    \"focus\": false\n  }\n}",
        "output": "json",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "aad68a8c.9142e8"
            ]
        ]
    },
    {
        "id": "aad68a8c.9142e8",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "AS Control",
        "rules": [
            {
                "t": "set",
                "p": "ui.asControl",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eb9e0b8f.827b28",
        "type": "template",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "PMControl",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"group\": {\n    \"hide\": [\n        \"AGV20_12_SO_SIM_Dashboard\",\n        \"AGV20_12_SO_Log\",\n        \"AGV20_12_SO_Chart\",\n        \"AGV20_12_AS_AGV\",\n        \"AGV20_12_AS_AGV_ROTATION\",\n        \"AGV20_12_AS_AGV_SETTING\",\n        \"AGV20_12_AS_AGV_LOG\",\n        \"AGV20_12_PS_Dashboard\",\n        \"AGV20_12_AS_AGV_REALTIME_INFO\" \n    ],\n    \"show\": [\n      \"AGV20_12_PM_MODE\" \n    ],\n    \"focus\": false\n  }\n}",
        "output": "json",
        "x": 770,
        "y": 200,
        "wires": [
            [
                "5f6197b6.e8c888"
            ]
        ]
    },
    {
        "id": "5f6197b6.e8c888",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "PM Control",
        "rules": [
            {
                "t": "set",
                "p": "ui.pmControl",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "84cce9ea.47cfe8",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "UI control",
        "func": "let uiControl = global.get('ui');\n\nswitch(msg.payload) {\n    case \"SYSTEM_OVERVIEW\":\n        msg.payload = uiControl.soControl;\n        global.set('ui.tab', \"SO\");\n        break;\n    case \"AGV_SEARCHING\":\n        msg.payload = uiControl.asControl;\n        global.set('ui.tab', \"AS\");\n        break;\n    case \"POD_MOVING\":\n        msg.payload = uiControl.pmControl;\n        global.set('ui.tab', \"PM\");\n        break;\n    case \"SO\":\n        msg.payload = uiControl.soControl;\n        global.set('ui.tab', \"SO\");\n        break;\n    case \"AS\":\n        msg.payload = uiControl.asControl;\n        global.set('ui.tab', \"AS\");\n        break;\n    case \"PM\":\n        msg.payload = uiControl.psControl;\n        global.set('ui.tab', \"PM\");\n        break;\n    case \"POD_SEARCHING\":\n        msg.payload = uiControl.psControl;\n        global.set('ui.tab', \"PS\");\n        break;\n    case \"PS\":\n        msg.payload = uiControl.psControl;\n        global.set('ui.tab', \"PS\");\n        break;\n    default:\n        msg.payload = uiControl.soControl;\n        global.set('ui.tab', \"SO\");\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 320,
        "wires": [
            [
                "3407e7ca.ddf9a8",
                "3cc37825.481fa8"
            ]
        ]
    },
    {
        "id": "3cc37825.481fa8",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "To Update Nav",
        "links": [
            "2f493e51.ada4e2",
            "e265ff4.d2674",
            "d31db292.9a0e8",
            "973b0150.86a99",
            "afe71771.2f42c8",
            "5912a1b8.95488",
            "6da8fc6d.c89514",
            "2ee9608f.75312"
        ],
        "x": 580,
        "y": 340,
        "wires": [],
        "l": true
    },
    {
        "id": "3189bcc1.bb7a64",
        "type": "inject",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2420,
        "wires": [
            [
                "9250e83e.40f0a8"
            ]
        ]
    },
    {
        "id": "76038103.0f83a",
        "type": "ui_ui_control",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "UI change",
        "events": "all",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "196e9529.5713cb"
            ]
        ]
    },
    {
        "id": "196e9529.5713cb",
        "type": "trigger",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "Stablize",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "49d3a376.d38dac"
            ]
        ]
    },
    {
        "id": "807bf33e.6a204",
        "type": "inject",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "196e9529.5713cb"
            ]
        ]
    },
    {
        "id": "e66b9db5.56086",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Check connection",
        "func": "if(msg.error.message !== \"Database not connected\") return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 740,
        "wires": [
            [
                "7615e517.87588c"
            ]
        ]
    },
    {
        "id": "808d47a1.c5fc48",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2440,
        "wires": [
            [
                "c0886859.8b1ba8"
            ]
        ]
    },
    {
        "id": "c0886859.8b1ba8",
        "type": "trigger",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 2440,
        "wires": [
            [
                "a80e314f.fbdd4"
            ]
        ]
    },
    {
        "id": "e9a0b1dc.21222",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 2780,
        "wires": [
            [
                "c0886859.8b1ba8",
                "9b6b46f4.b8cd18",
                "77cecfa8.640ff"
            ]
        ]
    },
    {
        "id": "d7d4b48a.80d2f8",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 2540,
        "wires": [
            [
                "451dccb3.e0a2c4"
            ]
        ]
    },
    {
        "id": "451dccb3.e0a2c4",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "up",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 2540,
        "wires": [
            [
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "947e0964.9edc88",
        "type": "inject",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 2600,
        "wires": [
            [
                "52e1af.4e9afe5"
            ]
        ]
    },
    {
        "id": "52e1af.4e9afe5",
        "type": "function",
        "z": "d3057b7.7f9ca88",
        "name": "down",
        "func": "let buf = Buffer.from([0xBA, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\nmsg.payload = buf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 2600,
        "wires": [
            [
                "e6de414a.04a3b"
            ]
        ]
    },
    {
        "id": "5e96f968.96a858",
        "type": "ui_template",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "group": "fc260c0b.664ca",
        "name": "Update button",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n      if (msg) {\n        let buttonsList = msg.buttonList;\n        console.log(buttonsList)\n        buttonsList.forEach(function(button){\n            let id      = button.id;\n            let color   = button.color;\n            let disable = button.disable;\n            let cursor  = button.cursor;\n            document.getElementById(id).style.background=color;\n            if(disable) {\n                document.getElementById(id).disabled = true;\n                document.getElementById(id).style.boxShadow = \"\";\n                document.getElementById(id).style.cursor = \"not-allowed\";\n            } else {\n                document.getElementById(id).disabled = false;\n                document.getElementById(id).style.cursor = \"pointer\";\n            }\n            // document.getElementById(id).style.boxShadow = \"0 0 0 1px #163772 inset,0 0 0 2px rgba(255, 255, 255, 0.15) inset,0 2px 0 0 #333797,0 4px 0 1px rgba(0, 0, 0, 0.4),0 4px 4px 1px rgba(0, 0, 0, 0.5)\";\n            document.getElementById(id).style.boxShadow = \"none\";\n            document.getElementById(id).style.backgroundImage =  \"-webkit-linear-gradient(283deg, rgba(255, 255, 255, 0.1) 50%, transparent 55%),-webkit-linear-gradient(top, rgba(255, 255, 255, 0.15), transparent)\";\n            \n            if(button.box_shadow !== null || button.box_shadow !== undefined) {\n                document.getElementById(id).style.boxShadow = button.box_shadow;\n            }\n            $(\"#my_\"+scope.$id).html(msg.payload);\n        \n        });\n      }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2882b34c.253fec",
        "type": "link in",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update button",
        "links": [
            "f0523f00.b2603",
            "8cf578a6.290918"
        ],
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "5e96f968.96a858",
                "3d549297.4472de"
            ]
        ],
        "l": true
    },
    {
        "id": "3d549297.4472de",
        "type": "debug",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 80,
        "wires": []
    },
    {
        "id": "e748b5e5.55f4f8",
        "type": "inject",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "",
        "props": [
            {
                "p": "buttonList",
                "v": "[{\"id\":\"startSystem\",\"color\":\"#097479\",\"disable\":false,\"cursor\":\"auto\"},{\"id\":\"stopSystem\",\"color\":\"gray\",\"disable\":true,\"cursor\":\"auto\"}]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "8d4afbed.303b58"
            ]
        ]
    },
    {
        "id": "9c5cb08c.e598e",
        "type": "ui_ui_control",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "UI change",
        "events": "all",
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "8d4afbed.303b58"
            ]
        ]
    },
    {
        "id": "8d4afbed.303b58",
        "type": "trigger",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Stablize",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "500",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 220,
        "wires": [
            [
                "b27f1747.2029f8",
                "39f8263a.3e4d2a"
            ]
        ]
    },
    {
        "id": "b27f1747.2029f8",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update buttons",
        "func": "// @ts-nocheck\nlet systemInfo          = global.get('systemInfo')\nlet systemRunningStatus = systemInfo.runningStatus;\n\nlet updateButtonCommand = [];\nlet updateStop          = {};\n\nif(!systemRunningStatus) {\n    updateStop.id      = \"startSystem\";\n    updateStop.color   = \"#097479\";\n    updateStop.disable = false;\n    updateStop.cursor  = \"auto\";\n    updateButtonCommand.push(updateStop);\n    \n    updateStop = {};\n    updateStop.id      = \"stopSystem\";\n    updateStop.color   = \"gray\";\n    updateStop.disable = true;\n    updateStop.cursor  = \"auto\";\n    updateButtonCommand.push(updateStop);\n} else {\n    updateStop.id      = \"startSystem\";\n    updateStop.color   = \"gray\";\n    updateStop.disable = true;\n    updateStop.cursor  = \"auto\";\n    updateButtonCommand.push(updateStop);\n    \n    updateStop = {};\n    updateStop.id      = \"stopSystem\";\n    updateStop.color   = \"#097479\";\n    updateStop.disable = false;\n    updateStop.cursor  = \"auto\";\n    updateButtonCommand.push(updateStop);\n}\n\n\nmsg.buttonList = updateButtonCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "5e96f968.96a858"
            ]
        ]
    },
    {
        "id": "973b0150.86a99",
        "type": "link in",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update Navigation",
        "links": [
            "3cc37825.481fa8",
            "f0523f00.b2603",
            "8cf578a6.290918"
        ],
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "39f8263a.3e4d2a"
            ]
        ],
        "l": true
    },
    {
        "id": "39f8263a.3e4d2a",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update navigation",
        "func": "let uiInfo = global.get('ui');\n\nlet updateButtonCommand = [];\nlet listTab             = ['so', 'as', 'ps', 'pm', 'pr'];\n\nlistTab.forEach(function(eachTab) {\n    let updateNav           = {};\n    updateNav.id      = `nav_${ eachTab }`;\n    updateNav.cursor  = \"auto\"; \n    updateNav.disable = false;\n    updateNav.box_shadow = \"none\";\n    if (eachTab === uiInfo.tab.toLowerCase() && global.get(\"systemInfo.runningStatus\") ) {\n        updateNav.color   = \"#097479\";\n    } else {\n        if (!global.get(\"systemInfo.runningStatus\")) updateNav.disable = true;\n        updateNav.color   = \"gray\";        \n    }\n    \n    updateButtonCommand.push(updateNav);\n});\n\n\nmsg.buttonList = updateButtonCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 260,
        "wires": [
            [
                "5e96f968.96a858"
            ]
        ]
    },
    {
        "id": "a05f16e7.e89258",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Global encoder",
        "func": "let encoder = {};\n\nlet actionCode              = {};\nactionCode.DIRECT_MOVE      = Buffer.from('01', 'hex').readUInt8(0);\nactionCode.ROTATE_90        = Buffer.from('02', 'hex').readUInt8(0);\nactionCode.ROTATE_M_90      = Buffer.from('03', 'hex').readUInt8(0);\nactionCode.ROTATE_180       = Buffer.from('04', 'hex').readUInt8(0);\nactionCode.STOP             = Buffer.from('05', 'hex').readUInt8(0);\nactionCode.LIFT_UP          = Buffer.from('06', 'hex').readUInt8(0);\nactionCode.LIFT_DOWN        = Buffer.from('07', 'hex').readUInt8(0);\nactionCode.POWER_ON         = Buffer.from('08', 'hex').readUInt8(0);\nactionCode.POWER_OFF        = Buffer.from('09', 'hex').readUInt8(0);\nactionCode.RESET            = Buffer.from('10', 'hex').readUInt8(0);\nactionCode.BACK_WARD        = Buffer.from('11', 'hex').readUInt8(0);\nactionCode.EMERGENCY_STOP   = Buffer.from('12', 'hex').readUInt8(0);\nactionCode.LED_ON           = Buffer.from('13', 'hex').readUInt8(0);\nactionCode.LED_OFF          = Buffer.from('14', 'hex').readUInt8(0);\n\nencoder.actionCode          = actionCode;\nglobal.set(\"encoder\", encoder);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "49d3a376.d38dac",
        "type": "change",
        "z": "329e27e2.5e5fb8",
        "g": "11f469d2.968bc6",
        "name": "Current Tab",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ui.tab",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "84cce9ea.47cfe8"
            ]
        ]
    },
    {
        "id": "c28307b6.893bc8",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "group": "b9099129.e3a02",
        "name": "AGV CAM",
        "order": 2,
        "width": "12",
        "height": "9",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1530,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "3a51eb93.727814",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update dropbox",
        "func": "let agvInfo = global.get('database.agvInfo');\nlet agvList = [];\nfor(let i in agvInfo) {\n    let currentAgv = 'AGV ' + agvInfo[i].id;\n    agvList.push({[currentAgv]: agvInfo[i].id});\n}\nmsg = {};\nmsg.payload = \"\";\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nif(systemRunningStatus) {\n    msg.options = agvList;\n    msg.enabled = true;\n} else {\n    msg.options = [];\n    msg.enabled = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 820,
        "wires": [
            [
                "1fdefc784bcac320"
            ]
        ]
    },
    {
        "id": "decfba0f.a66598",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Set selected AGV",
        "func": "let agvId                       = msg.payload;\nif(Array.isArray(agvId)) return;\nlet agvSearching                = global.get('ui.agvSearching');\n\nagvSearching.selectedAgv        = {};\n\nif(agvId !== null && agvId !== \"\" && agvId !== undefined) {\n    msg                         = {};\n    msg.agvId                   = agvId;\n    \n    agvSearching.selectedAgv.agvId  = agvId;\n    global.set('ui.agvSearching', agvSearching);\n    return msg;\n}\nelse {\n    global.set('ui.agvSearching.selectedAgv', {});\n    msg = {};\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 800,
        "wires": [
            [
                "9cf84816.65cd48",
                "141ee0ce.e0c07f"
            ]
        ]
    },
    {
        "id": "d31db292.9a0e8",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update charts",
        "links": [
            "9cf84816.65cd48",
            "8cf578a6.290918",
            "3cc37825.481fa8",
            "f0523f00.b2603"
        ],
        "x": 130,
        "y": 940,
        "wires": [
            [
                "cc38acf9.84a3",
                "9b87fa42.40aee8",
                "b2e6754829877c88",
                "9617bd53c4b2223f"
            ]
        ],
        "l": true
    },
    {
        "id": "9cf84816.65cd48",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "To update chart",
        "links": [
            "d31db292.9a0e8",
            "6da8fc6d.c89514"
        ],
        "x": 1060,
        "y": 800,
        "wires": [],
        "l": true
    },
    {
        "id": "9b87fa42.40aee8",
        "type": "trigger",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update delay",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 140,
        "y": 980,
        "wires": [
            [
                "fa620a5.a7d51f8"
            ]
        ]
    },
    {
        "id": "58b0ca87.4b39e4",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update speed and batt",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nlet selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\n// if user not yet selected agv \nif(!systemRunningStatus || !selectedAgv) return;\n\nlet query = \"SELECT batt,speed,orientation FROM agv WHERE id='\" + selectedAgv + \"';\"\nmsg.topic = query;\nmsg.agvId = selectedAgv;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1040,
        "wires": [
            [
                "87b97489.949208"
            ]
        ]
    },
    {
        "id": "5b034508.ba25fc",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update chart",
        "func": "// @ts-nocheck\nlet updateResult    = msg.payload[0];\nlet agvId           = msg.agvId;\nlet agvInfo         = global.get('database.agvInfo');\n\nagvInfo[agvId].batt         = updateResult.batt;\nagvInfo[agvId].speed        = updateResult.speed;\nagvInfo[agvId].orientation  = updateResult.orientation;\n\nlet msg2 = {};\nmsg2.payload    = updateResult.speed;\nmsg3            = {};\nmsg3.payload    = updateResult.orientation;\nmsg.payload     = updateResult.batt;\n\nreturn([msg, msg2, msg3]);",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "e797dd1af9944282"
            ],
            [
                "b4a2daa8e07c7ac1"
            ],
            [
                "35b7edd7.f1aec2"
            ]
        ]
    },
    {
        "id": "35b7edd7.f1aec2",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "d": true,
        "g": "83826ff7.aee2d",
        "name": "AGV Rotation",
        "group": "",
        "order": 1,
        "width": 5,
        "height": 5,
        "gtype": "compass",
        "title": "AGV Rotation",
        "label": "degree",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 980,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cc38acf9.84a3",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update rotation gauge",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nlet selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\n// if user not yet selected agv \nif(!systemRunningStatus || !selectedAgv) {\n    msg.payload = 0;\n    msg.enabled = false;\n    return msg;\n}\nlet agvInfo         = global.get('database.agvInfo');\nlet agvOrientation  = agvInfo[selectedAgv].orientation;\nmsg.payload         = agvOrientation;\nmsg.enabled         = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1080,
        "wires": [
            [
                "35b7edd7.f1aec2"
            ]
        ]
    },
    {
        "id": "c411c07b.79e98",
        "type": "ui_slider",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Speed level",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 6,
        "width": "5",
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "9d4db842.37fd78"
            ]
        ]
    },
    {
        "id": "9b196926.c4e998",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "LED",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 8,
        "width": "2",
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "ledControl",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "highlight",
        "oncolor": "#ffcc66",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "highlight",
        "offcolor": "gray",
        "animate": true,
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "59aaa80d.eab338",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "d": true,
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Human sensor",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "wifi_tethering",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "portable_wifi_off",
        "offcolor": "red",
        "animate": true,
        "x": 380,
        "y": 1260,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "5a608332.4be61c",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Safety sensor",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 11,
        "width": "3",
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "do_not_disturb_on",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "do_not_disturb_off",
        "offcolor": "red",
        "animate": true,
        "x": 380,
        "y": 1220,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "695e44d5.bf7dec",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "d": true,
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Power",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "power",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "power_settings_new",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "power_settings_new",
        "offcolor": "red",
        "animate": true,
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "dfcf83da.02ebf",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Object tracking",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "videocam",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "videocam_off",
        "offcolor": "gray",
        "animate": true,
        "x": 380,
        "y": 1340,
        "wires": [
            [
                "c9a91458a553fcdd"
            ]
        ]
    },
    {
        "id": "5912a1b8.95488",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update AGV dropbox",
        "links": [
            "f0523f00.b2603",
            "8cf578a6.290918",
            "3cc37825.481fa8"
        ],
        "x": 180,
        "y": 820,
        "wires": [
            [
                "3a51eb93.727814"
            ]
        ],
        "l": true
    },
    {
        "id": "cf229b97.68f968",
        "type": "ui_table",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "group": "70752b10.710534",
        "name": "AGV Log Table",
        "order": 1,
        "width": "16",
        "height": "13",
        "columns": [
            {
                "field": "col_agvId",
                "title": "AGV ID",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col_time",
                "title": "TimeStamp",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col_rfid",
                "title": "RFID",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col_action",
                "title": "Action code",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col_vel",
                "title": "Velocity",
                "width": "18%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col_dis",
                "title": "Distance",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "141ee0ce.e0c07f",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Get AGV CAM IP",
        "func": "let agvId   = msg.agvId;\nif(!agvId) return;\nlet agvInfo = global.get(\"database.agvInfo.\" + agvId);\nmsg.payload = agvInfo;\nmsg.agvCamIp = agvInfo.cam_ip;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 840,
        "wires": [
            [
                "8644e6f8.a2ed28"
            ]
        ]
    },
    {
        "id": "bf62594.bb0b1a8",
        "type": "template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Camera ON template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<body>\n\n<iframe scrolling=\"no\" frameBorder=\"0\" src=\"http://{{agvCamIp}}\" srcdoc=\"<h4 style='color: white; text-align: center;'>Connecting to AGV ...</h4>\" height=\"180%\" width=\"98%\" title=\"Iframe Example\" center no-repeat #333333;\"></iframe>\n\n</body>\n</html>",
        "output": "str",
        "x": 1320,
        "y": 800,
        "wires": [
            [
                "c28307b6.893bc8"
            ]
        ]
    },
    {
        "id": "8644e6f8.a2ed28",
        "type": "switch",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Check system satatus",
        "property": "systemInfo.runningStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "boolean.true",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "boolean.false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 840,
        "wires": [
            [
                "bf62594.bb0b1a8"
            ],
            [
                "64644373.3a6f4c"
            ]
        ]
    },
    {
        "id": "64644373.3a6f4c",
        "type": "template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Camera OFF template",
        "field": "template",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n\n<body>\n\n<iframe scrolling=\"no\" frameBorder=\"0\" src=\"\" srcdoc=\"<h4 style='color: white; text-align: center;'>AGV Live view</h4>\" height=\"100%\" width=\"98%\" title=\"Iframe Example\">\n    <h4>AGV Live view</h4>\n</iframe>\n\n</body>\n</html>",
        "output": "str",
        "x": 1320,
        "y": 880,
        "wires": [
            [
                "c28307b6.893bc8"
            ]
        ]
    },
    {
        "id": "e265ff4.d2674",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Disable Camera View",
        "links": [
            "8cf578a6.290918",
            "3cc37825.481fa8",
            "f0523f00.b2603"
        ],
        "x": 840,
        "y": 900,
        "wires": [
            [
                "6823396f.9e7ed8"
            ]
        ],
        "l": true
    },
    {
        "id": "9d4db842.37fd78",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1140,
        "wires": []
    },
    {
        "id": "87b97489.949208",
        "type": "mysql",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "mydb": "72bb343bf14ca049",
        "name": "",
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "5b034508.ba25fc"
            ]
        ]
    },
    {
        "id": "6823396f.9e7ed8",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Disable Camera",
        "func": "let systemRunningStatus = global.get(\"systemInfo.runningStatus\");\nlet selectedAgv = global.get('ui.agvSearching.selectedAgv.agvId');\n\nif( !systemRunningStatus || !selectedAgv ) {\n    return msg;\n} else return;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 900,
        "wires": [
            [
                "64644373.3a6f4c"
            ]
        ]
    },
    {
        "id": "fa620a5.a7d51f8",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Check ui",
        "func": "let currentUiPage = global.get('ui.tab');\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nlet selectedAgv = global.get('ui.agvSearching.selectedAgv.agvId');\n\nif( !systemRunningStatus ) return;\nif( currentUiPage !== \"AS\") return;\nif( !selectedAgv ) return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "58b0ca87.4b39e4",
                "cc38acf9.84a3",
                "b2e6754829877c88",
                "9617bd53c4b2223f"
            ]
        ]
    },
    {
        "id": "f3a2d0c3.2da8d",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Handle command",
        "func": "let selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\n\nif(!selectedAgv || !systemRunningStatus) return;\n\nlet command = msg.topic;\nswitch(command) {\n    case \"start\":\n    {\n        let buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        msg     = {};\n        msg.payload = buf;\n        msg.topic = `agvWorker${selectedAgv}`;\n        return msg;\n    }\n    case \"stop\":        // Emygency stop\n    {\n        let buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        msg     = {};\n        msg.payload = buf;\n        msg.topic = `agvWorker${selectedAgv}`;\n        return msg;\n    }\n    case \"reset\":\n    {\n        let buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        msg     = {};\n        msg.payload = buf;\n        msg.topic = `agvWorker${selectedAgv}`;\n        return msg;    \n    }\n    case \"power\":\n    {\n        let buf ;\n        if(msg.payload) {\n            buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        } else {\n            buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        }\n        msg     = {};\n        msg.payload = buf;\n        msg.topic = `agvWorker${selectedAgv}`;\n        return msg;    \n    }\n    case \"ledControl\":\n    {\n        let buf ;\n        if(msg.payload) {\n            buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        } else {\n            buf = Buffer.from([0xBA, selectedAgv, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x11, 0x11, 0x11, 0x11, 0x01, 0x01]);\n        }\n        msg     = {};\n        msg.payload = buf;\n        msg.topic = `agvWorker${selectedAgv}`;\n        return msg;    \n    }\n    default:\n        return;\n}\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1300,
        "wires": [
            [
                "fab4ff1b.44803",
                "a776736e.0dad7"
            ]
        ]
    },
    {
        "id": "a776736e.0dad7",
        "type": "mqtt out",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fab4ff1b.44803",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8416f28c.c93d4",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "En/Dis Buttons",
        "func": "let selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\n\n// node.warn(selectedAgv + \" \" + systemRunningStatus)\nif(!selectedAgv || !systemRunningStatus) {\n    msg         = {};\n    msg.payload = \"\";\n    msg.enabled = false;\n    return msg;\n} else {\n    msg         = {};\n    msg.payload = \"\";\n    msg.enabled = true;\n    return msg;\n}\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "c411c07b.79e98",
                "9b196926.c4e998",
                "59aaa80d.eab338",
                "5a608332.4be61c",
                "695e44d5.bf7dec",
                "dfcf83da.02ebf",
                "d5102bd4feee5504",
                "2df276ca22f32227"
            ]
        ]
    },
    {
        "id": "6da8fc6d.c89514",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "In En/Dis Buttons",
        "links": [
            "8cf578a6.290918",
            "f0523f00.b2603",
            "9cf84816.65cd48",
            "3cc37825.481fa8"
        ],
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "8416f28c.c93d4"
            ]
        ],
        "l": true
    },
    {
        "id": "8213bc9e.1e7b2",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Reload Log",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nlet currentTab          = global.get(\"ui.tab\");\n\nif(systemRunningStatus && currentTab === \"AS\") {\n    let logData = global.get('log.asLog');\n    let logArr  = [];\n    for(let i = 0; i < logData.length; i++) {\n        let aLogLine = logData[i].arguments[0][0];\n        logArr.push(aLogLine);\n    }\n    msg         = {};\n    msg.payload = logArr;\n    return msg;\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1400,
        "wires": [
            [
                "cf229b97.68f968"
            ]
        ]
    },
    {
        "id": "c2fe5a7b.cc1f28",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "parse data",
        "func": "let topic = msg.topic;\nif (!topic.includes(\"agvWorker\")) return;\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nlet currentTab          = global.get(\"ui.tab\");\n\nif(!systemRunningStatus) return;\n\nlet rawData         = msg.payload;\nlet parsedData      = {};\n\nlet processingPos   = 0;\n\nlet agvId           = rawData.readUIntLE(1, 1)\nlet header          = Buffer.alloc(8);\nheader              = rawData.toString('hex', processingPos, processingPos + 8);\nprocessingPos       = 8;\n\nparsedData.header   = header;\nparsedData.command  = [];\n\nlet itemTable       = {};\nwhile(1) {\n    let time            = new Date();\n    \n    let commandData     = {};\n                        \n    commandData.action  = Buffer.from(rawData.toString('hex', processingPos, processingPos + 1), 'hex').readUInt8(0);\n    processingPos       = processingPos + 1;\n    \n    commandData.rfid    = rawData.toString('hex', processingPos, processingPos + 4).toUpperCase();\n    processingPos       = processingPos + 4;\n    \n    commandData.velc    = rawData.toString('hex', processingPos, processingPos + 1);\n    processingPos       = processingPos + 1;\n    \n    commandData.dis     = rawData.toString('hex', processingPos, processingPos + 1);\n    processingPos       = processingPos + 1;\n    \n    commandData.time    = String(time).substr(4,20) + \":\" + addCharAtFirst (String(time.getMilliseconds()), 3, '0');\n    \n    itemTable[\"col_agvId\"]      = agvId;\n    itemTable[\"col_time\"]       = commandData.time;\n    itemTable[\"col_action\"]     = findAction(commandData.action);\n    itemTable[\"col_rfid\"]       = commandData.rfid;\n    itemTable[\"col_vel\"]        = commandData.velc;\n    itemTable[\"col_dis\"]        = commandData.dis;\n    \n    let asLog   = global.get('log.asLog');\n    msg         = {};\n    msg.payload = { command:\"addRow\", \"arguments\": [[itemTable], false], returnPromise: true };\n    asLog.push( { command:\"addRow\", \"arguments\": [[itemTable], false], returnPromise: true } );\n    global.set('log.asLog', asLog);\n    \n    if(systemRunningStatus && currentTab === \"AS\") node.send(msg);\n    \n    parsedData.command.push(commandData);\n\n    if (processingPos > rawData.length - 8) {\n        // msg.parsedData = parsedData;\n        // return msg;\n        return;\n    }\n}\n\nreturn ;\n\n\nfunction findAction(actionCodeHex) {\n    let actionCodeEncoder   = global.get('encoder.actionCode');\n    for(let actionCode in actionCodeEncoder) {\n        if( actionCodeEncoder[actionCode] === actionCodeHex ) return actionCode;\n    }\n    return null;\n}\n\nfunction addCharAtFirst(strMessage, messageLength, dummyChar){\n    let result= String(strMessage);\n    for(let i = strMessage.length; i < messageLength; i++){\n        result = dummyChar + result;\n    }\n    return result;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1340,
        "wires": [
            [
                "cf229b97.68f968"
            ]
        ]
    },
    {
        "id": "d2ec6d10.33f06",
        "type": "mqtt in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": false,
        "x": 990,
        "y": 1340,
        "wires": [
            [
                "c2fe5a7b.cc1f28"
            ]
        ]
    },
    {
        "id": "ed4ca2fc.f6112",
        "type": "ui_ui_control",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Events",
        "events": "all",
        "x": 990,
        "y": 1380,
        "wires": [
            [
                "2d4432a2.98880e"
            ]
        ]
    },
    {
        "id": "2d4432a2.98880e",
        "type": "trigger",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Stable",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "250",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1110,
        "y": 1380,
        "wires": [
            [
                "8213bc9e.1e7b2"
            ]
        ]
    },
    {
        "id": "afe71771.2f42c8",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Display Log",
        "links": [
            "3cc37825.481fa8"
        ],
        "x": 1090,
        "y": 1420,
        "wires": [
            [
                "8213bc9e.1e7b2"
            ]
        ],
        "l": true
    },
    {
        "id": "e3235eb6.a7af7",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Clear log msg",
        "func": "/******************************************************************************\n * @brief   Function to Clear log data\n * @Sprint 6\n * @author  LamTD\n ******************************************************************************/\n \nmsg.payload =   {   \"command\"       :\"clearData\",\n                    \"arguments\"     :[],\n                    \"returnPromise\" :true\n                };\n                \nmsg.topic   = \"clearLog\";\nglobal.set('log.asLog', []);\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1300,
        "wires": [
            [
                "cf229b97.68f968"
            ]
        ]
    },
    {
        "id": "d4408925.624888",
        "type": "ui_switch",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "label": "Clear Log",
        "tooltip": "",
        "group": "7fd55f12.2eabf",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "clear",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "clear",
        "offcolor": "red",
        "animate": false,
        "x": 1000,
        "y": 1300,
        "wires": [
            [
                "e3235eb6.a7af7"
            ]
        ]
    },
    {
        "id": "90bdc5e8.944548",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "group": "2d5a4608.62374a",
        "name": "Style",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\nhtml,\nbody {\n  height: 100%;\n}\nbody {\n  background: #e6e6e6;\n  font-family: 'Source Sans Pro', sans-serif;\n}\n.container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n.h1 {\n  font-family: 'Alegreya Sans', sans-serif;\n  font-weight: 300;\n  margin-top: 0;\n  background-color: gray;\n  color: none !important;\n}\n.h4 {\n  font-family: 'Alegreya Sans', sans-serif;\n  font-weight: 300;\n  margin-top: 0;\n  background-color: #a6a6a6 !important;\n}\n.control-group {\n  display: inline-block;\n  vertical-align: top;\n  background: #a6a6a6;\n  text-align: left;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.1);\n  padding: 30px;\n  width: 25%;\n  height: 210px;\n  margin: 10px;\n}\n.control {\n  display: block;\n  position: relative;\n  padding-left: 30px;\n  margin-bottom: 15px;\n  cursor: pointer;\n}\n.control input {\n  position: absolute;\n  z-index: -1;\n  opacity: 0;\n}\n.control__indicator {\n  position: absolute;\n  top: 0px;\n  left: 0;\n  height: 16px;\n  width: 16px;\n  background: #fff;\n  border: 1px solid #ccc;\n/*\n  .control:hover input:not([disabled]):checked ~ &,\n  .control input:checked:focus ~ &\n    border-color: #666\n    */\n}\n.control--checkbox .control__indicator {\n  border-radius: 3px;\n}\n.control--radio .control__indicator {\n  border-radius: 50%;\n}\n.control:hover input:not([disabled]) ~ .control__indicator,\n.control input:focus ~ .control__indicator {\n  border-color: #666;\n}\n.control input:checked ~ .control__indicator {\n  background: #fff;\n}\n.control input:disabled ~ .control__indicator {\n  background: #e6e6e6;\n  opacity: 0.6;\n  pointer-events: none;\n}\n.control__indicator:after {\n  content: '';\n  position: absolute;\n  display: none;\n}\n.control input:checked ~ .control__indicator:after {\n  display: block;\n}\n.control--checkbox .control__indicator:after {\n  left: 5px;\n  top: 0px;\n  width: 5px;\n  height: 12px;\n  border: solid #34bb92;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n.control--checkbox input:disabled ~ .control__indicator:after {\n  border-color: #7b7b7b;\n}\n.control--radio .control__indicator:after {\n  left: 5px;\n  top: 5px;\n  height: 6px;\n  width: 6px;\n  border-radius: 50%;\n  background: #34bb92;\n}\n.control--radio input:disabled ~ .control__indicator:after {\n  background: #7b7b7b;\n}\n.select {\n  position: relative;\n  display: inline-block;\n  margin-bottom: 15px;\n  width: 100%;\n}\n.select select {\n  display: inline-block;\n  width: 100%;\n  cursor: pointer;\n  padding: 10px 15px;\n  outline: 0;\n  border: 0;\n  border-radius: 0;\n  background: #e6e6e6;\n  color: #7b7b7b;\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n.select select::-ms-expand {\n  display: none;\n}\n.select select:hover,\n.select select:focus {\n  color: #000;\n  background: #ccc;\n}\n.select select:disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n.select__arrow {\n  position: absolute;\n  top: 16px;\n  right: 15px;\n  width: 0;\n  height: 0;\n  pointer-events: none;\n  border-style: solid;\n  border-width: 8px 5px 0 5px;\n  border-color: #7b7b7b transparent transparent transparent;\n}\n.select select:hover ~ .select__arrow,\n.select select:focus ~ .select__arrow {\n  border-top-color: #000;\n}\n.select select:disabled ~ .select__arrow {\n  border-top-color: #ccc;\n}\n.nr-dashboard-template p, .nr-dashboard-template h1, .nr-dashboard-template h2, .nr-dashboard-template h3, .nr-dashboard-template h4 {\n    color: #eeeeee !important;\n    background-color: #333333;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 330,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "f5d4e15d.a1cc5",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2380,
        "wires": []
    },
    {
        "id": "61a31c55.397684",
        "type": "ui_svg_graphics",
        "z": "329e27e2.5e5fb8",
        "group": "5aa96ce1.38d674",
        "order": 1,
        "width": 15,
        "height": 13,
        "svgString": "<svg x=\"0\" y=\"0\" height=\"680\" width=\"790\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    \n</svg>",
        "clickableShapes": [
            {
                "targetId": "[id^=map_pod]",
                "action": "click",
                "payload": "[id^=map]",
                "payloadType": "str",
                "topic": "[id^=map]"
            }
        ],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": false,
        "sendMsgWhenLoaded": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": 150,
        "name": "POD searching",
        "x": 280,
        "y": 1640,
        "wires": [
            [
                "5512ec22.9d0054",
                "8a55ae0e.f0fdb",
                "4fa5cf6c.68de2"
            ]
        ]
    },
    {
        "id": "870aed2.7443f1",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "name": "PS In",
        "links": [
            "8cf578a6.290918"
        ],
        "x": 90,
        "y": 1640,
        "wires": [
            [
                "61a31c55.397684"
            ]
        ],
        "l": true
    },
    {
        "id": "5512ec22.9d0054",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "name": "PS Out",
        "links": [],
        "x": 480,
        "y": 1640,
        "wires": [],
        "l": true
    },
    {
        "id": "3a4f73d9.2a91dc",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "name": "Draw map",
        "func": "const mapDashboardHeight    = 680;\nconst mapDashboardWidth     = 800;\nconst BLOCKED_CLOOR         = '#ffffcc'\nconst GRID_COLOR            = '#b3b3b3'\n\nlet systemRunningStatus = global.get('systemInfo.runningStatus');\nif(!systemRunningStatus) return;\n\nlet currentTab      = global.get('ui.tab');\nif(currentTab !== \"PS\") return;\n\nlet commonFunction  = global.get('commonFunction');\nlet svgTemplate     = global.get('map_template');\nlet gridSize        = 0;\nlet data            = global.get('database');\nlet mapSize         = data.mapSize;\nlet floorGrid       = data.mapInfo;\n\n// SVG draw command\nlet drawCommand     = [];\ndrawCommand.push(global.get('mapTemplate.ClearMap'));\n\n\n// Determine fit width or height\n// Fit width\nif (mapDashboardWidth/mapSize.x < mapDashboardHeight/mapSize.y) {\n    gridSize = Math.floor(mapDashboardWidth/mapSize.x);\n}\n// Fit height\nelse {\n    gridSize = Math.floor(mapDashboardHeight/mapSize.y);\n}\n\n// Draw grid floor\nfor(let gridUnit in floorGrid) {\n    let id              = `map_floor_${gridUnit}`;\n    let x               = floorGrid[gridUnit].x * gridSize;\n    let y               = floorGrid[gridUnit].y * gridSize;\n    let height          = gridSize;\n    let width           = gridSize;\n    let fill            = GRID_COLOR;\n    if(floorGrid[gridUnit].is_active === 1) {\n        fill            = GRID_COLOR;\n    }\n    if(floorGrid[gridUnit].is_blocked === 1) {\n        fill            = BLOCKED_CLOOR;\n    }\n    let stroke          = 'gray';\n    let stroke_width    = '1px';\n    let newGridFlow = commonFunction.drawSquare(id, x, y, height, width, fill, stroke, stroke_width);\n    drawCommand.push(newGridFlow);\n}\n\n// Display POD\nlet podList = data.podInfo;\nfor(let eachPod in podList) {\n    let podId       = `map_pod_${eachPod}`;\n    let podNodeId   = podList[eachPod].node_id;\n    \n    if(!podNodeId) continue;\n    \n    let podX        = floorGrid[podNodeId].x * gridSize;\n    let podY        = floorGrid[podNodeId].y * gridSize;\n    let podColor    = '#0066ff';\n    let newPod      = commonFunction.addPod(podId, podX, podY, gridSize, gridSize, podColor, gridSize);\n    drawCommand.push(newPod);\n}\n\nmsg.payload = drawCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1700,
        "wires": [
            [
                "61a31c55.397684",
                "5a54b6ef.e95f48"
            ]
        ]
    },
    {
        "id": "8db5532c.4f247",
        "type": "trigger",
        "z": "329e27e2.5e5fb8",
        "name": "Stablize",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "300",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 260,
        "y": 1760,
        "wires": [
            [
                "3a4f73d9.2a91dc"
            ]
        ]
    },
    {
        "id": "10555f80.d7e1c1",
        "type": "ui_ui_control",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "events": "all",
        "x": 100,
        "y": 1760,
        "wires": [
            [
                "8db5532c.4f247"
            ]
        ]
    },
    {
        "id": "2ee9608f.75312",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "name": "PS Display",
        "links": [
            "3cc37825.481fa8",
            "f0523f00.b2603",
            "8cf578a6.290918"
        ],
        "x": 100,
        "y": 1700,
        "wires": [
            [
                "3a4f73d9.2a91dc"
            ]
        ],
        "l": true
    },
    {
        "id": "5c9d7cf9.9210f4",
        "type": "template",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "PS Control",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"group\": {\n    \"hide\": [\n        \"AGV20_12_SO_SIM_Dashboard\",\n        \"AGV20_12_SO_Log\",\n        \"AGV20_12_SO_Chart\",\n        \"AGV20_12_PM_MODE\",\n        \"AGV20_12_AS_AGV\",\n        \"AGV20_12_AS_AGV_ROTATION\",\n        \"AGV20_12_AS_AGV_SETTING\",\n        \"AGV20_12_AS_AGV_LOG\",\n        \"AGV20_12_AS_AGV_REALTIME_INFO\"\n    ],\n    \"show\": [\n        \"AGV20_12_PS_Dashboard\"\n    ],\n    \"focus\": false\n  }\n}",
        "output": "json",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "1da0d95e.087237"
            ]
        ]
    },
    {
        "id": "1da0d95e.087237",
        "type": "change",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "PS Control",
        "rules": [
            {
                "t": "set",
                "p": "ui.psControl",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5a54b6ef.e95f48",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8a55ae0e.f0fdb",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4fa5cf6c.68de2",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "name": "",
        "func": "let clickedElementId    = msg.elementId;\nlet podId               = clickedElementId.split('map_pod_')[1];\n\nnode.warn(podId)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "f27fa0cc.3d36b",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Get products data",
        "func": "let query       = \"SELECT * FROM products\";\nmsg.topic       = query;\nmsg.queryType   = 'PRODUCTS';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "6d7f7c91.e09b14"
            ]
        ]
    },
    {
        "id": "dd05e34.850a92",
        "type": "function",
        "z": "2b5ed7dd.464b08",
        "g": "a2843df8.8fd42",
        "name": "Set products data",
        "func": "let result  = msg.payload;\n\nlet allData = global.get('database');\nif(!allData) allData = {};\n\nlet productsData = {};\nfor(let i in result) {\n    productsData[result[i].id] = result[i];\n}\nglobal.set('database.productsData', productsData);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "0306ef3c0f65546a",
        "type": "mqtt in",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "topic": "AGV_01",
        "qos": "2",
        "datatype": "auto",
        "broker": "2ad73bd9.a6f884",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 190,
        "y": 4220,
        "wires": [
            [
                "525a6eb03fae869e"
            ]
        ]
    },
    {
        "id": "525a6eb03fae869e",
        "type": "debug",
        "z": "d3057b7.7f9ca88",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 4220,
        "wires": []
    },
    {
        "id": "1fdefc784bcac320",
        "type": "ui_dropdown",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Select AGV",
        "label": "",
        "tooltip": "",
        "place": "Select AGV",
        "group": "7fd55f12.2eabf",
        "order": 4,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 620,
        "y": 820,
        "wires": [
            [
                "decfba0f.a66598"
            ]
        ]
    },
    {
        "id": "d7d875e6eeafbe73",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "group": "7fd55f12.2eabf",
        "name": "Start",
        "order": 1,
        "width": "2",
        "height": 1,
        "format": "<md-button id=\"start_agv\" ng-click=\"send({topic: 'start'})\" style=\"border-radius: 4px; font-size: 10px; box-shadow: none;\">\n    Start\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "79b8bbca71455483",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "group": "7fd55f12.2eabf",
        "name": "Stop",
        "order": 2,
        "width": "2",
        "height": 1,
        "format": "<md-button id=\"stop_agv\" ng-click=\"send({topic: 'stop'})\" style=\"border-radius: 4px; font-size: 10px; box-shadow: none;\">\n    Stop\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 350,
        "y": 1420,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "7e136a8b501d9df1",
        "type": "ui_template",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "group": "7fd55f12.2eabf",
        "name": "Reset",
        "order": 3,
        "width": "2",
        "height": 1,
        "format": "<md-button id=\"reset_agv\" ng-click=\"send({topic: 'reset'})\" style=\"border-radius: 4px; font-size: 10px; box-shadow: none;\">\n    Reset\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 350,
        "y": 1460,
        "wires": [
            [
                "f3a2d0c3.2da8d"
            ]
        ]
    },
    {
        "id": "9fc22c4ffd8d47ad",
        "type": "link in",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update button control AGV",
        "links": [
            "d5102bd4feee5504",
            "f0523f00.b2603",
            "8cf578a6.290918"
        ],
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "34b279fc4db64e44"
            ]
        ],
        "l": true
    },
    {
        "id": "34b279fc4db64e44",
        "type": "function",
        "z": "e4c679fa.2843d8",
        "g": "d3b2edfe.881ac",
        "name": "Update buttons",
        "func": "// @ts-nocheck\nlet systemInfo          = global.get('systemInfo')\nlet systemRunningStatus = systemInfo.runningStatus;\n\nlet updateButtonCommand = [];\nlet updateStop          = {};\n\nlet selectedAgv = global.get('ui.agvSearching.selectedAgv.agvId');\n// if user not yet selected agv \nif (!systemRunningStatus || !selectedAgv) {\n    updateStop.id       = \"start_agv\";\n    updateStop.color    = \"gray\";\n    updateStop.disable  = true;\n    updateStop.cursor   = \"auto\";\n    updateButtonCommand.push(updateStop);\n    \n    updateStop = {};\n    updateStop.id       = \"stop_agv\";\n    updateStop.color    = \"gray\";\n    updateStop.disable  = true;\n    updateStop.cursor   = \"auto\";\n    updateButtonCommand.push(updateStop);\n    \n    updateStop          = {};\n    updateStop.id       = \"reset_agv\";\n    updateStop.color    = \"gray\";\n    updateStop.disable  = true;\n    updateStop.cursor   = \"auto\";\n    updateButtonCommand.push(updateStop);\n} else {\n    updateStop.id = \"start_agv\";\n    updateStop.color = \"#097479\";\n    updateStop.disable = false;\n    updateStop.cursor = \"auto\";\n    updateButtonCommand.push(updateStop);\n\n    updateStop = {};\n    updateStop.id = \"stop_agv\";\n    updateStop.color = \"#097479\";\n    updateStop.disable = false;\n    updateStop.cursor = \"auto\";\n    updateButtonCommand.push(updateStop);\n\n    updateStop = {};\n    updateStop.id = \"reset_agv\";\n    updateStop.color = \"#097479\";\n    updateStop.disable = false;\n    updateStop.cursor = \"auto\";\n    updateButtonCommand.push(updateStop);\n}\n\n\nmsg.buttonList = updateButtonCommand;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 300,
        "wires": [
            [
                "5e96f968.96a858"
            ]
        ]
    },
    {
        "id": "d5102bd4feee5504",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update button",
        "links": [
            "9fc22c4ffd8d47ad"
        ],
        "x": 120,
        "y": 1300,
        "wires": [],
        "l": true
    },
    {
        "id": "e797dd1af9944282",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "group": "6ac30a25.9ffc34",
        "order": 0,
        "width": "2",
        "height": "2",
        "gtype": "wave",
        "title": "Battery",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 960,
        "y": 960,
        "wires": []
    },
    {
        "id": "b2e6754829877c88",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update rotation gauge",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nlet selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\n// if user not yet selected agv \nif(!systemRunningStatus || !selectedAgv) {\n    msg.payload = 0;\n    msg.enabled = false;\n    return msg;\n}\nlet agvInfo         = global.get('database.agvInfo');\nlet batt            = agvInfo[selectedAgv].batt;\nmsg.payload         = batt;\nmsg.enabled         = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 960,
        "wires": [
            [
                "e797dd1af9944282"
            ]
        ]
    },
    {
        "id": "b4a2daa8e07c7ac1",
        "type": "ui_gauge",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "group": "6ac30a25.9ffc34",
        "order": 0,
        "width": "2",
        "height": "2",
        "gtype": "gage",
        "title": "Velocity",
        "label": "cm/s",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 960,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9617bd53c4b2223f",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Update rotation gauge",
        "func": "let systemRunningStatus = global.get('systemInfo.runningStatus');\nlet selectedAgv         = global.get('ui.agvSearching.selectedAgv.agvId');\n// if user not yet selected agv \nif(!systemRunningStatus || !selectedAgv) {\n    msg.payload = 0;\n    msg.enabled = false;\n    return msg;\n}\nlet agvInfo         = global.get('database.agvInfo');\nlet batt            = agvInfo[selectedAgv].batt;\nmsg.payload         = batt;\nmsg.enabled         = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "b4a2daa8e07c7ac1"
            ]
        ]
    },
    {
        "id": "6bf81264b15d62f7",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Select AGV to move",
        "func": "// @ts-nocheck\nlet topic = msg.topic;\nif (topic != \"[id^=map_pod]\" && topic != \"[id^=map_floor]\") return;\nlet manualMove = global.get('ui.manualMove');\nif(!manualMove) manualMove = {};\n\n// Check system is running and agv is availabe\nif (topic == \"[id^=map_pod]\") {\n    let podId = msg.elementId.split('_').slice(-1)[0];\n    let systemStatus = global.get('systemInfo.runningStatus');\n    if (!systemStatus) return;\n    manualMove.podId = podId;\n    global.set('ui.manualMove', manualMove);\n    // Notify user to choose end point\n    let msg1 = {}\n    msg1.topic = \"Manual moving mode\";\n    msg1.payload = `POD ${podId} is choosen. Please choose this POD's destination in short`;\n    node.send([msg1, null]);\n}\nelse if (topic == \"[id^=map_floor]\" ) {\n    let selectedPodId = global.get('ui.manualMove.podId')\n    if (!selectedPodId) return;\n    else {\n        let selectedNodeId = msg.elementId.split(\"_\").slice(-1)[0];\n        let msg1 = {}\n        msg1.topic = \"Manual moving mode\";\n        msg1.payload = `POD ${selectedPodId} is choosen and will move to node ${selectedNodeId}`;\n        node.send([msg1, null]);\n        let msg2 = {}\n        msg2.payload = `${selectedPodId}_${selectedNodeId}`\n        node.send([msg1, msg2]);\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 160,
        "wires": [
            [
                "543742d355c8bb4b",
                "61240b4bf25f198b"
            ],
            [
                "fd02487e514e6af4"
            ]
        ]
    },
    {
        "id": "543742d355c8bb4b",
        "type": "ui_toast",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "position": "top right",
        "displayTime": "5",
        "highlight": "lightblue",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1450,
        "y": 100,
        "wires": []
    },
    {
        "id": "61240b4bf25f198b",
        "type": "delay",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1420,
        "y": 140,
        "wires": [
            [
                "d2e67cdec1543aef"
            ]
        ]
    },
    {
        "id": "d2e67cdec1543aef",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "Manual moving mode timeout",
        "func": "// Reset seleted AGV\nglobal.set('ui.manualMove', {});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fd02487e514e6af4",
        "type": "mqtt out",
        "z": "329e27e2.5e5fb8",
        "g": "5424fb79.190bc4",
        "name": "",
        "topic": "dashboardPodCarryingRequest",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2ad73bd9.a6f884",
        "x": 1490,
        "y": 180,
        "wires": []
    },
    {
        "id": "c9a91458a553fcdd",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Check running status",
        "func": "if (!msg.payload || !global.get(\"systemInfo.runningStatus\")) return;\nmsg = {};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1340,
        "wires": [
            [
                "4a030f20fea59781"
            ]
        ]
    },
    {
        "id": "4a030f20fea59781",
        "type": "unsafe-function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Object tracking script",
        "func": "\n\nvar fs = require(\"fs\");\n\nfunction PythonshellInNode() {\n    // this.pyfile = config.pyfile;\n    this.pyfile = \"/Users/lamtran/Desktop/agv_object_tracking_script/test.py\"\n    // this.virtualenv = config.virtualenv;\n    this.virtualenv = \"/Users/lamtran/python_global_env/\"\n\n    if (!fs.existsSync(this.pyfile)) {\n        node.warn( 'pyfile not exist');\n    }\n\n    if (this.virtualenv && !fs.existsSync(this.virtualenv)) {\n        node.warn( 'configured virtualenv not exist, consider remove or change');\n    }\n\n    this.stdInData = false;\n    this.continuous = true;\n    this.pydir = this.pyfile.substring(0, this.pyfile.lastIndexOf('/'));\n    this.pyfile = this.pyfile.substring(this.pyfile.lastIndexOf('/') + 1, this.pyfile.length);\n    this.spawn = require('child_process').spawn;\n    this.onStatus = () => { }\n\n    msg = msg.payload || '';\n    if (typeof msg === 'object') {\n        msg = JSON.stringify(msg);\n    } else if (typeof msg !== 'string') {\n        msg = msg.toString();\n    }\n\n    if (this.continuous && !this.stdInData && this.py != null) {\n        node.warn(\"Not accepting input\")\n        return\n    }\n\n    var spawnCmd = (this.virtualenv ? this.virtualenv + '/bin/' : '') + 'python'\n\n    if (this.stdInData) {\n        if (!this.py) {\n            this.py = this.spawn(spawnCmd, ['-u', this.pyfile], {\n                cwd: this.pydir,\n                detached: true\n            });\n            this.firstExecution = true\n        } else {\n            this.firstExecution = false\n        }\n    } else {\n        this.py = this.spawn(spawnCmd, ['-u', this.pyfile, msg], {\n            cwd: this.pydir\n        });\n    }\n\n    node.warn(\"Standby\")\n\n    // subsequence message, no need to setup callbacks\n    if (this.stdInData && !this.firstExecution) {\n        this.py.stdin.write(msg + '\\n')\n        return \n    }\n\n    var py = this.py;\n    var dataString = '';\n    var errString = '';\n\n    py.stdout.on('data', data => { \n        clearTimeout(this.standbyTimer)\n\n        let dataStr = data.toString();\n\n        dataString += dataStr;\n\n        if (dataString.endsWith(\"\\n\")) {\n            if (this.continuous) {\n                // out({ payload: dataString });\n                node.send(msg = { payload: dataString })\n                dataString = ''\n            }\n        }\n\n        this.standbyTimer = setTimeout(() => {\n            node.warn(\"Standby\")\n        }, 2000)\n\n    });\n\n    py.stderr.on('data', data => {\n        errString += String(data);// just a different way to do it\n        // this.onStatus({ fill: \"red\", shape: \"dot\", text: \"Error: \" + errString })\n        node.warn(errString)\n    });\n\n    py.stderr.on('error', console.log)\n    py.stdout.on('error', console.log)\n    py.stdin.on('error', console.log)\n    py.on('error', console.log)\n\n    py.on('close', code => {\n        if (code) {\n            // err('exit code: ' + code + ', ' + errString);\n            // this.onStatus({ fill: \"red\", shape: \"dot\", text: \"Exited: \" + code })\\\n        } else if (!this.continuous) {\n            // out({ payload: dataString.trim() });\n            // this.onStatus({ fill: \"green\", shape: \"dot\", text: \"Done\" })\n        } else {\n            // this.onStatus({ fill: \"yellow\", shape: \"dot\", text: \"Script Closed\" })\n            msg = {};\n            msg.closed = true;\n            node.send(msg);\n        }\n        this.py = null\n        setTimeout(() => {\n            // this.onStatus({})\n        }, 2000)\n    });\n\n    if (this.stdInData) {\n        py.stdin.write(msg + '\\n')\n    }\n};\n\nPythonshellInNode.prototype.onClose = function () {\n    node.warn(\"my warning\");\n    if (this.py) {\n        this.py.kill()\n        this.py = null\n    }\n};\n\nPythonshellInNode.prototype.setStatusCallback = function (callback) {\n    this.onStatus = callback\n};\n\nPythonshellInNode();\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 1380,
        "wires": [
            [
                "489efd7be48550a0",
                "032798b037181c98"
            ]
        ]
    },
    {
        "id": "2df276ca22f32227",
        "type": "change",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 1340,
        "wires": [
            [
                "dfcf83da.02ebf"
            ]
        ]
    },
    {
        "id": "28c3469d7fec9c7f",
        "type": "link in",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Reset Object tracking button",
        "links": [
            "c1eb4305ca4e8ae2"
        ],
        "x": 140,
        "y": 1380,
        "wires": [
            [
                "2df276ca22f32227"
            ]
        ],
        "l": true
    },
    {
        "id": "489efd7be48550a0",
        "type": "function",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Reset button",
        "func": "if (msg.hasOwnProperty(\"closed\") && msg.closed) return msg;\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1420,
        "wires": [
            [
                "966d36c79316e6ab",
                "c1eb4305ca4e8ae2"
            ]
        ]
    },
    {
        "id": "966d36c79316e6ab",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c1eb4305ca4e8ae2",
        "type": "link out",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "Reset object tracking button",
        "links": [
            "28c3469d7fec9c7f"
        ],
        "x": 860,
        "y": 1420,
        "wires": [],
        "l": true
    },
    {
        "id": "032798b037181c98",
        "type": "debug",
        "z": "329e27e2.5e5fb8",
        "g": "83826ff7.aee2d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1460,
        "wires": []
    }
]